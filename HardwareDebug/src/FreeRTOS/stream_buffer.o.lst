   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"stream_buffer.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvBytesInBuffer,"ax",%progbits
  17              		.align	2
  18              		.arch armv7-a
  19              		.arch_extension mp
  20              		.arch_extension sec
  21              		.syntax unified
  22              		.arm
  23              		.fpu neon
  25              	prvBytesInBuffer:
  26              	.LVL0:
  27              	.LFB19:
  28              		.file 1 "../src/FreeRTOS/stream_buffer.c"
   1:../src/FreeRTOS/stream_buffer.c **** /*
   2:../src/FreeRTOS/stream_buffer.c ****  * FreeRTOS Kernel V10.4.3 LTS Patch 1
   3:../src/FreeRTOS/stream_buffer.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../src/FreeRTOS/stream_buffer.c ****  *
   5:../src/FreeRTOS/stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../src/FreeRTOS/stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../src/FreeRTOS/stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
   8:../src/FreeRTOS/stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../src/FreeRTOS/stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../src/FreeRTOS/stream_buffer.c ****  * subject to the following conditions:
  11:../src/FreeRTOS/stream_buffer.c ****  *
  12:../src/FreeRTOS/stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../src/FreeRTOS/stream_buffer.c ****  * copies or substantial portions of the Software.
  14:../src/FreeRTOS/stream_buffer.c ****  *
  15:../src/FreeRTOS/stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../src/FreeRTOS/stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../src/FreeRTOS/stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../src/FreeRTOS/stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../src/FreeRTOS/stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../src/FreeRTOS/stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../src/FreeRTOS/stream_buffer.c ****  *
  22:../src/FreeRTOS/stream_buffer.c ****  * https://www.FreeRTOS.org
  23:../src/FreeRTOS/stream_buffer.c ****  * https://github.com/FreeRTOS
  24:../src/FreeRTOS/stream_buffer.c ****  *
  25:../src/FreeRTOS/stream_buffer.c ****  */
  26:../src/FreeRTOS/stream_buffer.c **** 
  27:../src/FreeRTOS/stream_buffer.c **** /* Standard includes. */
  28:../src/FreeRTOS/stream_buffer.c **** #include <stdint.h>
  29:../src/FreeRTOS/stream_buffer.c **** #include <string.h>
  30:../src/FreeRTOS/stream_buffer.c **** 
  31:../src/FreeRTOS/stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:../src/FreeRTOS/stream_buffer.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  33:../src/FreeRTOS/stream_buffer.c ****  * task.h is included from an application file. */
  34:../src/FreeRTOS/stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:../src/FreeRTOS/stream_buffer.c **** 
  36:../src/FreeRTOS/stream_buffer.c **** /* FreeRTOS includes. */
  37:../src/FreeRTOS/stream_buffer.c **** #include "FreeRTOS.h"
  38:../src/FreeRTOS/stream_buffer.c **** #include "task.h"
  39:../src/FreeRTOS/stream_buffer.c **** #include "stream_buffer.h"
  40:../src/FreeRTOS/stream_buffer.c **** 
  41:../src/FreeRTOS/stream_buffer.c **** #if ( configUSE_TASK_NOTIFICATIONS != 1 )
  42:../src/FreeRTOS/stream_buffer.c ****     #error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  43:../src/FreeRTOS/stream_buffer.c **** #endif
  44:../src/FreeRTOS/stream_buffer.c **** 
  45:../src/FreeRTOS/stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  46:../src/FreeRTOS/stream_buffer.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:../src/FreeRTOS/stream_buffer.c ****  * for the header files above, but not in this file, in order to generate the
  48:../src/FreeRTOS/stream_buffer.c ****  * correct privileged Vs unprivileged linkage and placement. */
  49:../src/FreeRTOS/stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  50:../src/FreeRTOS/stream_buffer.c **** 
  51:../src/FreeRTOS/stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  52:../src/FreeRTOS/stream_buffer.c ****  * or #defined the notification macros away, them provide default implementations
  53:../src/FreeRTOS/stream_buffer.c ****  * that uses task notifications. */
  54:../src/FreeRTOS/stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overridden. */
  55:../src/FreeRTOS/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  56:../src/FreeRTOS/stream_buffer.c ****     #define sbRECEIVE_COMPLETED( pxStreamBuffer )                         \
  57:../src/FreeRTOS/stream_buffer.c ****     vTaskSuspendAll();                                                    \
  58:../src/FreeRTOS/stream_buffer.c ****     {                                                                     \
  59:../src/FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )              \
  60:../src/FreeRTOS/stream_buffer.c ****         {                                                                 \
  61:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend, \
  62:../src/FreeRTOS/stream_buffer.c ****                                   ( uint32_t ) 0,                         \
  63:../src/FreeRTOS/stream_buffer.c ****                                   eNoAction );                            \
  64:../src/FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToSend = NULL;                \
  65:../src/FreeRTOS/stream_buffer.c ****         }                                                                 \
  66:../src/FreeRTOS/stream_buffer.c ****     }                                                                     \
  67:../src/FreeRTOS/stream_buffer.c ****     ( void ) xTaskResumeAll();
  68:../src/FreeRTOS/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  69:../src/FreeRTOS/stream_buffer.c **** 
  70:../src/FreeRTOS/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  71:../src/FreeRTOS/stream_buffer.c ****     #define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,                            \
  72:../src/FreeRTOS/stream_buffer.c ****                                           pxHigherPriorityTaskWoken )                \
  73:../src/FreeRTOS/stream_buffer.c ****     {                                                                                \
  74:../src/FreeRTOS/stream_buffer.c ****         UBaseType_t uxSavedInterruptStatus;                                          \
  75:../src/FreeRTOS/stream_buffer.c ****                                                                                      \
  76:../src/FreeRTOS/stream_buffer.c ****         uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();  \
  77:../src/FreeRTOS/stream_buffer.c ****         {                                                                            \
  78:../src/FreeRTOS/stream_buffer.c ****             if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )                     \
  79:../src/FreeRTOS/stream_buffer.c ****             {                                                                        \
  80:../src/FreeRTOS/stream_buffer.c ****                 ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend, \
  81:../src/FreeRTOS/stream_buffer.c ****                                              ( uint32_t ) 0,                         \
  82:../src/FreeRTOS/stream_buffer.c ****                                              eNoAction,                              \
  83:../src/FreeRTOS/stream_buffer.c ****                                              pxHigherPriorityTaskWoken );            \
  84:../src/FreeRTOS/stream_buffer.c ****                 ( pxStreamBuffer )->xTaskWaitingToSend = NULL;                       \
  85:../src/FreeRTOS/stream_buffer.c ****             }                                                                        \
  86:../src/FreeRTOS/stream_buffer.c ****         }                                                                            \
  87:../src/FreeRTOS/stream_buffer.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );                 \
  88:../src/FreeRTOS/stream_buffer.c ****     }
  89:../src/FreeRTOS/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
  90:../src/FreeRTOS/stream_buffer.c **** 
  91:../src/FreeRTOS/stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
  92:../src/FreeRTOS/stream_buffer.c ****  * or #defined the notification macro away, them provide a default implementation
  93:../src/FreeRTOS/stream_buffer.c ****  * that uses task notifications. */
  94:../src/FreeRTOS/stream_buffer.c **** #ifndef sbSEND_COMPLETED
  95:../src/FreeRTOS/stream_buffer.c ****     #define sbSEND_COMPLETED( pxStreamBuffer )                               \
  96:../src/FreeRTOS/stream_buffer.c ****     vTaskSuspendAll();                                                       \
  97:../src/FreeRTOS/stream_buffer.c ****     {                                                                        \
  98:../src/FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )              \
  99:../src/FreeRTOS/stream_buffer.c ****         {                                                                    \
 100:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive, \
 101:../src/FreeRTOS/stream_buffer.c ****                                   ( uint32_t ) 0,                            \
 102:../src/FreeRTOS/stream_buffer.c ****                                   eNoAction );                               \
 103:../src/FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;                \
 104:../src/FreeRTOS/stream_buffer.c ****         }                                                                    \
 105:../src/FreeRTOS/stream_buffer.c ****     }                                                                        \
 106:../src/FreeRTOS/stream_buffer.c ****     ( void ) xTaskResumeAll();
 107:../src/FreeRTOS/stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 108:../src/FreeRTOS/stream_buffer.c **** 
 109:../src/FreeRTOS/stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 110:../src/FreeRTOS/stream_buffer.c ****     #define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )       \
 111:../src/FreeRTOS/stream_buffer.c ****     {                                                                                   \
 112:../src/FreeRTOS/stream_buffer.c ****         UBaseType_t uxSavedInterruptStatus;                                             \
 113:../src/FreeRTOS/stream_buffer.c ****                                                                                         \
 114:../src/FreeRTOS/stream_buffer.c ****         uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();     \
 115:../src/FreeRTOS/stream_buffer.c ****         {                                                                               \
 116:../src/FreeRTOS/stream_buffer.c ****             if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )                     \
 117:../src/FreeRTOS/stream_buffer.c ****             {                                                                           \
 118:../src/FreeRTOS/stream_buffer.c ****                 ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive, \
 119:../src/FreeRTOS/stream_buffer.c ****                                              ( uint32_t ) 0,                            \
 120:../src/FreeRTOS/stream_buffer.c ****                                              eNoAction,                                 \
 121:../src/FreeRTOS/stream_buffer.c ****                                              pxHigherPriorityTaskWoken );               \
 122:../src/FreeRTOS/stream_buffer.c ****                 ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;                       \
 123:../src/FreeRTOS/stream_buffer.c ****             }                                                                           \
 124:../src/FreeRTOS/stream_buffer.c ****         }                                                                               \
 125:../src/FreeRTOS/stream_buffer.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );                    \
 126:../src/FreeRTOS/stream_buffer.c ****     }
 127:../src/FreeRTOS/stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 128:../src/FreeRTOS/stream_buffer.c **** /*lint -restore (9026) */
 129:../src/FreeRTOS/stream_buffer.c **** 
 130:../src/FreeRTOS/stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 131:../src/FreeRTOS/stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH    ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 132:../src/FreeRTOS/stream_buffer.c **** 
 133:../src/FreeRTOS/stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 134:../src/FreeRTOS/stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER          ( ( uint8_t ) 1 ) /* Set if the stream buffer was create
 135:../src/FreeRTOS/stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 2 ) /* Set if the stream buffer was create
 136:../src/FreeRTOS/stream_buffer.c **** 
 137:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 138:../src/FreeRTOS/stream_buffer.c **** 
 139:../src/FreeRTOS/stream_buffer.c **** /* Structure that hold state information on the buffer. */
 140:../src/FreeRTOS/stream_buffer.c **** typedef struct StreamBufferDef_t                 /*lint !e9058 Style convention uses tag. */
 141:../src/FreeRTOS/stream_buffer.c **** {
 142:../src/FreeRTOS/stream_buffer.c ****     volatile size_t xTail;                       /* Index to the next item to read within the buffe
 143:../src/FreeRTOS/stream_buffer.c ****     volatile size_t xHead;                       /* Index to the next item to write within the buff
 144:../src/FreeRTOS/stream_buffer.c ****     size_t xLength;                              /* The length of the buffer pointed to by pucBuffe
 145:../src/FreeRTOS/stream_buffer.c ****     size_t xTriggerLevelBytes;                   /* The number of bytes that must be in the stream 
 146:../src/FreeRTOS/stream_buffer.c ****     volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or
 147:../src/FreeRTOS/stream_buffer.c ****     volatile TaskHandle_t xTaskWaitingToSend;    /* Holds the handle of a task waiting to send data
 148:../src/FreeRTOS/stream_buffer.c ****     uint8_t * pucBuffer;                         /* Points to the buffer itself - that is - the RAM
 149:../src/FreeRTOS/stream_buffer.c ****     uint8_t ucFlags;
 150:../src/FreeRTOS/stream_buffer.c **** 
 151:../src/FreeRTOS/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 152:../src/FreeRTOS/stream_buffer.c ****         UBaseType_t uxStreamBufferNumber; /* Used for tracing purposes. */
 153:../src/FreeRTOS/stream_buffer.c ****     #endif
 154:../src/FreeRTOS/stream_buffer.c **** } StreamBuffer_t;
 155:../src/FreeRTOS/stream_buffer.c **** 
 156:../src/FreeRTOS/stream_buffer.c **** /*
 157:../src/FreeRTOS/stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 158:../src/FreeRTOS/stream_buffer.c ****  */
 159:../src/FreeRTOS/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 160:../src/FreeRTOS/stream_buffer.c **** 
 161:../src/FreeRTOS/stream_buffer.c **** /*
 162:../src/FreeRTOS/stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer message buffer.
 163:../src/FreeRTOS/stream_buffer.c ****  * Returns the number of bytes written, which will either equal xCount in the
 164:../src/FreeRTOS/stream_buffer.c ****  * success case, or 0 if there was not enough space in the buffer (in which case
 165:../src/FreeRTOS/stream_buffer.c ****  * no data is written into the buffer).
 166:../src/FreeRTOS/stream_buffer.c ****  */
 167:../src/FreeRTOS/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer,
 168:../src/FreeRTOS/stream_buffer.c ****                                      const uint8_t * pucData,
 169:../src/FreeRTOS/stream_buffer.c ****                                      size_t xCount ) PRIVILEGED_FUNCTION;
 170:../src/FreeRTOS/stream_buffer.c **** 
 171:../src/FreeRTOS/stream_buffer.c **** /*
 172:../src/FreeRTOS/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 173:../src/FreeRTOS/stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 174:../src/FreeRTOS/stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 175:../src/FreeRTOS/stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 176:../src/FreeRTOS/stream_buffer.c ****  * buffer's data storage area.
 177:../src/FreeRTOS/stream_buffer.c ****  */
 178:../src/FreeRTOS/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t * pxStreamBuffer,
 179:../src/FreeRTOS/stream_buffer.c ****                                         void * pvRxData,
 180:../src/FreeRTOS/stream_buffer.c ****                                         size_t xBufferLengthBytes,
 181:../src/FreeRTOS/stream_buffer.c ****                                         size_t xBytesAvailable,
 182:../src/FreeRTOS/stream_buffer.c ****                                         size_t xBytesToStoreMessageLength ) PRIVILEGED_FUNCTION;
 183:../src/FreeRTOS/stream_buffer.c **** 
 184:../src/FreeRTOS/stream_buffer.c **** /*
 185:../src/FreeRTOS/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 186:../src/FreeRTOS/stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 187:../src/FreeRTOS/stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 188:../src/FreeRTOS/stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 189:../src/FreeRTOS/stream_buffer.c ****  * data storage area.
 190:../src/FreeRTOS/stream_buffer.c ****  */
 191:../src/FreeRTOS/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 192:../src/FreeRTOS/stream_buffer.c ****                                        const void * pvTxData,
 193:../src/FreeRTOS/stream_buffer.c ****                                        size_t xDataLengthBytes,
 194:../src/FreeRTOS/stream_buffer.c ****                                        size_t xSpace,
 195:../src/FreeRTOS/stream_buffer.c ****                                        size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 196:../src/FreeRTOS/stream_buffer.c **** 
 197:../src/FreeRTOS/stream_buffer.c **** /*
 198:../src/FreeRTOS/stream_buffer.c ****  * Read xMaxCount bytes from the pxStreamBuffer message buffer and write them
 199:../src/FreeRTOS/stream_buffer.c ****  * to pucData.
 200:../src/FreeRTOS/stream_buffer.c ****  */
 201:../src/FreeRTOS/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t * pxStreamBuffer,
 202:../src/FreeRTOS/stream_buffer.c ****                                       uint8_t * pucData,
 203:../src/FreeRTOS/stream_buffer.c ****                                       size_t xMaxCount,
 204:../src/FreeRTOS/stream_buffer.c ****                                       size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
 205:../src/FreeRTOS/stream_buffer.c **** 
 206:../src/FreeRTOS/stream_buffer.c **** /*
 207:../src/FreeRTOS/stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 208:../src/FreeRTOS/stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 209:../src/FreeRTOS/stream_buffer.c ****  */
 210:../src/FreeRTOS/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 211:../src/FreeRTOS/stream_buffer.c ****                                           uint8_t * const pucBuffer,
 212:../src/FreeRTOS/stream_buffer.c ****                                           size_t xBufferSizeBytes,
 213:../src/FreeRTOS/stream_buffer.c ****                                           size_t xTriggerLevelBytes,
 214:../src/FreeRTOS/stream_buffer.c ****                                           uint8_t ucFlags ) PRIVILEGED_FUNCTION;
 215:../src/FreeRTOS/stream_buffer.c **** 
 216:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 217:../src/FreeRTOS/stream_buffer.c **** 
 218:../src/FreeRTOS/stream_buffer.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 219:../src/FreeRTOS/stream_buffer.c **** 
 220:../src/FreeRTOS/stream_buffer.c ****     StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes,
 221:../src/FreeRTOS/stream_buffer.c ****                                                      size_t xTriggerLevelBytes,
 222:../src/FreeRTOS/stream_buffer.c ****                                                      BaseType_t xIsMessageBuffer )
 223:../src/FreeRTOS/stream_buffer.c ****     {
 224:../src/FreeRTOS/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 225:../src/FreeRTOS/stream_buffer.c ****         uint8_t ucFlags;
 226:../src/FreeRTOS/stream_buffer.c **** 
 227:../src/FreeRTOS/stream_buffer.c ****         /* In case the stream buffer is going to be used as a message buffer
 228:../src/FreeRTOS/stream_buffer.c ****          * (that is, it will hold discrete messages with a little meta data that
 229:../src/FreeRTOS/stream_buffer.c ****          * says how big the next message is) check the buffer will be large enough
 230:../src/FreeRTOS/stream_buffer.c ****          * to hold at least one message. */
 231:../src/FreeRTOS/stream_buffer.c ****         if( xIsMessageBuffer == pdTRUE )
 232:../src/FreeRTOS/stream_buffer.c ****         {
 233:../src/FreeRTOS/stream_buffer.c ****             /* Is a message buffer but not statically allocated. */
 234:../src/FreeRTOS/stream_buffer.c ****             ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
 235:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 236:../src/FreeRTOS/stream_buffer.c ****         }
 237:../src/FreeRTOS/stream_buffer.c ****         else
 238:../src/FreeRTOS/stream_buffer.c ****         {
 239:../src/FreeRTOS/stream_buffer.c ****             /* Not a message buffer and not statically allocated. */
 240:../src/FreeRTOS/stream_buffer.c ****             ucFlags = 0;
 241:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 242:../src/FreeRTOS/stream_buffer.c ****         }
 243:../src/FreeRTOS/stream_buffer.c **** 
 244:../src/FreeRTOS/stream_buffer.c ****         configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 245:../src/FreeRTOS/stream_buffer.c **** 
 246:../src/FreeRTOS/stream_buffer.c ****         /* A trigger level of 0 would cause a waiting task to unblock even when
 247:../src/FreeRTOS/stream_buffer.c ****          * the buffer was empty. */
 248:../src/FreeRTOS/stream_buffer.c ****         if( xTriggerLevelBytes == ( size_t ) 0 )
 249:../src/FreeRTOS/stream_buffer.c ****         {
 250:../src/FreeRTOS/stream_buffer.c ****             xTriggerLevelBytes = ( size_t ) 1;
 251:../src/FreeRTOS/stream_buffer.c ****         }
 252:../src/FreeRTOS/stream_buffer.c **** 
 253:../src/FreeRTOS/stream_buffer.c ****         /* A stream buffer requires a StreamBuffer_t structure and a buffer.
 254:../src/FreeRTOS/stream_buffer.c ****          * Both are allocated in a single call to pvPortMalloc().  The
 255:../src/FreeRTOS/stream_buffer.c ****          * StreamBuffer_t structure is placed at the start of the allocated memory
 256:../src/FreeRTOS/stream_buffer.c ****          * and the buffer follows immediately after.  The requested size is
 257:../src/FreeRTOS/stream_buffer.c ****          * incremented so the free space is returned as the user would expect -
 258:../src/FreeRTOS/stream_buffer.c ****          * this is a quirk of the implementation that means otherwise the free
 259:../src/FreeRTOS/stream_buffer.c ****          * space would be reported as one byte smaller than would be logically
 260:../src/FreeRTOS/stream_buffer.c ****          * expected. */
 261:../src/FreeRTOS/stream_buffer.c ****         if( xBufferSizeBytes < ( xBufferSizeBytes + 1 + sizeof( StreamBuffer_t ) ) )
 262:../src/FreeRTOS/stream_buffer.c ****         {
 263:../src/FreeRTOS/stream_buffer.c ****             xBufferSizeBytes++;
 264:../src/FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 265:../src/FreeRTOS/stream_buffer.c ****         }
 266:../src/FreeRTOS/stream_buffer.c ****         else
 267:../src/FreeRTOS/stream_buffer.c ****         {
 268:../src/FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = NULL;
 269:../src/FreeRTOS/stream_buffer.c ****         }
 270:../src/FreeRTOS/stream_buffer.c ****         
 271:../src/FreeRTOS/stream_buffer.c **** 
 272:../src/FreeRTOS/stream_buffer.c ****         if( pucAllocatedMemory != NULL )
 273:../src/FreeRTOS/stream_buffer.c ****         {
 274:../src/FreeRTOS/stream_buffer.c ****             prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory,       /* Structu
 275:../src/FreeRTOS/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 276:../src/FreeRTOS/stream_buffer.c ****                                           xBufferSizeBytes,
 277:../src/FreeRTOS/stream_buffer.c ****                                           xTriggerLevelBytes,
 278:../src/FreeRTOS/stream_buffer.c ****                                           ucFlags );
 279:../src/FreeRTOS/stream_buffer.c **** 
 280:../src/FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffe
 281:../src/FreeRTOS/stream_buffer.c ****         }
 282:../src/FreeRTOS/stream_buffer.c ****         else
 283:../src/FreeRTOS/stream_buffer.c ****         {
 284:../src/FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 285:../src/FreeRTOS/stream_buffer.c ****         }
 286:../src/FreeRTOS/stream_buffer.c **** 
 287:../src/FreeRTOS/stream_buffer.c ****         return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as alloca
 288:../src/FreeRTOS/stream_buffer.c ****     }
 289:../src/FreeRTOS/stream_buffer.c **** 
 290:../src/FreeRTOS/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 291:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 292:../src/FreeRTOS/stream_buffer.c **** 
 293:../src/FreeRTOS/stream_buffer.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 294:../src/FreeRTOS/stream_buffer.c **** 
 295:../src/FreeRTOS/stream_buffer.c ****     StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 296:../src/FreeRTOS/stream_buffer.c ****                                                            size_t xTriggerLevelBytes,
 297:../src/FreeRTOS/stream_buffer.c ****                                                            BaseType_t xIsMessageBuffer,
 298:../src/FreeRTOS/stream_buffer.c ****                                                            uint8_t * const pucStreamBufferStorageAr
 299:../src/FreeRTOS/stream_buffer.c ****                                                            StaticStreamBuffer_t * const pxStaticStr
 300:../src/FreeRTOS/stream_buffer.c ****     {
 301:../src/FreeRTOS/stream_buffer.c ****         StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !
 302:../src/FreeRTOS/stream_buffer.c ****         StreamBufferHandle_t xReturn;
 303:../src/FreeRTOS/stream_buffer.c ****         uint8_t ucFlags;
 304:../src/FreeRTOS/stream_buffer.c **** 
 305:../src/FreeRTOS/stream_buffer.c ****         configASSERT( pucStreamBufferStorageArea );
 306:../src/FreeRTOS/stream_buffer.c ****         configASSERT( pxStaticStreamBuffer );
 307:../src/FreeRTOS/stream_buffer.c ****         configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 308:../src/FreeRTOS/stream_buffer.c **** 
 309:../src/FreeRTOS/stream_buffer.c ****         /* A trigger level of 0 would cause a waiting task to unblock even when
 310:../src/FreeRTOS/stream_buffer.c ****          * the buffer was empty. */
 311:../src/FreeRTOS/stream_buffer.c ****         if( xTriggerLevelBytes == ( size_t ) 0 )
 312:../src/FreeRTOS/stream_buffer.c ****         {
 313:../src/FreeRTOS/stream_buffer.c ****             xTriggerLevelBytes = ( size_t ) 1;
 314:../src/FreeRTOS/stream_buffer.c ****         }
 315:../src/FreeRTOS/stream_buffer.c **** 
 316:../src/FreeRTOS/stream_buffer.c ****         if( xIsMessageBuffer != pdFALSE )
 317:../src/FreeRTOS/stream_buffer.c ****         {
 318:../src/FreeRTOS/stream_buffer.c ****             /* Statically allocated message buffer. */
 319:../src/FreeRTOS/stream_buffer.c ****             ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 320:../src/FreeRTOS/stream_buffer.c ****         }
 321:../src/FreeRTOS/stream_buffer.c ****         else
 322:../src/FreeRTOS/stream_buffer.c ****         {
 323:../src/FreeRTOS/stream_buffer.c ****             /* Statically allocated stream buffer. */
 324:../src/FreeRTOS/stream_buffer.c ****             ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 325:../src/FreeRTOS/stream_buffer.c ****         }
 326:../src/FreeRTOS/stream_buffer.c **** 
 327:../src/FreeRTOS/stream_buffer.c ****         /* In case the stream buffer is going to be used as a message buffer
 328:../src/FreeRTOS/stream_buffer.c ****          * (that is, it will hold discrete messages with a little meta data that
 329:../src/FreeRTOS/stream_buffer.c ****          * says how big the next message is) check the buffer will be large enough
 330:../src/FreeRTOS/stream_buffer.c ****          * to hold at least one message. */
 331:../src/FreeRTOS/stream_buffer.c ****         configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 332:../src/FreeRTOS/stream_buffer.c **** 
 333:../src/FreeRTOS/stream_buffer.c ****         #if ( configASSERT_DEFINED == 1 )
 334:../src/FreeRTOS/stream_buffer.c ****             {
 335:../src/FreeRTOS/stream_buffer.c ****                 /* Sanity check that the size of the structure used to declare a
 336:../src/FreeRTOS/stream_buffer.c ****                  * variable of type StaticStreamBuffer_t equals the size of the real
 337:../src/FreeRTOS/stream_buffer.c ****                  * message buffer structure. */
 338:../src/FreeRTOS/stream_buffer.c ****                 volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 339:../src/FreeRTOS/stream_buffer.c ****                 configASSERT( xSize == sizeof( StreamBuffer_t ) );
 340:../src/FreeRTOS/stream_buffer.c ****             } /*lint !e529 xSize is referenced is configASSERT() is defined. */
 341:../src/FreeRTOS/stream_buffer.c ****         #endif /* configASSERT_DEFINED */
 342:../src/FreeRTOS/stream_buffer.c **** 
 343:../src/FreeRTOS/stream_buffer.c ****         if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 344:../src/FreeRTOS/stream_buffer.c ****         {
 345:../src/FreeRTOS/stream_buffer.c ****             prvInitialiseNewStreamBuffer( pxStreamBuffer,
 346:../src/FreeRTOS/stream_buffer.c ****                                           pucStreamBufferStorageArea,
 347:../src/FreeRTOS/stream_buffer.c ****                                           xBufferSizeBytes,
 348:../src/FreeRTOS/stream_buffer.c ****                                           xTriggerLevelBytes,
 349:../src/FreeRTOS/stream_buffer.c ****                                           ucFlags );
 350:../src/FreeRTOS/stream_buffer.c **** 
 351:../src/FreeRTOS/stream_buffer.c ****             /* Remember this was statically allocated in case it is ever deleted
 352:../src/FreeRTOS/stream_buffer.c ****              * again. */
 353:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 354:../src/FreeRTOS/stream_buffer.c **** 
 355:../src/FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 356:../src/FreeRTOS/stream_buffer.c **** 
 357:../src/FreeRTOS/stream_buffer.c ****             xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requ
 358:../src/FreeRTOS/stream_buffer.c ****         }
 359:../src/FreeRTOS/stream_buffer.c ****         else
 360:../src/FreeRTOS/stream_buffer.c ****         {
 361:../src/FreeRTOS/stream_buffer.c ****             xReturn = NULL;
 362:../src/FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 363:../src/FreeRTOS/stream_buffer.c ****         }
 364:../src/FreeRTOS/stream_buffer.c **** 
 365:../src/FreeRTOS/stream_buffer.c ****         return xReturn;
 366:../src/FreeRTOS/stream_buffer.c ****     }
 367:../src/FreeRTOS/stream_buffer.c **** 
 368:../src/FreeRTOS/stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 369:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 370:../src/FreeRTOS/stream_buffer.c **** 
 371:../src/FreeRTOS/stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 372:../src/FreeRTOS/stream_buffer.c **** {
 373:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 374:../src/FreeRTOS/stream_buffer.c **** 
 375:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 376:../src/FreeRTOS/stream_buffer.c **** 
 377:../src/FreeRTOS/stream_buffer.c ****     traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 378:../src/FreeRTOS/stream_buffer.c **** 
 379:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 380:../src/FreeRTOS/stream_buffer.c ****     {
 381:../src/FreeRTOS/stream_buffer.c ****         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 382:../src/FreeRTOS/stream_buffer.c ****             {
 383:../src/FreeRTOS/stream_buffer.c ****                 /* Both the structure and the buffer were allocated using a single call
 384:../src/FreeRTOS/stream_buffer.c ****                 * to pvPortMalloc(), hence only one call to vPortFree() is required. */
 385:../src/FreeRTOS/stream_buffer.c ****                 vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics req
 386:../src/FreeRTOS/stream_buffer.c ****             }
 387:../src/FreeRTOS/stream_buffer.c ****         #else
 388:../src/FreeRTOS/stream_buffer.c ****             {
 389:../src/FreeRTOS/stream_buffer.c ****                 /* Should not be possible to get here, ucFlags must be corrupt.
 390:../src/FreeRTOS/stream_buffer.c ****                  * Force an assert. */
 391:../src/FreeRTOS/stream_buffer.c ****                 configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 392:../src/FreeRTOS/stream_buffer.c ****             }
 393:../src/FreeRTOS/stream_buffer.c ****         #endif
 394:../src/FreeRTOS/stream_buffer.c ****     }
 395:../src/FreeRTOS/stream_buffer.c ****     else
 396:../src/FreeRTOS/stream_buffer.c ****     {
 397:../src/FreeRTOS/stream_buffer.c ****         /* The structure and buffer were not allocated dynamically and cannot be
 398:../src/FreeRTOS/stream_buffer.c ****          * freed - just scrub the structure so future use will assert. */
 399:../src/FreeRTOS/stream_buffer.c ****         ( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 400:../src/FreeRTOS/stream_buffer.c ****     }
 401:../src/FreeRTOS/stream_buffer.c **** }
 402:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 403:../src/FreeRTOS/stream_buffer.c **** 
 404:../src/FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 405:../src/FreeRTOS/stream_buffer.c **** {
 406:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 407:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn = pdFAIL;
 408:../src/FreeRTOS/stream_buffer.c **** 
 409:../src/FreeRTOS/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 410:../src/FreeRTOS/stream_buffer.c ****         UBaseType_t uxStreamBufferNumber;
 411:../src/FreeRTOS/stream_buffer.c ****     #endif
 412:../src/FreeRTOS/stream_buffer.c **** 
 413:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 414:../src/FreeRTOS/stream_buffer.c **** 
 415:../src/FreeRTOS/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 416:../src/FreeRTOS/stream_buffer.c ****         {
 417:../src/FreeRTOS/stream_buffer.c ****             /* Store the stream buffer number so it can be restored after the
 418:../src/FreeRTOS/stream_buffer.c ****              * reset. */
 419:../src/FreeRTOS/stream_buffer.c ****             uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 420:../src/FreeRTOS/stream_buffer.c ****         }
 421:../src/FreeRTOS/stream_buffer.c ****     #endif
 422:../src/FreeRTOS/stream_buffer.c **** 
 423:../src/FreeRTOS/stream_buffer.c ****     /* Can only reset a message buffer if there are no tasks blocked on it. */
 424:../src/FreeRTOS/stream_buffer.c ****     taskENTER_CRITICAL();
 425:../src/FreeRTOS/stream_buffer.c ****     {
 426:../src/FreeRTOS/stream_buffer.c ****         if( pxStreamBuffer->xTaskWaitingToReceive == NULL )
 427:../src/FreeRTOS/stream_buffer.c ****         {
 428:../src/FreeRTOS/stream_buffer.c ****             if( pxStreamBuffer->xTaskWaitingToSend == NULL )
 429:../src/FreeRTOS/stream_buffer.c ****             {
 430:../src/FreeRTOS/stream_buffer.c ****                 prvInitialiseNewStreamBuffer( pxStreamBuffer,
 431:../src/FreeRTOS/stream_buffer.c ****                                               pxStreamBuffer->pucBuffer,
 432:../src/FreeRTOS/stream_buffer.c ****                                               pxStreamBuffer->xLength,
 433:../src/FreeRTOS/stream_buffer.c ****                                               pxStreamBuffer->xTriggerLevelBytes,
 434:../src/FreeRTOS/stream_buffer.c ****                                               pxStreamBuffer->ucFlags );
 435:../src/FreeRTOS/stream_buffer.c ****                 xReturn = pdPASS;
 436:../src/FreeRTOS/stream_buffer.c **** 
 437:../src/FreeRTOS/stream_buffer.c ****                 #if ( configUSE_TRACE_FACILITY == 1 )
 438:../src/FreeRTOS/stream_buffer.c ****                     {
 439:../src/FreeRTOS/stream_buffer.c ****                         pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 440:../src/FreeRTOS/stream_buffer.c ****                     }
 441:../src/FreeRTOS/stream_buffer.c ****                 #endif
 442:../src/FreeRTOS/stream_buffer.c **** 
 443:../src/FreeRTOS/stream_buffer.c ****                 traceSTREAM_BUFFER_RESET( xStreamBuffer );
 444:../src/FreeRTOS/stream_buffer.c ****             }
 445:../src/FreeRTOS/stream_buffer.c ****         }
 446:../src/FreeRTOS/stream_buffer.c ****     }
 447:../src/FreeRTOS/stream_buffer.c ****     taskEXIT_CRITICAL();
 448:../src/FreeRTOS/stream_buffer.c **** 
 449:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 450:../src/FreeRTOS/stream_buffer.c **** }
 451:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 452:../src/FreeRTOS/stream_buffer.c **** 
 453:../src/FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer,
 454:../src/FreeRTOS/stream_buffer.c ****                                          size_t xTriggerLevel )
 455:../src/FreeRTOS/stream_buffer.c **** {
 456:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 457:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 458:../src/FreeRTOS/stream_buffer.c **** 
 459:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 460:../src/FreeRTOS/stream_buffer.c **** 
 461:../src/FreeRTOS/stream_buffer.c ****     /* It is not valid for the trigger level to be 0. */
 462:../src/FreeRTOS/stream_buffer.c ****     if( xTriggerLevel == ( size_t ) 0 )
 463:../src/FreeRTOS/stream_buffer.c ****     {
 464:../src/FreeRTOS/stream_buffer.c ****         xTriggerLevel = ( size_t ) 1;
 465:../src/FreeRTOS/stream_buffer.c ****     }
 466:../src/FreeRTOS/stream_buffer.c **** 
 467:../src/FreeRTOS/stream_buffer.c ****     /* The trigger level is the number of bytes that must be in the stream
 468:../src/FreeRTOS/stream_buffer.c ****      * buffer before a task that is waiting for data is unblocked. */
 469:../src/FreeRTOS/stream_buffer.c ****     if( xTriggerLevel <= pxStreamBuffer->xLength )
 470:../src/FreeRTOS/stream_buffer.c ****     {
 471:../src/FreeRTOS/stream_buffer.c ****         pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 472:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdPASS;
 473:../src/FreeRTOS/stream_buffer.c ****     }
 474:../src/FreeRTOS/stream_buffer.c ****     else
 475:../src/FreeRTOS/stream_buffer.c ****     {
 476:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdFALSE;
 477:../src/FreeRTOS/stream_buffer.c ****     }
 478:../src/FreeRTOS/stream_buffer.c **** 
 479:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 480:../src/FreeRTOS/stream_buffer.c **** }
 481:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 482:../src/FreeRTOS/stream_buffer.c **** 
 483:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 484:../src/FreeRTOS/stream_buffer.c **** {
 485:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 486:../src/FreeRTOS/stream_buffer.c ****     size_t xSpace;
 487:../src/FreeRTOS/stream_buffer.c **** 
 488:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 489:../src/FreeRTOS/stream_buffer.c **** 
 490:../src/FreeRTOS/stream_buffer.c ****     xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 491:../src/FreeRTOS/stream_buffer.c ****     xSpace -= pxStreamBuffer->xHead;
 492:../src/FreeRTOS/stream_buffer.c ****     xSpace -= ( size_t ) 1;
 493:../src/FreeRTOS/stream_buffer.c **** 
 494:../src/FreeRTOS/stream_buffer.c ****     if( xSpace >= pxStreamBuffer->xLength )
 495:../src/FreeRTOS/stream_buffer.c ****     {
 496:../src/FreeRTOS/stream_buffer.c ****         xSpace -= pxStreamBuffer->xLength;
 497:../src/FreeRTOS/stream_buffer.c ****     }
 498:../src/FreeRTOS/stream_buffer.c ****     else
 499:../src/FreeRTOS/stream_buffer.c ****     {
 500:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 501:../src/FreeRTOS/stream_buffer.c ****     }
 502:../src/FreeRTOS/stream_buffer.c **** 
 503:../src/FreeRTOS/stream_buffer.c ****     return xSpace;
 504:../src/FreeRTOS/stream_buffer.c **** }
 505:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 506:../src/FreeRTOS/stream_buffer.c **** 
 507:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 508:../src/FreeRTOS/stream_buffer.c **** {
 509:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 510:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn;
 511:../src/FreeRTOS/stream_buffer.c **** 
 512:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 513:../src/FreeRTOS/stream_buffer.c **** 
 514:../src/FreeRTOS/stream_buffer.c ****     xReturn = prvBytesInBuffer( pxStreamBuffer );
 515:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 516:../src/FreeRTOS/stream_buffer.c **** }
 517:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 518:../src/FreeRTOS/stream_buffer.c **** 
 519:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 520:../src/FreeRTOS/stream_buffer.c ****                           const void * pvTxData,
 521:../src/FreeRTOS/stream_buffer.c ****                           size_t xDataLengthBytes,
 522:../src/FreeRTOS/stream_buffer.c ****                           TickType_t xTicksToWait )
 523:../src/FreeRTOS/stream_buffer.c **** {
 524:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 525:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace = 0;
 526:../src/FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 527:../src/FreeRTOS/stream_buffer.c ****     TimeOut_t xTimeOut;
 528:../src/FreeRTOS/stream_buffer.c **** 
 529:../src/FreeRTOS/stream_buffer.c ****     /* The maximum amount of space a stream buffer will ever report is its length
 530:../src/FreeRTOS/stream_buffer.c ****      * minus 1. */
 531:../src/FreeRTOS/stream_buffer.c ****     const size_t xMaxReportedSpace = pxStreamBuffer->xLength - ( size_t ) 1;
 532:../src/FreeRTOS/stream_buffer.c **** 
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pvTxData );
 534:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 535:../src/FreeRTOS/stream_buffer.c **** 
 536:../src/FreeRTOS/stream_buffer.c ****     /* This send function is used to write to both message buffers and stream
 537:../src/FreeRTOS/stream_buffer.c ****      * buffers.  If this is a message buffer then the space needed must be
 538:../src/FreeRTOS/stream_buffer.c ****      * increased by the amount of bytes needed to store the length of the
 539:../src/FreeRTOS/stream_buffer.c ****      * message. */
 540:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 541:../src/FreeRTOS/stream_buffer.c ****     {
 542:../src/FreeRTOS/stream_buffer.c ****         xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 543:../src/FreeRTOS/stream_buffer.c **** 
 544:../src/FreeRTOS/stream_buffer.c ****         /* Overflow? */
 545:../src/FreeRTOS/stream_buffer.c ****         configASSERT( xRequiredSpace > xDataLengthBytes );
 546:../src/FreeRTOS/stream_buffer.c **** 
 547:../src/FreeRTOS/stream_buffer.c ****         /* If this is a message buffer then it must be possible to write the
 548:../src/FreeRTOS/stream_buffer.c ****          * whole message. */
 549:../src/FreeRTOS/stream_buffer.c ****         if( xRequiredSpace > xMaxReportedSpace )
 550:../src/FreeRTOS/stream_buffer.c ****         {
 551:../src/FreeRTOS/stream_buffer.c ****             /* The message would not fit even if the entire buffer was empty,
 552:../src/FreeRTOS/stream_buffer.c ****              * so don't wait for space. */
 553:../src/FreeRTOS/stream_buffer.c ****             xTicksToWait = ( TickType_t ) 0;
 554:../src/FreeRTOS/stream_buffer.c ****         }
 555:../src/FreeRTOS/stream_buffer.c ****         else
 556:../src/FreeRTOS/stream_buffer.c ****         {
 557:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 558:../src/FreeRTOS/stream_buffer.c ****         }
 559:../src/FreeRTOS/stream_buffer.c ****     }
 560:../src/FreeRTOS/stream_buffer.c ****     else
 561:../src/FreeRTOS/stream_buffer.c ****     {
 562:../src/FreeRTOS/stream_buffer.c ****         /* If this is a stream buffer then it is acceptable to write only part
 563:../src/FreeRTOS/stream_buffer.c ****          * of the message to the buffer.  Cap the length to the total length of
 564:../src/FreeRTOS/stream_buffer.c ****          * the buffer. */
 565:../src/FreeRTOS/stream_buffer.c ****         if( xRequiredSpace > xMaxReportedSpace )
 566:../src/FreeRTOS/stream_buffer.c ****         {
 567:../src/FreeRTOS/stream_buffer.c ****             xRequiredSpace = xMaxReportedSpace;
 568:../src/FreeRTOS/stream_buffer.c ****         }
 569:../src/FreeRTOS/stream_buffer.c ****         else
 570:../src/FreeRTOS/stream_buffer.c ****         {
 571:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 572:../src/FreeRTOS/stream_buffer.c ****         }
 573:../src/FreeRTOS/stream_buffer.c ****     }
 574:../src/FreeRTOS/stream_buffer.c **** 
 575:../src/FreeRTOS/stream_buffer.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 576:../src/FreeRTOS/stream_buffer.c ****     {
 577:../src/FreeRTOS/stream_buffer.c ****         vTaskSetTimeOutState( &xTimeOut );
 578:../src/FreeRTOS/stream_buffer.c **** 
 579:../src/FreeRTOS/stream_buffer.c ****         do
 580:../src/FreeRTOS/stream_buffer.c ****         {
 581:../src/FreeRTOS/stream_buffer.c ****             /* Wait until the required number of bytes are free in the message
 582:../src/FreeRTOS/stream_buffer.c ****              * buffer. */
 583:../src/FreeRTOS/stream_buffer.c ****             taskENTER_CRITICAL();
 584:../src/FreeRTOS/stream_buffer.c ****             {
 585:../src/FreeRTOS/stream_buffer.c ****                 xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 586:../src/FreeRTOS/stream_buffer.c **** 
 587:../src/FreeRTOS/stream_buffer.c ****                 if( xSpace < xRequiredSpace )
 588:../src/FreeRTOS/stream_buffer.c ****                 {
 589:../src/FreeRTOS/stream_buffer.c ****                     /* Clear notification state as going to wait for space. */
 590:../src/FreeRTOS/stream_buffer.c ****                     ( void ) xTaskNotifyStateClear( NULL );
 591:../src/FreeRTOS/stream_buffer.c **** 
 592:../src/FreeRTOS/stream_buffer.c ****                     /* Should only be one writer. */
 593:../src/FreeRTOS/stream_buffer.c ****                     configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 594:../src/FreeRTOS/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 595:../src/FreeRTOS/stream_buffer.c ****                 }
 596:../src/FreeRTOS/stream_buffer.c ****                 else
 597:../src/FreeRTOS/stream_buffer.c ****                 {
 598:../src/FreeRTOS/stream_buffer.c ****                     taskEXIT_CRITICAL();
 599:../src/FreeRTOS/stream_buffer.c ****                     break;
 600:../src/FreeRTOS/stream_buffer.c ****                 }
 601:../src/FreeRTOS/stream_buffer.c ****             }
 602:../src/FreeRTOS/stream_buffer.c ****             taskEXIT_CRITICAL();
 603:../src/FreeRTOS/stream_buffer.c **** 
 604:../src/FreeRTOS/stream_buffer.c ****             traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 605:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 606:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 607:../src/FreeRTOS/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 608:../src/FreeRTOS/stream_buffer.c ****     }
 609:../src/FreeRTOS/stream_buffer.c ****     else
 610:../src/FreeRTOS/stream_buffer.c ****     {
 611:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 612:../src/FreeRTOS/stream_buffer.c ****     }
 613:../src/FreeRTOS/stream_buffer.c **** 
 614:../src/FreeRTOS/stream_buffer.c ****     if( xSpace == ( size_t ) 0 )
 615:../src/FreeRTOS/stream_buffer.c ****     {
 616:../src/FreeRTOS/stream_buffer.c ****         xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 617:../src/FreeRTOS/stream_buffer.c ****     }
 618:../src/FreeRTOS/stream_buffer.c ****     else
 619:../src/FreeRTOS/stream_buffer.c ****     {
 620:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 621:../src/FreeRTOS/stream_buffer.c ****     }
 622:../src/FreeRTOS/stream_buffer.c **** 
 623:../src/FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 624:../src/FreeRTOS/stream_buffer.c **** 
 625:../src/FreeRTOS/stream_buffer.c ****     if( xReturn > ( size_t ) 0 )
 626:../src/FreeRTOS/stream_buffer.c ****     {
 627:../src/FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
 628:../src/FreeRTOS/stream_buffer.c **** 
 629:../src/FreeRTOS/stream_buffer.c ****         /* Was a task waiting for the data? */
 630:../src/FreeRTOS/stream_buffer.c ****         if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 631:../src/FreeRTOS/stream_buffer.c ****         {
 632:../src/FreeRTOS/stream_buffer.c ****             sbSEND_COMPLETED( pxStreamBuffer );
 633:../src/FreeRTOS/stream_buffer.c ****         }
 634:../src/FreeRTOS/stream_buffer.c ****         else
 635:../src/FreeRTOS/stream_buffer.c ****         {
 636:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 637:../src/FreeRTOS/stream_buffer.c ****         }
 638:../src/FreeRTOS/stream_buffer.c ****     }
 639:../src/FreeRTOS/stream_buffer.c ****     else
 640:../src/FreeRTOS/stream_buffer.c ****     {
 641:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 642:../src/FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 643:../src/FreeRTOS/stream_buffer.c ****     }
 644:../src/FreeRTOS/stream_buffer.c **** 
 645:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 646:../src/FreeRTOS/stream_buffer.c **** }
 647:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 648:../src/FreeRTOS/stream_buffer.c **** 
 649:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
 650:../src/FreeRTOS/stream_buffer.c ****                                  const void * pvTxData,
 651:../src/FreeRTOS/stream_buffer.c ****                                  size_t xDataLengthBytes,
 652:../src/FreeRTOS/stream_buffer.c ****                                  BaseType_t * const pxHigherPriorityTaskWoken )
 653:../src/FreeRTOS/stream_buffer.c **** {
 654:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 655:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace;
 656:../src/FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 657:../src/FreeRTOS/stream_buffer.c **** 
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pvTxData );
 659:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 660:../src/FreeRTOS/stream_buffer.c **** 
 661:../src/FreeRTOS/stream_buffer.c ****     /* This send function is used to write to both message buffers and stream
 662:../src/FreeRTOS/stream_buffer.c ****      * buffers.  If this is a message buffer then the space needed must be
 663:../src/FreeRTOS/stream_buffer.c ****      * increased by the amount of bytes needed to store the length of the
 664:../src/FreeRTOS/stream_buffer.c ****      * message. */
 665:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 666:../src/FreeRTOS/stream_buffer.c ****     {
 667:../src/FreeRTOS/stream_buffer.c ****         xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 668:../src/FreeRTOS/stream_buffer.c ****     }
 669:../src/FreeRTOS/stream_buffer.c ****     else
 670:../src/FreeRTOS/stream_buffer.c ****     {
 671:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 672:../src/FreeRTOS/stream_buffer.c ****     }
 673:../src/FreeRTOS/stream_buffer.c **** 
 674:../src/FreeRTOS/stream_buffer.c ****     xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 675:../src/FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 676:../src/FreeRTOS/stream_buffer.c **** 
 677:../src/FreeRTOS/stream_buffer.c ****     if( xReturn > ( size_t ) 0 )
 678:../src/FreeRTOS/stream_buffer.c ****     {
 679:../src/FreeRTOS/stream_buffer.c ****         /* Was a task waiting for the data? */
 680:../src/FreeRTOS/stream_buffer.c ****         if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 681:../src/FreeRTOS/stream_buffer.c ****         {
 682:../src/FreeRTOS/stream_buffer.c ****             sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 683:../src/FreeRTOS/stream_buffer.c ****         }
 684:../src/FreeRTOS/stream_buffer.c ****         else
 685:../src/FreeRTOS/stream_buffer.c ****         {
 686:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 687:../src/FreeRTOS/stream_buffer.c ****         }
 688:../src/FreeRTOS/stream_buffer.c ****     }
 689:../src/FreeRTOS/stream_buffer.c ****     else
 690:../src/FreeRTOS/stream_buffer.c ****     {
 691:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 692:../src/FreeRTOS/stream_buffer.c ****     }
 693:../src/FreeRTOS/stream_buffer.c **** 
 694:../src/FreeRTOS/stream_buffer.c ****     traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 695:../src/FreeRTOS/stream_buffer.c **** 
 696:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 697:../src/FreeRTOS/stream_buffer.c **** }
 698:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 699:../src/FreeRTOS/stream_buffer.c **** 
 700:../src/FreeRTOS/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 701:../src/FreeRTOS/stream_buffer.c ****                                        const void * pvTxData,
 702:../src/FreeRTOS/stream_buffer.c ****                                        size_t xDataLengthBytes,
 703:../src/FreeRTOS/stream_buffer.c ****                                        size_t xSpace,
 704:../src/FreeRTOS/stream_buffer.c ****                                        size_t xRequiredSpace )
 705:../src/FreeRTOS/stream_buffer.c **** {
 706:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xShouldWrite;
 707:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn;
 708:../src/FreeRTOS/stream_buffer.c **** 
 709:../src/FreeRTOS/stream_buffer.c ****     if( xSpace == ( size_t ) 0 )
 710:../src/FreeRTOS/stream_buffer.c ****     {
 711:../src/FreeRTOS/stream_buffer.c ****         /* Doesn't matter if this is a stream buffer or a message buffer, there
 712:../src/FreeRTOS/stream_buffer.c ****          * is no space to write. */
 713:../src/FreeRTOS/stream_buffer.c ****         xShouldWrite = pdFALSE;
 714:../src/FreeRTOS/stream_buffer.c ****     }
 715:../src/FreeRTOS/stream_buffer.c ****     else if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) == ( uint8_t ) 0 )
 716:../src/FreeRTOS/stream_buffer.c ****     {
 717:../src/FreeRTOS/stream_buffer.c ****         /* This is a stream buffer, as opposed to a message buffer, so writing a
 718:../src/FreeRTOS/stream_buffer.c ****          * stream of bytes rather than discrete messages.  Write as many bytes as
 719:../src/FreeRTOS/stream_buffer.c ****          * possible. */
 720:../src/FreeRTOS/stream_buffer.c ****         xShouldWrite = pdTRUE;
 721:../src/FreeRTOS/stream_buffer.c ****         xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 722:../src/FreeRTOS/stream_buffer.c ****     }
 723:../src/FreeRTOS/stream_buffer.c ****     else if( xSpace >= xRequiredSpace )
 724:../src/FreeRTOS/stream_buffer.c ****     {
 725:../src/FreeRTOS/stream_buffer.c ****         /* This is a message buffer, as opposed to a stream buffer, and there
 726:../src/FreeRTOS/stream_buffer.c ****          * is enough space to write both the message length and the message itself
 727:../src/FreeRTOS/stream_buffer.c ****          * into the buffer.  Start by writing the length of the data, the data
 728:../src/FreeRTOS/stream_buffer.c ****          * itself will be written later in this function. */
 729:../src/FreeRTOS/stream_buffer.c ****         xShouldWrite = pdTRUE;
 730:../src/FreeRTOS/stream_buffer.c ****         ( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), 
 731:../src/FreeRTOS/stream_buffer.c ****     }
 732:../src/FreeRTOS/stream_buffer.c ****     else
 733:../src/FreeRTOS/stream_buffer.c ****     {
 734:../src/FreeRTOS/stream_buffer.c ****         /* There is space available, but not enough space. */
 735:../src/FreeRTOS/stream_buffer.c ****         xShouldWrite = pdFALSE;
 736:../src/FreeRTOS/stream_buffer.c ****     }
 737:../src/FreeRTOS/stream_buffer.c **** 
 738:../src/FreeRTOS/stream_buffer.c ****     if( xShouldWrite != pdFALSE )
 739:../src/FreeRTOS/stream_buffer.c ****     {
 740:../src/FreeRTOS/stream_buffer.c ****         /* Writes the data itself. */
 741:../src/FreeRTOS/stream_buffer.c ****         xReturn = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData, xDataLengthB
 742:../src/FreeRTOS/stream_buffer.c ****     }
 743:../src/FreeRTOS/stream_buffer.c ****     else
 744:../src/FreeRTOS/stream_buffer.c ****     {
 745:../src/FreeRTOS/stream_buffer.c ****         xReturn = 0;
 746:../src/FreeRTOS/stream_buffer.c ****     }
 747:../src/FreeRTOS/stream_buffer.c **** 
 748:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 749:../src/FreeRTOS/stream_buffer.c **** }
 750:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 751:../src/FreeRTOS/stream_buffer.c **** 
 752:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 753:../src/FreeRTOS/stream_buffer.c ****                              void * pvRxData,
 754:../src/FreeRTOS/stream_buffer.c ****                              size_t xBufferLengthBytes,
 755:../src/FreeRTOS/stream_buffer.c ****                              TickType_t xTicksToWait )
 756:../src/FreeRTOS/stream_buffer.c **** {
 757:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 758:../src/FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 759:../src/FreeRTOS/stream_buffer.c **** 
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pvRxData );
 761:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 762:../src/FreeRTOS/stream_buffer.c **** 
 763:../src/FreeRTOS/stream_buffer.c ****     /* This receive function is used by both message buffers, which store
 764:../src/FreeRTOS/stream_buffer.c ****      * discrete messages, and stream buffers, which store a continuous stream of
 765:../src/FreeRTOS/stream_buffer.c ****      * bytes.  Discrete messages include an additional
 766:../src/FreeRTOS/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 767:../src/FreeRTOS/stream_buffer.c ****      * message. */
 768:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 769:../src/FreeRTOS/stream_buffer.c ****     {
 770:../src/FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 771:../src/FreeRTOS/stream_buffer.c ****     }
 772:../src/FreeRTOS/stream_buffer.c ****     else
 773:../src/FreeRTOS/stream_buffer.c ****     {
 774:../src/FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
 775:../src/FreeRTOS/stream_buffer.c ****     }
 776:../src/FreeRTOS/stream_buffer.c **** 
 777:../src/FreeRTOS/stream_buffer.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 778:../src/FreeRTOS/stream_buffer.c ****     {
 779:../src/FreeRTOS/stream_buffer.c ****         /* Checking if there is data and clearing the notification state must be
 780:../src/FreeRTOS/stream_buffer.c ****          * performed atomically. */
 781:../src/FreeRTOS/stream_buffer.c ****         taskENTER_CRITICAL();
 782:../src/FreeRTOS/stream_buffer.c ****         {
 783:../src/FreeRTOS/stream_buffer.c ****             xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 784:../src/FreeRTOS/stream_buffer.c **** 
 785:../src/FreeRTOS/stream_buffer.c ****             /* If this function was invoked by a message buffer read then
 786:../src/FreeRTOS/stream_buffer.c ****              * xBytesToStoreMessageLength holds the number of bytes used to hold
 787:../src/FreeRTOS/stream_buffer.c ****              * the length of the next discrete message.  If this function was
 788:../src/FreeRTOS/stream_buffer.c ****              * invoked by a stream buffer read then xBytesToStoreMessageLength will
 789:../src/FreeRTOS/stream_buffer.c ****              * be 0. */
 790:../src/FreeRTOS/stream_buffer.c ****             if( xBytesAvailable <= xBytesToStoreMessageLength )
 791:../src/FreeRTOS/stream_buffer.c ****             {
 792:../src/FreeRTOS/stream_buffer.c ****                 /* Clear notification state as going to wait for data. */
 793:../src/FreeRTOS/stream_buffer.c ****                 ( void ) xTaskNotifyStateClear( NULL );
 794:../src/FreeRTOS/stream_buffer.c **** 
 795:../src/FreeRTOS/stream_buffer.c ****                 /* Should only be one reader. */
 796:../src/FreeRTOS/stream_buffer.c ****                 configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 797:../src/FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 798:../src/FreeRTOS/stream_buffer.c ****             }
 799:../src/FreeRTOS/stream_buffer.c ****             else
 800:../src/FreeRTOS/stream_buffer.c ****             {
 801:../src/FreeRTOS/stream_buffer.c ****                 mtCOVERAGE_TEST_MARKER();
 802:../src/FreeRTOS/stream_buffer.c ****             }
 803:../src/FreeRTOS/stream_buffer.c ****         }
 804:../src/FreeRTOS/stream_buffer.c ****         taskEXIT_CRITICAL();
 805:../src/FreeRTOS/stream_buffer.c **** 
 806:../src/FreeRTOS/stream_buffer.c ****         if( xBytesAvailable <= xBytesToStoreMessageLength )
 807:../src/FreeRTOS/stream_buffer.c ****         {
 808:../src/FreeRTOS/stream_buffer.c ****             /* Wait for data to be available. */
 809:../src/FreeRTOS/stream_buffer.c ****             traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 810:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 811:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 812:../src/FreeRTOS/stream_buffer.c **** 
 813:../src/FreeRTOS/stream_buffer.c ****             /* Recheck the data available after blocking. */
 814:../src/FreeRTOS/stream_buffer.c ****             xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 815:../src/FreeRTOS/stream_buffer.c ****         }
 816:../src/FreeRTOS/stream_buffer.c ****         else
 817:../src/FreeRTOS/stream_buffer.c ****         {
 818:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 819:../src/FreeRTOS/stream_buffer.c ****         }
 820:../src/FreeRTOS/stream_buffer.c ****     }
 821:../src/FreeRTOS/stream_buffer.c ****     else
 822:../src/FreeRTOS/stream_buffer.c ****     {
 823:../src/FreeRTOS/stream_buffer.c ****         xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 824:../src/FreeRTOS/stream_buffer.c ****     }
 825:../src/FreeRTOS/stream_buffer.c **** 
 826:../src/FreeRTOS/stream_buffer.c ****     /* Whether receiving a discrete message (where xBytesToStoreMessageLength
 827:../src/FreeRTOS/stream_buffer.c ****      * holds the number of bytes used to store the message length) or a stream of
 828:../src/FreeRTOS/stream_buffer.c ****      * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 829:../src/FreeRTOS/stream_buffer.c ****      * available must be greater than xBytesToStoreMessageLength to be able to
 830:../src/FreeRTOS/stream_buffer.c ****      * read bytes from the buffer. */
 831:../src/FreeRTOS/stream_buffer.c ****     if( xBytesAvailable > xBytesToStoreMessageLength )
 832:../src/FreeRTOS/stream_buffer.c ****     {
 833:../src/FreeRTOS/stream_buffer.c ****         xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, x
 834:../src/FreeRTOS/stream_buffer.c **** 
 835:../src/FreeRTOS/stream_buffer.c ****         /* Was a task waiting for space in the buffer? */
 836:../src/FreeRTOS/stream_buffer.c ****         if( xReceivedLength != ( size_t ) 0 )
 837:../src/FreeRTOS/stream_buffer.c ****         {
 838:../src/FreeRTOS/stream_buffer.c ****             traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 839:../src/FreeRTOS/stream_buffer.c ****             sbRECEIVE_COMPLETED( pxStreamBuffer );
 840:../src/FreeRTOS/stream_buffer.c ****         }
 841:../src/FreeRTOS/stream_buffer.c ****         else
 842:../src/FreeRTOS/stream_buffer.c ****         {
 843:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 844:../src/FreeRTOS/stream_buffer.c ****         }
 845:../src/FreeRTOS/stream_buffer.c ****     }
 846:../src/FreeRTOS/stream_buffer.c ****     else
 847:../src/FreeRTOS/stream_buffer.c ****     {
 848:../src/FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 849:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 850:../src/FreeRTOS/stream_buffer.c ****     }
 851:../src/FreeRTOS/stream_buffer.c **** 
 852:../src/FreeRTOS/stream_buffer.c ****     return xReceivedLength;
 853:../src/FreeRTOS/stream_buffer.c **** }
 854:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 855:../src/FreeRTOS/stream_buffer.c **** 
 856:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 857:../src/FreeRTOS/stream_buffer.c **** {
 858:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 859:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn, xBytesAvailable, xOriginalTail;
 860:../src/FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 861:../src/FreeRTOS/stream_buffer.c **** 
 862:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 863:../src/FreeRTOS/stream_buffer.c **** 
 864:../src/FreeRTOS/stream_buffer.c ****     /* Ensure the stream buffer is being used as a message buffer. */
 865:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 866:../src/FreeRTOS/stream_buffer.c ****     {
 867:../src/FreeRTOS/stream_buffer.c ****         xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 868:../src/FreeRTOS/stream_buffer.c **** 
 869:../src/FreeRTOS/stream_buffer.c ****         if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 870:../src/FreeRTOS/stream_buffer.c ****         {
 871:../src/FreeRTOS/stream_buffer.c ****             /* The number of bytes available is greater than the number of bytes
 872:../src/FreeRTOS/stream_buffer.c ****              * required to hold the length of the next message, so another message
 873:../src/FreeRTOS/stream_buffer.c ****              * is available.  Return its length without removing the length bytes
 874:../src/FreeRTOS/stream_buffer.c ****              * from the buffer.  A copy of the tail is stored so the buffer can be
 875:../src/FreeRTOS/stream_buffer.c ****              * returned to its prior state as the message is not actually being
 876:../src/FreeRTOS/stream_buffer.c ****              * removed from the buffer. */
 877:../src/FreeRTOS/stream_buffer.c ****             xOriginalTail = pxStreamBuffer->xTail;
 878:../src/FreeRTOS/stream_buffer.c ****             ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO
 879:../src/FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 880:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTail = xOriginalTail;
 881:../src/FreeRTOS/stream_buffer.c ****         }
 882:../src/FreeRTOS/stream_buffer.c ****         else
 883:../src/FreeRTOS/stream_buffer.c ****         {
 884:../src/FreeRTOS/stream_buffer.c ****             /* The minimum amount of bytes in a message buffer is
 885:../src/FreeRTOS/stream_buffer.c ****              * ( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
 886:../src/FreeRTOS/stream_buffer.c ****              * less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
 887:../src/FreeRTOS/stream_buffer.c ****              * value is 0. */
 888:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBytesAvailable == 0 );
 889:../src/FreeRTOS/stream_buffer.c ****             xReturn = 0;
 890:../src/FreeRTOS/stream_buffer.c ****         }
 891:../src/FreeRTOS/stream_buffer.c ****     }
 892:../src/FreeRTOS/stream_buffer.c ****     else
 893:../src/FreeRTOS/stream_buffer.c ****     {
 894:../src/FreeRTOS/stream_buffer.c ****         xReturn = 0;
 895:../src/FreeRTOS/stream_buffer.c ****     }
 896:../src/FreeRTOS/stream_buffer.c **** 
 897:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 898:../src/FreeRTOS/stream_buffer.c **** }
 899:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 900:../src/FreeRTOS/stream_buffer.c **** 
 901:../src/FreeRTOS/stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
 902:../src/FreeRTOS/stream_buffer.c ****                                     void * pvRxData,
 903:../src/FreeRTOS/stream_buffer.c ****                                     size_t xBufferLengthBytes,
 904:../src/FreeRTOS/stream_buffer.c ****                                     BaseType_t * const pxHigherPriorityTaskWoken )
 905:../src/FreeRTOS/stream_buffer.c **** {
 906:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 907:../src/FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 908:../src/FreeRTOS/stream_buffer.c **** 
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pvRxData );
 910:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 911:../src/FreeRTOS/stream_buffer.c **** 
 912:../src/FreeRTOS/stream_buffer.c ****     /* This receive function is used by both message buffers, which store
 913:../src/FreeRTOS/stream_buffer.c ****      * discrete messages, and stream buffers, which store a continuous stream of
 914:../src/FreeRTOS/stream_buffer.c ****      * bytes.  Discrete messages include an additional
 915:../src/FreeRTOS/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 916:../src/FreeRTOS/stream_buffer.c ****      * message. */
 917:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 918:../src/FreeRTOS/stream_buffer.c ****     {
 919:../src/FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 920:../src/FreeRTOS/stream_buffer.c ****     }
 921:../src/FreeRTOS/stream_buffer.c ****     else
 922:../src/FreeRTOS/stream_buffer.c ****     {
 923:../src/FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
 924:../src/FreeRTOS/stream_buffer.c ****     }
 925:../src/FreeRTOS/stream_buffer.c **** 
 926:../src/FreeRTOS/stream_buffer.c ****     xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 927:../src/FreeRTOS/stream_buffer.c **** 
 928:../src/FreeRTOS/stream_buffer.c ****     /* Whether receiving a discrete message (where xBytesToStoreMessageLength
 929:../src/FreeRTOS/stream_buffer.c ****      * holds the number of bytes used to store the message length) or a stream of
 930:../src/FreeRTOS/stream_buffer.c ****      * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 931:../src/FreeRTOS/stream_buffer.c ****      * available must be greater than xBytesToStoreMessageLength to be able to
 932:../src/FreeRTOS/stream_buffer.c ****      * read bytes from the buffer. */
 933:../src/FreeRTOS/stream_buffer.c ****     if( xBytesAvailable > xBytesToStoreMessageLength )
 934:../src/FreeRTOS/stream_buffer.c ****     {
 935:../src/FreeRTOS/stream_buffer.c ****         xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, x
 936:../src/FreeRTOS/stream_buffer.c **** 
 937:../src/FreeRTOS/stream_buffer.c ****         /* Was a task waiting for space in the buffer? */
 938:../src/FreeRTOS/stream_buffer.c ****         if( xReceivedLength != ( size_t ) 0 )
 939:../src/FreeRTOS/stream_buffer.c ****         {
 940:../src/FreeRTOS/stream_buffer.c ****             sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 941:../src/FreeRTOS/stream_buffer.c ****         }
 942:../src/FreeRTOS/stream_buffer.c ****         else
 943:../src/FreeRTOS/stream_buffer.c ****         {
 944:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 945:../src/FreeRTOS/stream_buffer.c ****         }
 946:../src/FreeRTOS/stream_buffer.c ****     }
 947:../src/FreeRTOS/stream_buffer.c ****     else
 948:../src/FreeRTOS/stream_buffer.c ****     {
 949:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 950:../src/FreeRTOS/stream_buffer.c ****     }
 951:../src/FreeRTOS/stream_buffer.c **** 
 952:../src/FreeRTOS/stream_buffer.c ****     traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
 953:../src/FreeRTOS/stream_buffer.c **** 
 954:../src/FreeRTOS/stream_buffer.c ****     return xReceivedLength;
 955:../src/FreeRTOS/stream_buffer.c **** }
 956:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 957:../src/FreeRTOS/stream_buffer.c **** 
 958:../src/FreeRTOS/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t * pxStreamBuffer,
 959:../src/FreeRTOS/stream_buffer.c ****                                         void * pvRxData,
 960:../src/FreeRTOS/stream_buffer.c ****                                         size_t xBufferLengthBytes,
 961:../src/FreeRTOS/stream_buffer.c ****                                         size_t xBytesAvailable,
 962:../src/FreeRTOS/stream_buffer.c ****                                         size_t xBytesToStoreMessageLength )
 963:../src/FreeRTOS/stream_buffer.c **** {
 964:../src/FreeRTOS/stream_buffer.c ****     size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 965:../src/FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 966:../src/FreeRTOS/stream_buffer.c **** 
 967:../src/FreeRTOS/stream_buffer.c ****     if( xBytesToStoreMessageLength != ( size_t ) 0 )
 968:../src/FreeRTOS/stream_buffer.c ****     {
 969:../src/FreeRTOS/stream_buffer.c ****         /* A discrete message is being received.  First receive the length
 970:../src/FreeRTOS/stream_buffer.c ****          * of the message.  A copy of the tail is stored so the buffer can be
 971:../src/FreeRTOS/stream_buffer.c ****          * returned to its prior state if the length of the message is too
 972:../src/FreeRTOS/stream_buffer.c ****          * large for the provided buffer. */
 973:../src/FreeRTOS/stream_buffer.c ****         xOriginalTail = pxStreamBuffer->xTail;
 974:../src/FreeRTOS/stream_buffer.c ****         ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBy
 975:../src/FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 976:../src/FreeRTOS/stream_buffer.c **** 
 977:../src/FreeRTOS/stream_buffer.c ****         /* Reduce the number of bytes available by the number of bytes just
 978:../src/FreeRTOS/stream_buffer.c ****          * read out. */
 979:../src/FreeRTOS/stream_buffer.c ****         xBytesAvailable -= xBytesToStoreMessageLength;
 980:../src/FreeRTOS/stream_buffer.c **** 
 981:../src/FreeRTOS/stream_buffer.c ****         /* Check there is enough space in the buffer provided by the
 982:../src/FreeRTOS/stream_buffer.c ****          * user. */
 983:../src/FreeRTOS/stream_buffer.c ****         if( xNextMessageLength > xBufferLengthBytes )
 984:../src/FreeRTOS/stream_buffer.c ****         {
 985:../src/FreeRTOS/stream_buffer.c ****             /* The user has provided insufficient space to read the message
 986:../src/FreeRTOS/stream_buffer.c ****              * so return the buffer to its previous state (so the length of
 987:../src/FreeRTOS/stream_buffer.c ****              * the message is in the buffer again). */
 988:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTail = xOriginalTail;
 989:../src/FreeRTOS/stream_buffer.c ****             xNextMessageLength = 0;
 990:../src/FreeRTOS/stream_buffer.c ****         }
 991:../src/FreeRTOS/stream_buffer.c ****         else
 992:../src/FreeRTOS/stream_buffer.c ****         {
 993:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 994:../src/FreeRTOS/stream_buffer.c ****         }
 995:../src/FreeRTOS/stream_buffer.c ****     }
 996:../src/FreeRTOS/stream_buffer.c ****     else
 997:../src/FreeRTOS/stream_buffer.c ****     {
 998:../src/FreeRTOS/stream_buffer.c ****         /* A stream of bytes is being received (as opposed to a discrete
 999:../src/FreeRTOS/stream_buffer.c ****          * message), so read as many bytes as possible. */
1000:../src/FreeRTOS/stream_buffer.c ****         xNextMessageLength = xBufferLengthBytes;
1001:../src/FreeRTOS/stream_buffer.c ****     }
1002:../src/FreeRTOS/stream_buffer.c **** 
1003:../src/FreeRTOS/stream_buffer.c ****     /* Read the actual data. */
1004:../src/FreeRTOS/stream_buffer.c ****     xReceivedLength = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xNextMessageL
1005:../src/FreeRTOS/stream_buffer.c **** 
1006:../src/FreeRTOS/stream_buffer.c ****     return xReceivedLength;
1007:../src/FreeRTOS/stream_buffer.c **** }
1008:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1009:../src/FreeRTOS/stream_buffer.c **** 
1010:../src/FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
1011:../src/FreeRTOS/stream_buffer.c **** {
1012:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1013:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1014:../src/FreeRTOS/stream_buffer.c ****     size_t xTail;
1015:../src/FreeRTOS/stream_buffer.c **** 
1016:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1017:../src/FreeRTOS/stream_buffer.c **** 
1018:../src/FreeRTOS/stream_buffer.c ****     /* True if no bytes are available. */
1019:../src/FreeRTOS/stream_buffer.c ****     xTail = pxStreamBuffer->xTail;
1020:../src/FreeRTOS/stream_buffer.c **** 
1021:../src/FreeRTOS/stream_buffer.c ****     if( pxStreamBuffer->xHead == xTail )
1022:../src/FreeRTOS/stream_buffer.c ****     {
1023:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdTRUE;
1024:../src/FreeRTOS/stream_buffer.c ****     }
1025:../src/FreeRTOS/stream_buffer.c ****     else
1026:../src/FreeRTOS/stream_buffer.c ****     {
1027:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdFALSE;
1028:../src/FreeRTOS/stream_buffer.c ****     }
1029:../src/FreeRTOS/stream_buffer.c **** 
1030:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
1031:../src/FreeRTOS/stream_buffer.c **** }
1032:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1033:../src/FreeRTOS/stream_buffer.c **** 
1034:../src/FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
1035:../src/FreeRTOS/stream_buffer.c **** {
1036:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1037:../src/FreeRTOS/stream_buffer.c ****     size_t xBytesToStoreMessageLength;
1038:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1039:../src/FreeRTOS/stream_buffer.c **** 
1040:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1041:../src/FreeRTOS/stream_buffer.c **** 
1042:../src/FreeRTOS/stream_buffer.c ****     /* This generic version of the receive function is used by both message
1043:../src/FreeRTOS/stream_buffer.c ****      * buffers, which store discrete messages, and stream buffers, which store a
1044:../src/FreeRTOS/stream_buffer.c ****      * continuous stream of bytes.  Discrete messages include an additional
1045:../src/FreeRTOS/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1046:../src/FreeRTOS/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1047:../src/FreeRTOS/stream_buffer.c ****     {
1048:../src/FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
1049:../src/FreeRTOS/stream_buffer.c ****     }
1050:../src/FreeRTOS/stream_buffer.c ****     else
1051:../src/FreeRTOS/stream_buffer.c ****     {
1052:../src/FreeRTOS/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
1053:../src/FreeRTOS/stream_buffer.c ****     }
1054:../src/FreeRTOS/stream_buffer.c **** 
1055:../src/FreeRTOS/stream_buffer.c ****     /* True if the available space equals zero. */
1056:../src/FreeRTOS/stream_buffer.c ****     if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
1057:../src/FreeRTOS/stream_buffer.c ****     {
1058:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdTRUE;
1059:../src/FreeRTOS/stream_buffer.c ****     }
1060:../src/FreeRTOS/stream_buffer.c ****     else
1061:../src/FreeRTOS/stream_buffer.c ****     {
1062:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdFALSE;
1063:../src/FreeRTOS/stream_buffer.c ****     }
1064:../src/FreeRTOS/stream_buffer.c **** 
1065:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
1066:../src/FreeRTOS/stream_buffer.c **** }
1067:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1068:../src/FreeRTOS/stream_buffer.c **** 
1069:../src/FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer,
1070:../src/FreeRTOS/stream_buffer.c ****                                               BaseType_t * pxHigherPriorityTaskWoken )
1071:../src/FreeRTOS/stream_buffer.c **** {
1072:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1073:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1074:../src/FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
1075:../src/FreeRTOS/stream_buffer.c **** 
1076:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1077:../src/FreeRTOS/stream_buffer.c **** 
1078:../src/FreeRTOS/stream_buffer.c ****     uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1079:../src/FreeRTOS/stream_buffer.c ****     {
1080:../src/FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
1081:../src/FreeRTOS/stream_buffer.c ****         {
1082:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
1083:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
1084:../src/FreeRTOS/stream_buffer.c ****                                          eNoAction,
1085:../src/FreeRTOS/stream_buffer.c ****                                          pxHigherPriorityTaskWoken );
1086:../src/FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
1087:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
1088:../src/FreeRTOS/stream_buffer.c ****         }
1089:../src/FreeRTOS/stream_buffer.c ****         else
1090:../src/FreeRTOS/stream_buffer.c ****         {
1091:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdFALSE;
1092:../src/FreeRTOS/stream_buffer.c ****         }
1093:../src/FreeRTOS/stream_buffer.c ****     }
1094:../src/FreeRTOS/stream_buffer.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1095:../src/FreeRTOS/stream_buffer.c **** 
1096:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
1097:../src/FreeRTOS/stream_buffer.c **** }
1098:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1099:../src/FreeRTOS/stream_buffer.c **** 
1100:../src/FreeRTOS/stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer,
1101:../src/FreeRTOS/stream_buffer.c ****                                                  BaseType_t * pxHigherPriorityTaskWoken )
1102:../src/FreeRTOS/stream_buffer.c **** {
1103:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1104:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
1105:../src/FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
1106:../src/FreeRTOS/stream_buffer.c **** 
1107:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1108:../src/FreeRTOS/stream_buffer.c **** 
1109:../src/FreeRTOS/stream_buffer.c ****     uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1110:../src/FreeRTOS/stream_buffer.c ****     {
1111:../src/FreeRTOS/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
1112:../src/FreeRTOS/stream_buffer.c ****         {
1113:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
1114:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
1115:../src/FreeRTOS/stream_buffer.c ****                                          eNoAction,
1116:../src/FreeRTOS/stream_buffer.c ****                                          pxHigherPriorityTaskWoken );
1117:../src/FreeRTOS/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToSend = NULL;
1118:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
1119:../src/FreeRTOS/stream_buffer.c ****         }
1120:../src/FreeRTOS/stream_buffer.c ****         else
1121:../src/FreeRTOS/stream_buffer.c ****         {
1122:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdFALSE;
1123:../src/FreeRTOS/stream_buffer.c ****         }
1124:../src/FreeRTOS/stream_buffer.c ****     }
1125:../src/FreeRTOS/stream_buffer.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1126:../src/FreeRTOS/stream_buffer.c **** 
1127:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
1128:../src/FreeRTOS/stream_buffer.c **** }
1129:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1130:../src/FreeRTOS/stream_buffer.c **** 
1131:../src/FreeRTOS/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer,
1132:../src/FreeRTOS/stream_buffer.c ****                                      const uint8_t * pucData,
1133:../src/FreeRTOS/stream_buffer.c ****                                      size_t xCount )
1134:../src/FreeRTOS/stream_buffer.c **** {
1135:../src/FreeRTOS/stream_buffer.c ****     size_t xNextHead, xFirstLength;
1136:../src/FreeRTOS/stream_buffer.c **** 
1137:../src/FreeRTOS/stream_buffer.c ****     configASSERT( xCount > ( size_t ) 0 );
1138:../src/FreeRTOS/stream_buffer.c **** 
1139:../src/FreeRTOS/stream_buffer.c ****     xNextHead = pxStreamBuffer->xHead;
1140:../src/FreeRTOS/stream_buffer.c **** 
1141:../src/FreeRTOS/stream_buffer.c ****     /* Calculate the number of bytes that can be added in the first write -
1142:../src/FreeRTOS/stream_buffer.c ****      * which may be less than the total number of bytes that need to be added if
1143:../src/FreeRTOS/stream_buffer.c ****      * the buffer will wrap back to the beginning. */
1144:../src/FreeRTOS/stream_buffer.c ****     xFirstLength = configMIN( pxStreamBuffer->xLength - xNextHead, xCount );
1145:../src/FreeRTOS/stream_buffer.c **** 
1146:../src/FreeRTOS/stream_buffer.c ****     /* Write as many bytes as can be written in the first write. */
1147:../src/FreeRTOS/stream_buffer.c ****     configASSERT( ( xNextHead + xFirstLength ) <= pxStreamBuffer->xLength );
1148:../src/FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) p
1149:../src/FreeRTOS/stream_buffer.c **** 
1150:../src/FreeRTOS/stream_buffer.c ****     /* If the number of bytes written was less than the number that could be
1151:../src/FreeRTOS/stream_buffer.c ****      * written in the first write... */
1152:../src/FreeRTOS/stream_buffer.c ****     if( xCount > xFirstLength )
1153:../src/FreeRTOS/stream_buffer.c ****     {
1154:../src/FreeRTOS/stream_buffer.c ****         /* ...then write the remaining bytes to the start of the buffer. */
1155:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
1156:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
1157:../src/FreeRTOS/stream_buffer.c ****     }
1158:../src/FreeRTOS/stream_buffer.c ****     else
1159:../src/FreeRTOS/stream_buffer.c ****     {
1160:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1161:../src/FreeRTOS/stream_buffer.c ****     }
1162:../src/FreeRTOS/stream_buffer.c **** 
1163:../src/FreeRTOS/stream_buffer.c ****     xNextHead += xCount;
1164:../src/FreeRTOS/stream_buffer.c **** 
1165:../src/FreeRTOS/stream_buffer.c ****     if( xNextHead >= pxStreamBuffer->xLength )
1166:../src/FreeRTOS/stream_buffer.c ****     {
1167:../src/FreeRTOS/stream_buffer.c ****         xNextHead -= pxStreamBuffer->xLength;
1168:../src/FreeRTOS/stream_buffer.c ****     }
1169:../src/FreeRTOS/stream_buffer.c ****     else
1170:../src/FreeRTOS/stream_buffer.c ****     {
1171:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1172:../src/FreeRTOS/stream_buffer.c ****     }
1173:../src/FreeRTOS/stream_buffer.c **** 
1174:../src/FreeRTOS/stream_buffer.c ****     pxStreamBuffer->xHead = xNextHead;
1175:../src/FreeRTOS/stream_buffer.c **** 
1176:../src/FreeRTOS/stream_buffer.c ****     return xCount;
1177:../src/FreeRTOS/stream_buffer.c **** }
1178:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1179:../src/FreeRTOS/stream_buffer.c **** 
1180:../src/FreeRTOS/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t * pxStreamBuffer,
1181:../src/FreeRTOS/stream_buffer.c ****                                       uint8_t * pucData,
1182:../src/FreeRTOS/stream_buffer.c ****                                       size_t xMaxCount,
1183:../src/FreeRTOS/stream_buffer.c ****                                       size_t xBytesAvailable )
1184:../src/FreeRTOS/stream_buffer.c **** {
1185:../src/FreeRTOS/stream_buffer.c ****     size_t xCount, xFirstLength, xNextTail;
1186:../src/FreeRTOS/stream_buffer.c **** 
1187:../src/FreeRTOS/stream_buffer.c ****     /* Use the minimum of the wanted bytes and the available bytes. */
1188:../src/FreeRTOS/stream_buffer.c ****     xCount = configMIN( xBytesAvailable, xMaxCount );
1189:../src/FreeRTOS/stream_buffer.c **** 
1190:../src/FreeRTOS/stream_buffer.c ****     if( xCount > ( size_t ) 0 )
1191:../src/FreeRTOS/stream_buffer.c ****     {
1192:../src/FreeRTOS/stream_buffer.c ****         xNextTail = pxStreamBuffer->xTail;
1193:../src/FreeRTOS/stream_buffer.c **** 
1194:../src/FreeRTOS/stream_buffer.c ****         /* Calculate the number of bytes that can be read - which may be
1195:../src/FreeRTOS/stream_buffer.c ****          * less than the number wanted if the data wraps around to the start of
1196:../src/FreeRTOS/stream_buffer.c ****          * the buffer. */
1197:../src/FreeRTOS/stream_buffer.c ****         xFirstLength = configMIN( pxStreamBuffer->xLength - xNextTail, xCount );
1198:../src/FreeRTOS/stream_buffer.c **** 
1199:../src/FreeRTOS/stream_buffer.c ****         /* Obtain the number of bytes it is possible to obtain in the first
1200:../src/FreeRTOS/stream_buffer.c ****          * read.  Asserts check bounds of read and write. */
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( xFirstLength <= xMaxCount );
1202:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
1203:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTa
1204:../src/FreeRTOS/stream_buffer.c **** 
1205:../src/FreeRTOS/stream_buffer.c ****         /* If the total number of wanted bytes is greater than the number
1206:../src/FreeRTOS/stream_buffer.c ****          * that could be read in the first read... */
1207:../src/FreeRTOS/stream_buffer.c ****         if( xCount > xFirstLength )
1208:../src/FreeRTOS/stream_buffer.c ****         {
1209:../src/FreeRTOS/stream_buffer.c ****             /*...then read the remaining bytes from the start of the buffer. */
1210:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xCount <= xMaxCount );
1211:../src/FreeRTOS/stream_buffer.c ****             ( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->
1212:../src/FreeRTOS/stream_buffer.c ****         }
1213:../src/FreeRTOS/stream_buffer.c ****         else
1214:../src/FreeRTOS/stream_buffer.c ****         {
1215:../src/FreeRTOS/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
1216:../src/FreeRTOS/stream_buffer.c ****         }
1217:../src/FreeRTOS/stream_buffer.c **** 
1218:../src/FreeRTOS/stream_buffer.c ****         /* Move the tail pointer to effectively remove the data read from
1219:../src/FreeRTOS/stream_buffer.c ****          * the buffer. */
1220:../src/FreeRTOS/stream_buffer.c ****         xNextTail += xCount;
1221:../src/FreeRTOS/stream_buffer.c **** 
1222:../src/FreeRTOS/stream_buffer.c ****         if( xNextTail >= pxStreamBuffer->xLength )
1223:../src/FreeRTOS/stream_buffer.c ****         {
1224:../src/FreeRTOS/stream_buffer.c ****             xNextTail -= pxStreamBuffer->xLength;
1225:../src/FreeRTOS/stream_buffer.c ****         }
1226:../src/FreeRTOS/stream_buffer.c **** 
1227:../src/FreeRTOS/stream_buffer.c ****         pxStreamBuffer->xTail = xNextTail;
1228:../src/FreeRTOS/stream_buffer.c ****     }
1229:../src/FreeRTOS/stream_buffer.c ****     else
1230:../src/FreeRTOS/stream_buffer.c ****     {
1231:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1232:../src/FreeRTOS/stream_buffer.c ****     }
1233:../src/FreeRTOS/stream_buffer.c **** 
1234:../src/FreeRTOS/stream_buffer.c ****     return xCount;
1235:../src/FreeRTOS/stream_buffer.c **** }
1236:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1237:../src/FreeRTOS/stream_buffer.c **** 
1238:../src/FreeRTOS/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1239:../src/FreeRTOS/stream_buffer.c **** {
  29              		.loc 1 1239 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1240:../src/FreeRTOS/stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1241:../src/FreeRTOS/stream_buffer.c ****     size_t xCount;
  34              		.loc 1 1241 5 view .LVU1
1242:../src/FreeRTOS/stream_buffer.c **** 
1243:../src/FreeRTOS/stream_buffer.c ****     xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
  35              		.loc 1 1243 5 view .LVU2
  36              		.loc 1 1243 28 is_stmt 0 view .LVU3
  37 0000 082090E5 		ldr	r2, [r0, #8]
  38              		.loc 1 1243 54 view .LVU4
  39 0004 043090E5 		ldr	r3, [r0, #4]
  40              		.loc 1 1243 12 view .LVU5
  41 0008 033082E0 		add	r3, r2, r3
  42              	.LVL1:
1244:../src/FreeRTOS/stream_buffer.c ****     xCount -= pxStreamBuffer->xTail;
  43              		.loc 1 1244 5 is_stmt 1 view .LVU6
  44              		.loc 1 1244 29 is_stmt 0 view .LVU7
  45 000c 000090E5 		ldr	r0, [r0]
  46              	.LVL2:
  47              		.loc 1 1244 12 view .LVU8
  48 0010 000043E0 		sub	r0, r3, r0
  49              	.LVL3:
1245:../src/FreeRTOS/stream_buffer.c **** 
1246:../src/FreeRTOS/stream_buffer.c ****     if( xCount >= pxStreamBuffer->xLength )
  50              		.loc 1 1246 5 is_stmt 1 view .LVU9
  51              		.loc 1 1246 7 is_stmt 0 view .LVU10
  52 0014 000052E1 		cmp	r2, r0
  53 0018 1EFF2F81 		bxhi	lr
1247:../src/FreeRTOS/stream_buffer.c ****     {
1248:../src/FreeRTOS/stream_buffer.c ****         xCount -= pxStreamBuffer->xLength;
  54              		.loc 1 1248 9 is_stmt 1 view .LVU11
  55              		.loc 1 1248 16 is_stmt 0 view .LVU12
  56 001c 020040E0 		sub	r0, r0, r2
  57              	.LVL4:
1249:../src/FreeRTOS/stream_buffer.c ****     }
1250:../src/FreeRTOS/stream_buffer.c ****     else
1251:../src/FreeRTOS/stream_buffer.c ****     {
1252:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
  58              		.loc 1 1252 33 is_stmt 1 view .LVU13
1253:../src/FreeRTOS/stream_buffer.c ****     }
1254:../src/FreeRTOS/stream_buffer.c **** 
1255:../src/FreeRTOS/stream_buffer.c ****     return xCount;
  59              		.loc 1 1255 5 view .LVU14
1256:../src/FreeRTOS/stream_buffer.c **** }
  60              		.loc 1 1256 1 is_stmt 0 view .LVU15
  61 0020 1EFF2FE1 		bx	lr
  62              		.cfi_endproc
  63              	.LFE19:
  65              		.section	.rodata.prvInitialiseNewStreamBuffer.str1.4,"aMS",%progbits,1
  66              		.align	2
  67              	.LC0:
  68 0000 2E2E2F73 		.ascii	"../src/FreeRTOS/stream_buffer.c\000"
  68      72632F46 
  68      72656552 
  68      544F532F 
  68      73747265 
  69              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
  70              		.align	2
  71              		.syntax unified
  72              		.arm
  73              		.fpu neon
  75              	prvInitialiseNewStreamBuffer:
  76              	.LVL5:
  77              	.LFB20:
1257:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1258:../src/FreeRTOS/stream_buffer.c **** 
1259:../src/FreeRTOS/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1260:../src/FreeRTOS/stream_buffer.c ****                                           uint8_t * const pucBuffer,
1261:../src/FreeRTOS/stream_buffer.c ****                                           size_t xBufferSizeBytes,
1262:../src/FreeRTOS/stream_buffer.c ****                                           size_t xTriggerLevelBytes,
1263:../src/FreeRTOS/stream_buffer.c ****                                           uint8_t ucFlags )
1264:../src/FreeRTOS/stream_buffer.c **** {
  78              		.loc 1 1264 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 4, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 1 1264 1 is_stmt 0 view .LVU17
  83 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  84              		.cfi_def_cfa_offset 24
  85              		.cfi_offset 4, -24
  86              		.cfi_offset 5, -20
  87              		.cfi_offset 6, -16
  88              		.cfi_offset 7, -12
  89              		.cfi_offset 8, -8
  90              		.cfi_offset 14, -4
  91 0004 0040A0E1 		mov	r4, r0
  92 0008 0150A0E1 		mov	r5, r1
  93 000c 0270A0E1 		mov	r7, r2
  94 0010 0360A0E1 		mov	r6, r3
  95              	.LBB2:
1265:../src/FreeRTOS/stream_buffer.c ****     /* Assert here is deliberately writing to the entire buffer to ensure it can
1266:../src/FreeRTOS/stream_buffer.c ****      * be written to without generating exceptions, and is setting the buffer to a
1267:../src/FreeRTOS/stream_buffer.c ****      * known value to assist in development/debugging. */
1268:../src/FreeRTOS/stream_buffer.c ****     #if ( configASSERT_DEFINED == 1 )
1269:../src/FreeRTOS/stream_buffer.c ****         {
1270:../src/FreeRTOS/stream_buffer.c ****             /* The value written just has to be identifiable when looking at the
1271:../src/FreeRTOS/stream_buffer.c ****              * memory.  Don't use 0xA5 as that is the stack fill value and could
1272:../src/FreeRTOS/stream_buffer.c ****              * result in confusion as to what is actually being observed. */
1273:../src/FreeRTOS/stream_buffer.c ****             const BaseType_t xWriteValue = 0x55;
  96              		.loc 1 1273 13 is_stmt 1 view .LVU18
  97              	.LVL6:
1274:../src/FreeRTOS/stream_buffer.c ****             configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer )
  98              		.loc 1 1274 13 view .LVU19
  99 0014 5510A0E3 		mov	r1, #85
 100              	.LVL7:
 101              		.loc 1 1274 13 is_stmt 0 view .LVU20
 102 0018 0500A0E1 		mov	r0, r5
 103              	.LVL8:
 104              		.loc 1 1274 13 view .LVU21
 105 001c FEFFFFEB 		bl	memset
 106              	.LVL9:
 107              		.loc 1 1274 13 view .LVU22
 108 0020 000055E1 		cmp	r5, r0
 109 0024 0300000A 		beq	.L4
 110              		.loc 1 1274 13 is_stmt 1 discriminator 1 view .LVU23
 111 0028 FA1400E3 		movw	r1, #1274
 112 002c 000000E3 		movw	r0, #:lower16:.LC0
 113 0030 000040E3 		movt	r0, #:upper16:.LC0
 114 0034 FEFFFFEB 		bl	R_OS_AssertCalled
 115              	.LVL10:
 116              	.L4:
 117              		.loc 1 1274 100 discriminator 3 view .LVU24
 118              	.LBE2:
1275:../src/FreeRTOS/stream_buffer.c ****         } /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1276:../src/FreeRTOS/stream_buffer.c ****     #endif
1277:../src/FreeRTOS/stream_buffer.c **** 
1278:../src/FreeRTOS/stream_buffer.c ****     ( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 mem
 119              		.loc 1 1278 5 discriminator 3 view .LVU25
 120              		.loc 1 1278 14 is_stmt 0 discriminator 3 view .LVU26
 121 0038 2420A0E3 		mov	r2, #36
 122 003c 0010A0E3 		mov	r1, #0
 123 0040 0400A0E1 		mov	r0, r4
 124 0044 FEFFFFEB 		bl	memset
 125              	.LVL11:
1279:../src/FreeRTOS/stream_buffer.c ****     pxStreamBuffer->pucBuffer = pucBuffer;
 126              		.loc 1 1279 5 is_stmt 1 discriminator 3 view .LVU27
 127              		.loc 1 1279 31 is_stmt 0 discriminator 3 view .LVU28
 128 0048 185084E5 		str	r5, [r4, #24]
1280:../src/FreeRTOS/stream_buffer.c ****     pxStreamBuffer->xLength = xBufferSizeBytes;
 129              		.loc 1 1280 5 is_stmt 1 discriminator 3 view .LVU29
 130              		.loc 1 1280 29 is_stmt 0 discriminator 3 view .LVU30
 131 004c 087084E5 		str	r7, [r4, #8]
1281:../src/FreeRTOS/stream_buffer.c ****     pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 132              		.loc 1 1281 5 is_stmt 1 discriminator 3 view .LVU31
 133              		.loc 1 1281 40 is_stmt 0 discriminator 3 view .LVU32
 134 0050 0C6084E5 		str	r6, [r4, #12]
1282:../src/FreeRTOS/stream_buffer.c ****     pxStreamBuffer->ucFlags = ucFlags;
 135              		.loc 1 1282 5 is_stmt 1 discriminator 3 view .LVU33
 136              		.loc 1 1282 29 is_stmt 0 discriminator 3 view .LVU34
 137 0054 1830DDE5 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 138 0058 1C30C4E5 		strb	r3, [r4, #28]
1283:../src/FreeRTOS/stream_buffer.c **** }
 139              		.loc 1 1283 1 discriminator 3 view .LVU35
 140 005c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 141              		.cfi_endproc
 142              	.LFE20:
 144              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
 145              		.align	2
 146              		.syntax unified
 147              		.arm
 148              		.fpu neon
 150              	prvWriteBytesToBuffer:
 151              	.LVL12:
 152              	.LFB17:
1134:../src/FreeRTOS/stream_buffer.c ****     size_t xNextHead, xFirstLength;
 153              		.loc 1 1134 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
1134:../src/FreeRTOS/stream_buffer.c ****     size_t xNextHead, xFirstLength;
 157              		.loc 1 1134 1 is_stmt 0 view .LVU37
 158 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 159              		.cfi_def_cfa_offset 32
 160              		.cfi_offset 4, -32
 161              		.cfi_offset 5, -28
 162              		.cfi_offset 6, -24
 163              		.cfi_offset 7, -20
 164              		.cfi_offset 8, -16
 165              		.cfi_offset 9, -12
 166              		.cfi_offset 10, -8
 167              		.cfi_offset 14, -4
 168 0004 0050A0E1 		mov	r5, r0
 169 0008 0180A0E1 		mov	r8, r1
1135:../src/FreeRTOS/stream_buffer.c **** 
 170              		.loc 1 1135 5 is_stmt 1 view .LVU38
1137:../src/FreeRTOS/stream_buffer.c **** 
 171              		.loc 1 1137 5 view .LVU39
 172 000c 004052E2 		subs	r4, r2, #0
 173 0010 1D00000A 		beq	.L13
 174              	.LVL13:
 175              	.L7:
1137:../src/FreeRTOS/stream_buffer.c **** 
 176              		.loc 1 1137 42 discriminator 3 view .LVU40
1139:../src/FreeRTOS/stream_buffer.c **** 
 177              		.loc 1 1139 5 discriminator 3 view .LVU41
1139:../src/FreeRTOS/stream_buffer.c **** 
 178              		.loc 1 1139 15 is_stmt 0 discriminator 3 view .LVU42
 179 0014 046095E5 		ldr	r6, [r5, #4]
 180              	.LVL14:
1144:../src/FreeRTOS/stream_buffer.c **** 
 181              		.loc 1 1144 5 is_stmt 1 discriminator 3 view .LVU43
1144:../src/FreeRTOS/stream_buffer.c **** 
 182              		.loc 1 1144 20 is_stmt 0 discriminator 3 view .LVU44
 183 0018 083095E5 		ldr	r3, [r5, #8]
 184 001c 067043E0 		sub	r7, r3, r6
1144:../src/FreeRTOS/stream_buffer.c **** 
 185              		.loc 1 1144 18 discriminator 3 view .LVU45
 186 0020 040057E1 		cmp	r7, r4
 187 0024 0470A021 		movcs	r7, r4
 188              	.LVL15:
1147:../src/FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) p
 189              		.loc 1 1147 5 is_stmt 1 discriminator 3 view .LVU46
 190 0028 072086E0 		add	r2, r6, r7
 191 002c 020053E1 		cmp	r3, r2
 192 0030 1A00003A 		bcc	.L14
 193              	.L8:
1147:../src/FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) p
 194              		.loc 1 1147 76 discriminator 3 view .LVU47
1148:../src/FreeRTOS/stream_buffer.c **** 
 195              		.loc 1 1148 5 discriminator 3 view .LVU48
1148:../src/FreeRTOS/stream_buffer.c **** 
 196              		.loc 1 1148 52 is_stmt 0 discriminator 3 view .LVU49
 197 0034 180095E5 		ldr	r0, [r5, #24]
1148:../src/FreeRTOS/stream_buffer.c **** 
 198              		.loc 1 1148 14 discriminator 3 view .LVU50
 199 0038 0720A0E1 		mov	r2, r7
 200 003c 0810A0E1 		mov	r1, r8
 201 0040 060080E0 		add	r0, r0, r6
 202 0044 FEFFFFEB 		bl	memcpy
 203              	.LVL16:
1152:../src/FreeRTOS/stream_buffer.c ****     {
 204              		.loc 1 1152 5 is_stmt 1 discriminator 3 view .LVU51
1152:../src/FreeRTOS/stream_buffer.c ****     {
 205              		.loc 1 1152 7 is_stmt 0 discriminator 3 view .LVU52
 206 0048 070054E1 		cmp	r4, r7
 207 004c 0700009A 		bls	.L9
1155:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
 208              		.loc 1 1155 9 is_stmt 1 view .LVU53
 209 0050 079044E0 		sub	r9, r4, r7
 210 0054 083095E5 		ldr	r3, [r5, #8]
 211 0058 030059E1 		cmp	r9, r3
 212 005c 1400008A 		bhi	.L15
 213              	.L10:
1155:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
 214              		.loc 1 1155 77 discriminator 3 view .LVU54
1156:../src/FreeRTOS/stream_buffer.c ****     }
 215              		.loc 1 1156 9 discriminator 3 view .LVU55
1156:../src/FreeRTOS/stream_buffer.c ****     }
 216              		.loc 1 1156 18 is_stmt 0 discriminator 3 view .LVU56
 217 0060 0920A0E1 		mov	r2, r9
 218 0064 071088E0 		add	r1, r8, r7
 219 0068 180095E5 		ldr	r0, [r5, #24]
 220 006c FEFFFFEB 		bl	memcpy
 221              	.LVL17:
 222              	.L9:
1160:../src/FreeRTOS/stream_buffer.c ****     }
 223              		.loc 1 1160 33 is_stmt 1 view .LVU57
1163:../src/FreeRTOS/stream_buffer.c **** 
 224              		.loc 1 1163 5 view .LVU58
1163:../src/FreeRTOS/stream_buffer.c **** 
 225              		.loc 1 1163 15 is_stmt 0 view .LVU59
 226 0070 066084E0 		add	r6, r4, r6
 227              	.LVL18:
1165:../src/FreeRTOS/stream_buffer.c ****     {
 228              		.loc 1 1165 5 is_stmt 1 view .LVU60
1165:../src/FreeRTOS/stream_buffer.c ****     {
 229              		.loc 1 1165 36 is_stmt 0 view .LVU61
 230 0074 083095E5 		ldr	r3, [r5, #8]
1165:../src/FreeRTOS/stream_buffer.c ****     {
 231              		.loc 1 1165 7 view .LVU62
 232 0078 060053E1 		cmp	r3, r6
1167:../src/FreeRTOS/stream_buffer.c ****     }
 233              		.loc 1 1167 9 is_stmt 1 view .LVU63
1167:../src/FreeRTOS/stream_buffer.c ****     }
 234              		.loc 1 1167 19 is_stmt 0 view .LVU64
 235 007c 03604690 		subls	r6, r6, r3
 236              	.LVL19:
 237              	.L11:
1171:../src/FreeRTOS/stream_buffer.c ****     }
 238              		.loc 1 1171 33 is_stmt 1 view .LVU65
1174:../src/FreeRTOS/stream_buffer.c **** 
 239              		.loc 1 1174 5 view .LVU66
1174:../src/FreeRTOS/stream_buffer.c **** 
 240              		.loc 1 1174 27 is_stmt 0 view .LVU67
 241 0080 046085E5 		str	r6, [r5, #4]
1176:../src/FreeRTOS/stream_buffer.c **** }
 242              		.loc 1 1176 5 is_stmt 1 view .LVU68
1177:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 243              		.loc 1 1177 1 is_stmt 0 view .LVU69
 244 0084 0400A0E1 		mov	r0, r4
 245 0088 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 246              	.LVL20:
 247              	.L13:
1137:../src/FreeRTOS/stream_buffer.c **** 
 248              		.loc 1 1137 5 is_stmt 1 discriminator 1 view .LVU70
 249 008c 711400E3 		movw	r1, #1137
 250              	.LVL21:
1137:../src/FreeRTOS/stream_buffer.c **** 
 251              		.loc 1 1137 5 is_stmt 0 discriminator 1 view .LVU71
 252 0090 000000E3 		movw	r0, #:lower16:.LC0
 253              	.LVL22:
1137:../src/FreeRTOS/stream_buffer.c **** 
 254              		.loc 1 1137 5 discriminator 1 view .LVU72
 255 0094 000040E3 		movt	r0, #:upper16:.LC0
 256 0098 FEFFFFEB 		bl	R_OS_AssertCalled
 257              	.LVL23:
1137:../src/FreeRTOS/stream_buffer.c **** 
 258              		.loc 1 1137 5 discriminator 1 view .LVU73
 259 009c DCFFFFEA 		b	.L7
 260              	.LVL24:
 261              	.L14:
1147:../src/FreeRTOS/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) p
 262              		.loc 1 1147 5 is_stmt 1 discriminator 1 view .LVU74
 263 00a0 7B1400E3 		movw	r1, #1147
 264 00a4 000000E3 		movw	r0, #:lower16:.LC0
 265 00a8 000040E3 		movt	r0, #:upper16:.LC0
 266 00ac FEFFFFEB 		bl	R_OS_AssertCalled
 267              	.LVL25:
 268 00b0 DFFFFFEA 		b	.L8
 269              	.L15:
1155:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
 270              		.loc 1 1155 9 discriminator 1 view .LVU75
 271 00b4 831400E3 		movw	r1, #1155
 272 00b8 000000E3 		movw	r0, #:lower16:.LC0
 273 00bc 000040E3 		movt	r0, #:upper16:.LC0
 274 00c0 FEFFFFEB 		bl	R_OS_AssertCalled
 275              	.LVL26:
 276 00c4 E5FFFFEA 		b	.L10
 277              		.cfi_endproc
 278              	.LFE17:
 280              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 281              		.align	2
 282              		.syntax unified
 283              		.arm
 284              		.fpu neon
 286              	prvWriteMessageToBuffer:
 287              	.LVL27:
 288              	.LFB8:
 705:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xShouldWrite;
 289              		.loc 1 705 1 view -0
 290              		.cfi_startproc
 291              		@ args = 4, pretend = 0, frame = 8
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 705:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xShouldWrite;
 293              		.loc 1 705 1 is_stmt 0 view .LVU77
 294 0000 30402DE9 		push	{r4, r5, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 5, -8
 298              		.cfi_offset 14, -4
 299 0004 0CD04DE2 		sub	sp, sp, #12
 300              		.cfi_def_cfa_offset 24
 301 0008 0050A0E1 		mov	r5, r0
 302 000c 04208DE5 		str	r2, [sp, #4]
 706:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn;
 303              		.loc 1 706 5 is_stmt 1 view .LVU78
 707:../src/FreeRTOS/stream_buffer.c **** 
 304              		.loc 1 707 5 view .LVU79
 709:../src/FreeRTOS/stream_buffer.c ****     {
 305              		.loc 1 709 5 view .LVU80
 709:../src/FreeRTOS/stream_buffer.c ****     {
 306              		.loc 1 709 7 is_stmt 0 view .LVU81
 307 0010 000053E2 		subs	r0, r3, #0
 308              	.LVL28:
 709:../src/FreeRTOS/stream_buffer.c ****     {
 309              		.loc 1 709 7 view .LVU82
 310 0014 0B00000A 		beq	.L17
 311 0018 0140A0E1 		mov	r4, r1
 715:../src/FreeRTOS/stream_buffer.c ****     {
 312              		.loc 1 715 10 is_stmt 1 view .LVU83
 715:../src/FreeRTOS/stream_buffer.c ****     {
 313              		.loc 1 715 30 is_stmt 0 view .LVU84
 314 001c 1C30D5E5 		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 315              	.LVL29:
 715:../src/FreeRTOS/stream_buffer.c ****     {
 316              		.loc 1 715 12 view .LVU85
 317 0020 010013E3 		tst	r3, #1
 318 0024 0900001A 		bne	.L18
 720:../src/FreeRTOS/stream_buffer.c ****         xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 319              		.loc 1 720 9 is_stmt 1 view .LVU86
 320              	.LVL30:
 721:../src/FreeRTOS/stream_buffer.c ****     }
 321              		.loc 1 721 9 view .LVU87
 721:../src/FreeRTOS/stream_buffer.c ****     }
 322              		.loc 1 721 28 is_stmt 0 view .LVU88
 323 0028 0230A0E1 		mov	r3, r2
 324 002c 020050E1 		cmp	r0, r2
 325 0030 0030A031 		movcc	r3, r0
 721:../src/FreeRTOS/stream_buffer.c ****     }
 326              		.loc 1 721 26 view .LVU89
 327 0034 04308DE5 		str	r3, [sp, #4]
 738:../src/FreeRTOS/stream_buffer.c ****     {
 328              		.loc 1 738 5 is_stmt 1 view .LVU90
 329              	.LVL31:
 330              	.L19:
 741:../src/FreeRTOS/stream_buffer.c ****     }
 331              		.loc 1 741 9 view .LVU91
 741:../src/FreeRTOS/stream_buffer.c ****     }
 332              		.loc 1 741 19 is_stmt 0 view .LVU92
 333 0038 04209DE5 		ldr	r2, [sp, #4]
 334 003c 0410A0E1 		mov	r1, r4
 335 0040 0500A0E1 		mov	r0, r5
 336 0044 FEFFFFEB 		bl	prvWriteBytesToBuffer
 337              	.LVL32:
 338              	.L17:
 748:../src/FreeRTOS/stream_buffer.c **** }
 339              		.loc 1 748 5 is_stmt 1 view .LVU93
 749:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 340              		.loc 1 749 1 is_stmt 0 view .LVU94
 341 0048 0CD08DE2 		add	sp, sp, #12
 342              		.cfi_remember_state
 343              		.cfi_def_cfa_offset 12
 344              		@ sp needed
 345 004c 3080BDE8 		pop	{r4, r5, pc}
 346              	.LVL33:
 347              	.L18:
 348              		.cfi_restore_state
 723:../src/FreeRTOS/stream_buffer.c ****     {
 349              		.loc 1 723 10 is_stmt 1 view .LVU95
 723:../src/FreeRTOS/stream_buffer.c ****     {
 350              		.loc 1 723 12 is_stmt 0 view .LVU96
 351 0050 18309DE5 		ldr	r3, [sp, #24]
 352 0054 030050E1 		cmp	r0, r3
 745:../src/FreeRTOS/stream_buffer.c ****     }
 353              		.loc 1 745 17 view .LVU97
 354 0058 0000A033 		movcc	r0, #0
 355              	.LVL34:
 745:../src/FreeRTOS/stream_buffer.c ****     }
 356              		.loc 1 745 17 view .LVU98
 357 005c F9FFFF3A 		bcc	.L17
 358              	.LVL35:
 359              	.L22:
 729:../src/FreeRTOS/stream_buffer.c ****         ( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), 
 360              		.loc 1 729 9 is_stmt 1 view .LVU99
 730:../src/FreeRTOS/stream_buffer.c ****     }
 361              		.loc 1 730 9 view .LVU100
 730:../src/FreeRTOS/stream_buffer.c ****     }
 362              		.loc 1 730 18 is_stmt 0 view .LVU101
 363 0060 0420A0E3 		mov	r2, #4
 364              	.LVL36:
 730:../src/FreeRTOS/stream_buffer.c ****     }
 365              		.loc 1 730 18 view .LVU102
 366 0064 02108DE0 		add	r1, sp, r2
 367              	.LVL37:
 730:../src/FreeRTOS/stream_buffer.c ****     }
 368              		.loc 1 730 18 view .LVU103
 369 0068 0500A0E1 		mov	r0, r5
 370              	.LVL38:
 730:../src/FreeRTOS/stream_buffer.c ****     }
 371              		.loc 1 730 18 view .LVU104
 372 006c FEFFFFEB 		bl	prvWriteBytesToBuffer
 373              	.LVL39:
 738:../src/FreeRTOS/stream_buffer.c ****     {
 374              		.loc 1 738 5 is_stmt 1 view .LVU105
 375 0070 F0FFFFEA 		b	.L19
 376              		.cfi_endproc
 377              	.LFE8:
 379              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
 380              		.align	2
 381              		.syntax unified
 382              		.arm
 383              		.fpu neon
 385              	prvReadBytesFromBuffer:
 386              	.LVL40:
 387              	.LFB18:
1184:../src/FreeRTOS/stream_buffer.c ****     size_t xCount, xFirstLength, xNextTail;
 388              		.loc 1 1184 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
1184:../src/FreeRTOS/stream_buffer.c ****     size_t xCount, xFirstLength, xNextTail;
 392              		.loc 1 1184 1 is_stmt 0 view .LVU107
 393 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 394              		.cfi_def_cfa_offset 32
 395              		.cfi_offset 4, -32
 396              		.cfi_offset 5, -28
 397              		.cfi_offset 6, -24
 398              		.cfi_offset 7, -20
 399              		.cfi_offset 8, -16
 400              		.cfi_offset 9, -12
 401              		.cfi_offset 10, -8
 402              		.cfi_offset 14, -4
1185:../src/FreeRTOS/stream_buffer.c **** 
 403              		.loc 1 1185 5 is_stmt 1 view .LVU108
1188:../src/FreeRTOS/stream_buffer.c **** 
 404              		.loc 1 1188 5 view .LVU109
1188:../src/FreeRTOS/stream_buffer.c **** 
 405              		.loc 1 1188 12 is_stmt 0 view .LVU110
 406 0004 030052E1 		cmp	r2, r3
 407 0008 0240A031 		movcc	r4, r2
 408 000c 0340A021 		movcs	r4, r3
 409              	.LVL41:
1190:../src/FreeRTOS/stream_buffer.c ****     {
 410              		.loc 1 1190 5 is_stmt 1 view .LVU111
1190:../src/FreeRTOS/stream_buffer.c ****     {
 411              		.loc 1 1190 7 is_stmt 0 view .LVU112
 412 0010 000054E3 		cmp	r4, #0
 413 0014 1F00000A 		beq	.L23
 414 0018 0060A0E1 		mov	r6, r0
 415 001c 0180A0E1 		mov	r8, r1
 416 0020 0270A0E1 		mov	r7, r2
1192:../src/FreeRTOS/stream_buffer.c **** 
 417              		.loc 1 1192 9 is_stmt 1 view .LVU113
1192:../src/FreeRTOS/stream_buffer.c **** 
 418              		.loc 1 1192 19 is_stmt 0 view .LVU114
 419 0024 009090E5 		ldr	r9, [r0]
 420              	.LVL42:
1197:../src/FreeRTOS/stream_buffer.c **** 
 421              		.loc 1 1197 9 is_stmt 1 view .LVU115
1197:../src/FreeRTOS/stream_buffer.c **** 
 422              		.loc 1 1197 24 is_stmt 0 view .LVU116
 423 0028 085090E5 		ldr	r5, [r0, #8]
 424 002c 095045E0 		sub	r5, r5, r9
1197:../src/FreeRTOS/stream_buffer.c **** 
 425              		.loc 1 1197 22 view .LVU117
 426 0030 040055E1 		cmp	r5, r4
 427 0034 0450A021 		movcs	r5, r4
 428              	.LVL43:
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 429              		.loc 1 1201 9 is_stmt 1 view .LVU118
 430 0038 050052E1 		cmp	r2, r5
 431 003c 1700003A 		bcc	.L31
 432              	.LVL44:
 433              	.L25:
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 434              		.loc 1 1201 50 discriminator 3 view .LVU119
1202:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTa
 435              		.loc 1 1202 9 discriminator 3 view .LVU120
 436 0040 053089E0 		add	r3, r9, r5
 437 0044 082096E5 		ldr	r2, [r6, #8]
 438 0048 020053E1 		cmp	r3, r2
 439 004c 1800008A 		bhi	.L32
 440              	.L26:
1202:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTa
 441              		.loc 1 1202 80 discriminator 3 view .LVU121
1203:../src/FreeRTOS/stream_buffer.c **** 
 442              		.loc 1 1203 9 discriminator 3 view .LVU122
1203:../src/FreeRTOS/stream_buffer.c **** 
 443              		.loc 1 1203 80 is_stmt 0 discriminator 3 view .LVU123
 444 0050 181096E5 		ldr	r1, [r6, #24]
1203:../src/FreeRTOS/stream_buffer.c **** 
 445              		.loc 1 1203 18 discriminator 3 view .LVU124
 446 0054 0520A0E1 		mov	r2, r5
 447 0058 091081E0 		add	r1, r1, r9
 448 005c 0800A0E1 		mov	r0, r8
 449 0060 FEFFFFEB 		bl	memcpy
 450              	.LVL45:
1207:../src/FreeRTOS/stream_buffer.c ****         {
 451              		.loc 1 1207 9 is_stmt 1 discriminator 3 view .LVU125
1207:../src/FreeRTOS/stream_buffer.c ****         {
 452              		.loc 1 1207 11 is_stmt 0 discriminator 3 view .LVU126
 453 0064 050054E1 		cmp	r4, r5
 454 0068 0500009A 		bls	.L27
1210:../src/FreeRTOS/stream_buffer.c ****             ( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->
 455              		.loc 1 1210 13 is_stmt 1 view .LVU127
 456 006c 040057E1 		cmp	r7, r4
 457 0070 1400003A 		bcc	.L33
 458              	.L28:
1210:../src/FreeRTOS/stream_buffer.c ****             ( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->
 459              		.loc 1 1210 48 discriminator 3 view .LVU128
1211:../src/FreeRTOS/stream_buffer.c ****         }
 460              		.loc 1 1211 13 discriminator 3 view .LVU129
1211:../src/FreeRTOS/stream_buffer.c ****         }
 461              		.loc 1 1211 22 is_stmt 0 discriminator 3 view .LVU130
 462 0074 052044E0 		sub	r2, r4, r5
 463 0078 181096E5 		ldr	r1, [r6, #24]
 464 007c 050088E0 		add	r0, r8, r5
 465 0080 FEFFFFEB 		bl	memcpy
 466              	.LVL46:
 467              	.L27:
1215:../src/FreeRTOS/stream_buffer.c ****         }
 468              		.loc 1 1215 37 is_stmt 1 view .LVU131
1220:../src/FreeRTOS/stream_buffer.c **** 
 469              		.loc 1 1220 9 view .LVU132
1220:../src/FreeRTOS/stream_buffer.c **** 
 470              		.loc 1 1220 19 is_stmt 0 view .LVU133
 471 0084 093084E0 		add	r3, r4, r9
 472              	.LVL47:
1222:../src/FreeRTOS/stream_buffer.c ****         {
 473              		.loc 1 1222 9 is_stmt 1 view .LVU134
1222:../src/FreeRTOS/stream_buffer.c ****         {
 474              		.loc 1 1222 40 is_stmt 0 view .LVU135
 475 0088 082096E5 		ldr	r2, [r6, #8]
1222:../src/FreeRTOS/stream_buffer.c ****         {
 476              		.loc 1 1222 11 view .LVU136
 477 008c 030052E1 		cmp	r2, r3
1224:../src/FreeRTOS/stream_buffer.c ****         }
 478              		.loc 1 1224 13 is_stmt 1 view .LVU137
1224:../src/FreeRTOS/stream_buffer.c ****         }
 479              		.loc 1 1224 23 is_stmt 0 view .LVU138
 480 0090 02304390 		subls	r3, r3, r2
 481              	.LVL48:
 482              	.L29:
1227:../src/FreeRTOS/stream_buffer.c ****     }
 483              		.loc 1 1227 9 is_stmt 1 view .LVU139
1227:../src/FreeRTOS/stream_buffer.c ****     }
 484              		.loc 1 1227 31 is_stmt 0 view .LVU140
 485 0094 003086E5 		str	r3, [r6]
1231:../src/FreeRTOS/stream_buffer.c ****     }
 486              		.loc 1 1231 33 is_stmt 1 view .LVU141
1234:../src/FreeRTOS/stream_buffer.c **** }
 487              		.loc 1 1234 5 view .LVU142
 488              	.LVL49:
 489              	.L23:
1235:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 490              		.loc 1 1235 1 is_stmt 0 view .LVU143
 491 0098 0400A0E1 		mov	r0, r4
 492 009c F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 493              	.LVL50:
 494              	.L31:
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 495              		.loc 1 1201 9 is_stmt 1 discriminator 1 view .LVU144
 496 00a0 B11400E3 		movw	r1, #1201
 497              	.LVL51:
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 498              		.loc 1 1201 9 is_stmt 0 discriminator 1 view .LVU145
 499 00a4 000000E3 		movw	r0, #:lower16:.LC0
 500              	.LVL52:
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 501              		.loc 1 1201 9 discriminator 1 view .LVU146
 502 00a8 000040E3 		movt	r0, #:upper16:.LC0
 503 00ac FEFFFFEB 		bl	R_OS_AssertCalled
 504              	.LVL53:
1201:../src/FreeRTOS/stream_buffer.c ****         configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 505              		.loc 1 1201 9 discriminator 1 view .LVU147
 506 00b0 E2FFFFEA 		b	.L25
 507              	.L32:
1202:../src/FreeRTOS/stream_buffer.c ****         ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTa
 508              		.loc 1 1202 9 is_stmt 1 discriminator 1 view .LVU148
 509 00b4 B21400E3 		movw	r1, #1202
 510 00b8 000000E3 		movw	r0, #:lower16:.LC0
 511 00bc 000040E3 		movt	r0, #:upper16:.LC0
 512 00c0 FEFFFFEB 		bl	R_OS_AssertCalled
 513              	.LVL54:
 514 00c4 E1FFFFEA 		b	.L26
 515              	.L33:
1210:../src/FreeRTOS/stream_buffer.c ****             ( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->
 516              		.loc 1 1210 13 discriminator 1 view .LVU149
 517 00c8 BA1400E3 		movw	r1, #1210
 518 00cc 000000E3 		movw	r0, #:lower16:.LC0
 519 00d0 000040E3 		movt	r0, #:upper16:.LC0
 520 00d4 FEFFFFEB 		bl	R_OS_AssertCalled
 521              	.LVL55:
 522 00d8 E5FFFFEA 		b	.L28
 523              		.cfi_endproc
 524              	.LFE18:
 526              		.section	.text.prvReadMessageFromBuffer,"ax",%progbits
 527              		.align	2
 528              		.syntax unified
 529              		.arm
 530              		.fpu neon
 532              	prvReadMessageFromBuffer:
 533              	.LVL56:
 534              	.LFB12:
 963:../src/FreeRTOS/stream_buffer.c ****     size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 535              		.loc 1 963 1 view -0
 536              		.cfi_startproc
 537              		@ args = 4, pretend = 0, frame = 8
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 963:../src/FreeRTOS/stream_buffer.c ****     size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 539              		.loc 1 963 1 is_stmt 0 view .LVU151
 540 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 541              		.cfi_def_cfa_offset 28
 542              		.cfi_offset 4, -28
 543              		.cfi_offset 5, -24
 544              		.cfi_offset 6, -20
 545              		.cfi_offset 7, -16
 546              		.cfi_offset 8, -12
 547              		.cfi_offset 9, -8
 548              		.cfi_offset 14, -4
 549 0004 0CD04DE2 		sub	sp, sp, #12
 550              		.cfi_def_cfa_offset 40
 551 0008 0050A0E1 		mov	r5, r0
 552 000c 0170A0E1 		mov	r7, r1
 553 0010 0260A0E1 		mov	r6, r2
 554 0014 0340A0E1 		mov	r4, r3
 555 0018 28809DE5 		ldr	r8, [sp, #40]
 964:../src/FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 556              		.loc 1 964 5 is_stmt 1 view .LVU152
 965:../src/FreeRTOS/stream_buffer.c **** 
 557              		.loc 1 965 5 view .LVU153
 967:../src/FreeRTOS/stream_buffer.c ****     {
 558              		.loc 1 967 5 view .LVU154
 967:../src/FreeRTOS/stream_buffer.c ****     {
 559              		.loc 1 967 7 is_stmt 0 view .LVU155
 560 001c 000058E3 		cmp	r8, #0
 561 0020 0600001A 		bne	.L38
 562              	.LVL57:
 563              	.L35:
1004:../src/FreeRTOS/stream_buffer.c **** 
 564              		.loc 1 1004 5 is_stmt 1 view .LVU156
1004:../src/FreeRTOS/stream_buffer.c **** 
 565              		.loc 1 1004 23 is_stmt 0 view .LVU157
 566 0024 0430A0E1 		mov	r3, r4
 567 0028 0620A0E1 		mov	r2, r6
 568 002c 0710A0E1 		mov	r1, r7
 569 0030 0500A0E1 		mov	r0, r5
 570 0034 FEFFFFEB 		bl	prvReadBytesFromBuffer
 571              	.LVL58:
1006:../src/FreeRTOS/stream_buffer.c **** }
 572              		.loc 1 1006 5 is_stmt 1 view .LVU158
1007:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 573              		.loc 1 1007 1 is_stmt 0 view .LVU159
 574 0038 0CD08DE2 		add	sp, sp, #12
 575              		.cfi_remember_state
 576              		.cfi_def_cfa_offset 28
 577              		@ sp needed
 578 003c F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 579              	.LVL59:
 580              	.L38:
 581              		.cfi_restore_state
 973:../src/FreeRTOS/stream_buffer.c ****         ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBy
 582              		.loc 1 973 9 is_stmt 1 view .LVU160
 973:../src/FreeRTOS/stream_buffer.c ****         ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBy
 583              		.loc 1 973 23 is_stmt 0 view .LVU161
 584 0040 009090E5 		ldr	r9, [r0]
 585              	.LVL60:
 974:../src/FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 586              		.loc 1 974 9 is_stmt 1 view .LVU162
 974:../src/FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 587              		.loc 1 974 18 is_stmt 0 view .LVU163
 588 0044 0820A0E1 		mov	r2, r8
 589              	.LVL61:
 974:../src/FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 590              		.loc 1 974 18 view .LVU164
 591 0048 04108DE2 		add	r1, sp, #4
 592              	.LVL62:
 974:../src/FreeRTOS/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 593              		.loc 1 974 18 view .LVU165
 594 004c FEFFFFEB 		bl	prvReadBytesFromBuffer
 595              	.LVL63:
 975:../src/FreeRTOS/stream_buffer.c **** 
 596              		.loc 1 975 9 is_stmt 1 view .LVU166
 975:../src/FreeRTOS/stream_buffer.c **** 
 597              		.loc 1 975 28 is_stmt 0 view .LVU167
 598 0050 04309DE5 		ldr	r3, [sp, #4]
 599              	.LVL64:
 979:../src/FreeRTOS/stream_buffer.c **** 
 600              		.loc 1 979 9 is_stmt 1 view .LVU168
 979:../src/FreeRTOS/stream_buffer.c **** 
 601              		.loc 1 979 25 is_stmt 0 view .LVU169
 602 0054 084044E0 		sub	r4, r4, r8
 603              	.LVL65:
 983:../src/FreeRTOS/stream_buffer.c ****         {
 604              		.loc 1 983 9 is_stmt 1 view .LVU170
 983:../src/FreeRTOS/stream_buffer.c ****         {
 605              		.loc 1 983 11 is_stmt 0 view .LVU171
 606 0058 030056E1 		cmp	r6, r3
 988:../src/FreeRTOS/stream_buffer.c ****             xNextMessageLength = 0;
 607              		.loc 1 988 13 is_stmt 1 view .LVU172
 988:../src/FreeRTOS/stream_buffer.c ****             xNextMessageLength = 0;
 608              		.loc 1 988 35 is_stmt 0 view .LVU173
 609 005c 00908535 		strcc	r9, [r5]
 989:../src/FreeRTOS/stream_buffer.c ****         }
 610              		.loc 1 989 13 is_stmt 1 view .LVU174
 611              	.LVL66:
 989:../src/FreeRTOS/stream_buffer.c ****         }
 612              		.loc 1 989 32 is_stmt 0 view .LVU175
 613 0060 0060A033 		movcc	r6, #0
 614              	.LVL67:
 989:../src/FreeRTOS/stream_buffer.c ****         }
 615              		.loc 1 989 32 view .LVU176
 616 0064 EEFFFF3A 		bcc	.L35
 617              	.LVL68:
 618              	.L36:
 975:../src/FreeRTOS/stream_buffer.c **** 
 619              		.loc 1 975 28 view .LVU177
 620 0068 0360A0E1 		mov	r6, r3
 621              	.LVL69:
 975:../src/FreeRTOS/stream_buffer.c **** 
 622              		.loc 1 975 28 view .LVU178
 623 006c ECFFFFEA 		b	.L35
 624              		.cfi_endproc
 625              	.LFE12:
 627              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
 628              		.align	2
 629              		.global	xStreamBufferGenericCreate
 630              		.syntax unified
 631              		.arm
 632              		.fpu neon
 634              	xStreamBufferGenericCreate:
 635              	.LVL70:
 636              	.LFB0:
 223:../src/FreeRTOS/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 637              		.loc 1 223 5 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 223:../src/FreeRTOS/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 641              		.loc 1 223 5 is_stmt 0 view .LVU180
 642 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 643              		.cfi_def_cfa_offset 20
 644              		.cfi_offset 4, -20
 645              		.cfi_offset 5, -16
 646              		.cfi_offset 6, -12
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0004 0CD04DE2 		sub	sp, sp, #12
 650              		.cfi_def_cfa_offset 32
 651 0008 0040A0E1 		mov	r4, r0
 652 000c 0150A0E1 		mov	r5, r1
 224:../src/FreeRTOS/stream_buffer.c ****         uint8_t ucFlags;
 653              		.loc 1 224 9 is_stmt 1 view .LVU181
 225:../src/FreeRTOS/stream_buffer.c **** 
 654              		.loc 1 225 9 view .LVU182
 231:../src/FreeRTOS/stream_buffer.c ****         {
 655              		.loc 1 231 9 view .LVU183
 231:../src/FreeRTOS/stream_buffer.c ****         {
 656              		.loc 1 231 11 is_stmt 0 view .LVU184
 657 0010 010052E3 		cmp	r2, #1
 658 0014 1400000A 		beq	.L50
 240:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 659              		.loc 1 240 13 is_stmt 1 view .LVU185
 660              	.LVL71:
 241:../src/FreeRTOS/stream_buffer.c ****         }
 661              		.loc 1 241 13 view .LVU186
 662 0018 000050E3 		cmp	r0, #0
 663 001c 1B00000A 		beq	.L51
 240:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 664              		.loc 1 240 21 is_stmt 0 view .LVU187
 665 0020 0060A0E3 		mov	r6, #0
 666              	.LVL72:
 667              	.L41:
 241:../src/FreeRTOS/stream_buffer.c ****         }
 668              		.loc 1 241 49 is_stmt 1 discriminator 3 view .LVU188
 244:../src/FreeRTOS/stream_buffer.c **** 
 669              		.loc 1 244 9 discriminator 3 view .LVU189
 670 0024 050054E1 		cmp	r4, r5
 671 0028 1E00003A 		bcc	.L52
 672              	.L42:
 244:../src/FreeRTOS/stream_buffer.c **** 
 673              		.loc 1 244 63 discriminator 3 view .LVU190
 248:../src/FreeRTOS/stream_buffer.c ****         {
 674              		.loc 1 248 9 discriminator 3 view .LVU191
 248:../src/FreeRTOS/stream_buffer.c ****         {
 675              		.loc 1 248 11 is_stmt 0 discriminator 3 view .LVU192
 676 002c 000055E3 		cmp	r5, #0
 250:../src/FreeRTOS/stream_buffer.c ****         }
 677              		.loc 1 250 32 view .LVU193
 678 0030 0150A003 		moveq	r5, #1
 679              	.LVL73:
 680              	.L43:
 261:../src/FreeRTOS/stream_buffer.c ****         {
 681              		.loc 1 261 9 is_stmt 1 view .LVU194
 261:../src/FreeRTOS/stream_buffer.c ****         {
 682              		.loc 1 261 11 is_stmt 0 view .LVU195
 683 0034 260074E3 		cmn	r4, #38
 684 0038 1F00008A 		bhi	.L48
 263:../src/FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 685              		.loc 1 263 13 is_stmt 1 view .LVU196
 263:../src/FreeRTOS/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 686              		.loc 1 263 29 is_stmt 0 view .LVU197
 687 003c 017084E2 		add	r7, r4, #1
 688              	.LVL74:
 264:../src/FreeRTOS/stream_buffer.c ****         }
 689              		.loc 1 264 13 is_stmt 1 view .LVU198
 264:../src/FreeRTOS/stream_buffer.c ****         }
 690              		.loc 1 264 48 is_stmt 0 view .LVU199
 691 0040 250084E2 		add	r0, r4, #37
 692 0044 FEFFFFEB 		bl	pvPortMalloc
 693              	.LVL75:
 272:../src/FreeRTOS/stream_buffer.c ****         {
 694              		.loc 1 272 9 is_stmt 1 view .LVU200
 272:../src/FreeRTOS/stream_buffer.c ****         {
 695              		.loc 1 272 11 is_stmt 0 view .LVU201
 696 0048 004050E2 		subs	r4, r0, #0
 697 004c 1B00000A 		beq	.L39
 274:../src/FreeRTOS/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 698              		.loc 1 274 13 is_stmt 1 view .LVU202
 699 0050 00608DE5 		str	r6, [sp]
 700 0054 0530A0E1 		mov	r3, r5
 701 0058 0720A0E1 		mov	r2, r7
 702 005c 241084E2 		add	r1, r4, #36
 703 0060 0400A0E1 		mov	r0, r4
 274:../src/FreeRTOS/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 704              		.loc 1 274 13 is_stmt 0 view .LVU203
 705 0064 FEFFFFEB 		bl	prvInitialiseNewStreamBuffer
 706              	.LVL76:
 280:../src/FreeRTOS/stream_buffer.c ****         }
 707              		.loc 1 280 103 is_stmt 1 view .LVU204
 708 0068 140000EA 		b	.L39
 709              	.LVL77:
 710              	.L50:
 234:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 711              		.loc 1 234 13 view .LVU205
 235:../src/FreeRTOS/stream_buffer.c ****         }
 712              		.loc 1 235 13 view .LVU206
 713 006c 040050E3 		cmp	r0, #4
 234:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 714              		.loc 1 234 21 is_stmt 0 view .LVU207
 715 0070 0160A083 		movhi	r6, #1
 716 0074 EAFFFF8A 		bhi	.L41
 717              	.L53:
 235:../src/FreeRTOS/stream_buffer.c ****         }
 718              		.loc 1 235 13 is_stmt 1 discriminator 1 view .LVU208
 719 0078 EB10A0E3 		mov	r1, #235
 720              	.LVL78:
 235:../src/FreeRTOS/stream_buffer.c ****         }
 721              		.loc 1 235 13 is_stmt 0 discriminator 1 view .LVU209
 722 007c 000000E3 		movw	r0, #:lower16:.LC0
 723              	.LVL79:
 235:../src/FreeRTOS/stream_buffer.c ****         }
 724              		.loc 1 235 13 discriminator 1 view .LVU210
 725 0080 000040E3 		movt	r0, #:upper16:.LC0
 726 0084 FEFFFFEB 		bl	R_OS_AssertCalled
 727              	.LVL80:
 234:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 728              		.loc 1 234 21 discriminator 1 view .LVU211
 729 0088 0160A0E3 		mov	r6, #1
 730 008c E4FFFFEA 		b	.L41
 731              	.LVL81:
 732              	.L51:
 241:../src/FreeRTOS/stream_buffer.c ****         }
 733              		.loc 1 241 13 is_stmt 1 discriminator 1 view .LVU212
 734 0090 F110A0E3 		mov	r1, #241
 735              	.LVL82:
 241:../src/FreeRTOS/stream_buffer.c ****         }
 736              		.loc 1 241 13 is_stmt 0 discriminator 1 view .LVU213
 737 0094 000000E3 		movw	r0, #:lower16:.LC0
 738              	.LVL83:
 241:../src/FreeRTOS/stream_buffer.c ****         }
 739              		.loc 1 241 13 discriminator 1 view .LVU214
 740 0098 000040E3 		movt	r0, #:upper16:.LC0
 741 009c FEFFFFEB 		bl	R_OS_AssertCalled
 742              	.LVL84:
 240:../src/FreeRTOS/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 743              		.loc 1 240 21 discriminator 1 view .LVU215
 744 00a0 0060A0E3 		mov	r6, #0
 745 00a4 DEFFFFEA 		b	.L41
 746              	.LVL85:
 747              	.L52:
 244:../src/FreeRTOS/stream_buffer.c **** 
 748              		.loc 1 244 9 is_stmt 1 discriminator 1 view .LVU216
 749 00a8 F410A0E3 		mov	r1, #244
 750 00ac 000000E3 		movw	r0, #:lower16:.LC0
 751 00b0 000040E3 		movt	r0, #:upper16:.LC0
 752 00b4 FEFFFFEB 		bl	R_OS_AssertCalled
 753              	.LVL86:
 754 00b8 DBFFFFEA 		b	.L42
 755              	.L48:
 268:../src/FreeRTOS/stream_buffer.c ****         }
 756              		.loc 1 268 32 is_stmt 0 view .LVU217
 757 00bc 0040A0E3 		mov	r4, #0
 758              	.LVL87:
 284:../src/FreeRTOS/stream_buffer.c ****         }
 759              		.loc 1 284 65 is_stmt 1 view .LVU218
 287:../src/FreeRTOS/stream_buffer.c ****     }
 760              		.loc 1 287 9 view .LVU219
 761              	.L39:
 288:../src/FreeRTOS/stream_buffer.c **** 
 762              		.loc 1 288 5 is_stmt 0 view .LVU220
 763 00c0 0400A0E1 		mov	r0, r4
 764 00c4 0CD08DE2 		add	sp, sp, #12
 765              		.cfi_def_cfa_offset 20
 766              		@ sp needed
 767 00c8 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 288:../src/FreeRTOS/stream_buffer.c **** 
 768              		.loc 1 288 5 view .LVU221
 769              		.cfi_endproc
 770              	.LFE0:
 772              		.section	.text.vStreamBufferDelete,"ax",%progbits
 773              		.align	2
 774              		.global	vStreamBufferDelete
 775              		.syntax unified
 776              		.arm
 777              		.fpu neon
 779              	vStreamBufferDelete:
 780              	.LVL88:
 781              	.LFB1:
 372:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 782              		.loc 1 372 1 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 372:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 786              		.loc 1 372 1 is_stmt 0 view .LVU223
 787 0000 10402DE9 		push	{r4, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 4, -8
 790              		.cfi_offset 14, -4
 373:../src/FreeRTOS/stream_buffer.c **** 
 791              		.loc 1 373 5 is_stmt 1 view .LVU224
 792              	.LVL89:
 375:../src/FreeRTOS/stream_buffer.c **** 
 793              		.loc 1 375 5 view .LVU225
 794 0004 004050E2 		subs	r4, r0, #0
 795 0008 0500000A 		beq	.L59
 796              	.LVL90:
 797              	.L55:
 375:../src/FreeRTOS/stream_buffer.c **** 
 798              		.loc 1 375 35 discriminator 3 view .LVU226
 377:../src/FreeRTOS/stream_buffer.c **** 
 799              		.loc 1 377 47 discriminator 3 view .LVU227
 379:../src/FreeRTOS/stream_buffer.c ****     {
 800              		.loc 1 379 5 discriminator 3 view .LVU228
 379:../src/FreeRTOS/stream_buffer.c ****     {
 801              		.loc 1 379 25 is_stmt 0 discriminator 3 view .LVU229
 802 000c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 379:../src/FreeRTOS/stream_buffer.c ****     {
 803              		.loc 1 379 7 discriminator 3 view .LVU230
 804 0010 020013E3 		tst	r3, #2
 805 0014 0700001A 		bne	.L56
 385:../src/FreeRTOS/stream_buffer.c ****             }
 806              		.loc 1 385 17 is_stmt 1 view .LVU231
 807 0018 0400A0E1 		mov	r0, r4
 808 001c FEFFFFEB 		bl	vPortFree
 809              	.LVL91:
 810 0020 1080BDE8 		pop	{r4, pc}
 811              	.LVL92:
 812              	.L59:
 375:../src/FreeRTOS/stream_buffer.c **** 
 813              		.loc 1 375 5 discriminator 1 view .LVU232
 814 0024 771100E3 		movw	r1, #375
 815 0028 000000E3 		movw	r0, #:lower16:.LC0
 816              	.LVL93:
 375:../src/FreeRTOS/stream_buffer.c **** 
 817              		.loc 1 375 5 is_stmt 0 discriminator 1 view .LVU233
 818 002c 000040E3 		movt	r0, #:upper16:.LC0
 819 0030 FEFFFFEB 		bl	R_OS_AssertCalled
 820              	.LVL94:
 821 0034 F4FFFFEA 		b	.L55
 822              	.L56:
 399:../src/FreeRTOS/stream_buffer.c ****     }
 823              		.loc 1 399 9 is_stmt 1 view .LVU234
 399:../src/FreeRTOS/stream_buffer.c ****     }
 824              		.loc 1 399 18 is_stmt 0 view .LVU235
 825 0038 2420A0E3 		mov	r2, #36
 826 003c 0010A0E3 		mov	r1, #0
 827 0040 0400A0E1 		mov	r0, r4
 828 0044 FEFFFFEB 		bl	memset
 829              	.LVL95:
 401:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 830              		.loc 1 401 1 view .LVU236
 831 0048 1080BDE8 		pop	{r4, pc}
 832              		.cfi_endproc
 833              	.LFE1:
 835              		.section	.text.xStreamBufferReset,"ax",%progbits
 836              		.align	2
 837              		.global	xStreamBufferReset
 838              		.syntax unified
 839              		.arm
 840              		.fpu neon
 842              	xStreamBufferReset:
 843              	.LVL96:
 844              	.LFB2:
 405:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 845              		.loc 1 405 1 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 405:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 849              		.loc 1 405 1 is_stmt 0 view .LVU238
 850 0000 30402DE9 		push	{r4, r5, lr}
 851              		.cfi_def_cfa_offset 12
 852              		.cfi_offset 4, -12
 853              		.cfi_offset 5, -8
 854              		.cfi_offset 14, -4
 855 0004 0CD04DE2 		sub	sp, sp, #12
 856              		.cfi_def_cfa_offset 24
 406:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn = pdFAIL;
 857              		.loc 1 406 5 is_stmt 1 view .LVU239
 858              	.LVL97:
 407:../src/FreeRTOS/stream_buffer.c **** 
 859              		.loc 1 407 5 view .LVU240
 410:../src/FreeRTOS/stream_buffer.c ****     #endif
 860              		.loc 1 410 9 view .LVU241
 413:../src/FreeRTOS/stream_buffer.c **** 
 861              		.loc 1 413 5 view .LVU242
 862 0008 004050E2 		subs	r4, r0, #0
 863 000c 0900000A 		beq	.L66
 864              	.LVL98:
 865              	.L61:
 413:../src/FreeRTOS/stream_buffer.c **** 
 866              		.loc 1 413 35 discriminator 3 view .LVU243
 419:../src/FreeRTOS/stream_buffer.c ****         }
 867              		.loc 1 419 13 discriminator 3 view .LVU244
 419:../src/FreeRTOS/stream_buffer.c ****         }
 868              		.loc 1 419 34 is_stmt 0 discriminator 3 view .LVU245
 869 0010 205094E5 		ldr	r5, [r4, #32]
 870              	.LVL99:
 424:../src/FreeRTOS/stream_buffer.c ****     {
 871              		.loc 1 424 5 is_stmt 1 discriminator 3 view .LVU246
 872 0014 FEFFFFEB 		bl	vPortEnterCritical
 873              	.LVL100:
 424:../src/FreeRTOS/stream_buffer.c ****     {
 874              		.loc 1 424 25 discriminator 3 view .LVU247
 426:../src/FreeRTOS/stream_buffer.c ****         {
 875              		.loc 1 426 9 discriminator 3 view .LVU248
 426:../src/FreeRTOS/stream_buffer.c ****         {
 876              		.loc 1 426 27 is_stmt 0 discriminator 3 view .LVU249
 877 0018 103094E5 		ldr	r3, [r4, #16]
 426:../src/FreeRTOS/stream_buffer.c ****         {
 878              		.loc 1 426 11 discriminator 3 view .LVU250
 879 001c 000053E3 		cmp	r3, #0
 880 0020 0900000A 		beq	.L67
 407:../src/FreeRTOS/stream_buffer.c **** 
 881              		.loc 1 407 16 view .LVU251
 882 0024 0040A0E3 		mov	r4, #0
 883              	.LVL101:
 884              	.L62:
 443:../src/FreeRTOS/stream_buffer.c ****             }
 885              		.loc 1 443 58 is_stmt 1 view .LVU252
 447:../src/FreeRTOS/stream_buffer.c **** 
 886              		.loc 1 447 5 view .LVU253
 887 0028 FEFFFFEB 		bl	vPortExitCritical
 888              	.LVL102:
 447:../src/FreeRTOS/stream_buffer.c **** 
 889              		.loc 1 447 24 view .LVU254
 449:../src/FreeRTOS/stream_buffer.c **** }
 890              		.loc 1 449 5 view .LVU255
 450:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 891              		.loc 1 450 1 is_stmt 0 view .LVU256
 892 002c 0400A0E1 		mov	r0, r4
 893 0030 0CD08DE2 		add	sp, sp, #12
 894              		.cfi_remember_state
 895              		.cfi_def_cfa_offset 12
 896              		@ sp needed
 897 0034 3080BDE8 		pop	{r4, r5, pc}
 898              	.LVL103:
 899              	.L66:
 900              		.cfi_restore_state
 413:../src/FreeRTOS/stream_buffer.c **** 
 901              		.loc 1 413 5 is_stmt 1 discriminator 1 view .LVU257
 902 0038 9D1100E3 		movw	r1, #413
 903 003c 000000E3 		movw	r0, #:lower16:.LC0
 904              	.LVL104:
 413:../src/FreeRTOS/stream_buffer.c **** 
 905              		.loc 1 413 5 is_stmt 0 discriminator 1 view .LVU258
 906 0040 000040E3 		movt	r0, #:upper16:.LC0
 907 0044 FEFFFFEB 		bl	R_OS_AssertCalled
 908              	.LVL105:
 909 0048 F0FFFFEA 		b	.L61
 910              	.LVL106:
 911              	.L67:
 428:../src/FreeRTOS/stream_buffer.c ****             {
 912              		.loc 1 428 13 is_stmt 1 view .LVU259
 428:../src/FreeRTOS/stream_buffer.c ****             {
 913              		.loc 1 428 31 is_stmt 0 view .LVU260
 914 004c 143094E5 		ldr	r3, [r4, #20]
 428:../src/FreeRTOS/stream_buffer.c ****             {
 915              		.loc 1 428 15 view .LVU261
 916 0050 000053E3 		cmp	r3, #0
 407:../src/FreeRTOS/stream_buffer.c **** 
 917              		.loc 1 407 16 view .LVU262
 918 0054 0040A013 		movne	r4, #0
 919              	.LVL107:
 407:../src/FreeRTOS/stream_buffer.c **** 
 920              		.loc 1 407 16 view .LVU263
 921 0058 F2FFFF1A 		bne	.L62
 922              	.LVL108:
 923              	.L68:
 430:../src/FreeRTOS/stream_buffer.c ****                                               pxStreamBuffer->pucBuffer,
 924              		.loc 1 430 17 is_stmt 1 view .LVU264
 925 005c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 926 0060 00308DE5 		str	r3, [sp]
 927 0064 0C3094E5 		ldr	r3, [r4, #12]
 928 0068 082094E5 		ldr	r2, [r4, #8]
 929 006c 181094E5 		ldr	r1, [r4, #24]
 930 0070 0400A0E1 		mov	r0, r4
 931 0074 FEFFFFEB 		bl	prvInitialiseNewStreamBuffer
 932              	.LVL109:
 435:../src/FreeRTOS/stream_buffer.c **** 
 933              		.loc 1 435 17 view .LVU265
 439:../src/FreeRTOS/stream_buffer.c ****                     }
 934              		.loc 1 439 25 view .LVU266
 439:../src/FreeRTOS/stream_buffer.c ****                     }
 935              		.loc 1 439 62 is_stmt 0 view .LVU267
 936 0078 205084E5 		str	r5, [r4, #32]
 435:../src/FreeRTOS/stream_buffer.c **** 
 937              		.loc 1 435 25 view .LVU268
 938 007c 0140A0E3 		mov	r4, #1
 939              	.LVL110:
 435:../src/FreeRTOS/stream_buffer.c **** 
 940              		.loc 1 435 25 view .LVU269
 941 0080 E8FFFFEA 		b	.L62
 942              		.cfi_endproc
 943              	.LFE2:
 945              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 946              		.align	2
 947              		.global	xStreamBufferSetTriggerLevel
 948              		.syntax unified
 949              		.arm
 950              		.fpu neon
 952              	xStreamBufferSetTriggerLevel:
 953              	.LVL111:
 954              	.LFB3:
 455:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 955              		.loc 1 455 1 is_stmt 1 view -0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 455:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 959              		.loc 1 455 1 is_stmt 0 view .LVU271
 960 0000 70402DE9 		push	{r4, r5, r6, lr}
 961              		.cfi_def_cfa_offset 16
 962              		.cfi_offset 4, -16
 963              		.cfi_offset 5, -12
 964              		.cfi_offset 6, -8
 965              		.cfi_offset 14, -4
 966 0004 0140A0E1 		mov	r4, r1
 456:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 967              		.loc 1 456 5 is_stmt 1 view .LVU272
 968              	.LVL112:
 457:../src/FreeRTOS/stream_buffer.c **** 
 969              		.loc 1 457 5 view .LVU273
 459:../src/FreeRTOS/stream_buffer.c **** 
 970              		.loc 1 459 5 view .LVU274
 971 0008 005050E2 		subs	r5, r0, #0
 972 000c 0700000A 		beq	.L76
 973              	.LVL113:
 974              	.L70:
 459:../src/FreeRTOS/stream_buffer.c **** 
 975              		.loc 1 459 35 discriminator 3 view .LVU275
 462:../src/FreeRTOS/stream_buffer.c ****     {
 976              		.loc 1 462 5 discriminator 3 view .LVU276
 462:../src/FreeRTOS/stream_buffer.c ****     {
 977              		.loc 1 462 7 is_stmt 0 discriminator 3 view .LVU277
 978 0010 000054E3 		cmp	r4, #0
 464:../src/FreeRTOS/stream_buffer.c ****     }
 979              		.loc 1 464 23 view .LVU278
 980 0014 0140A003 		moveq	r4, #1
 981              	.LVL114:
 982              	.L71:
 469:../src/FreeRTOS/stream_buffer.c ****     {
 983              		.loc 1 469 5 is_stmt 1 view .LVU279
 469:../src/FreeRTOS/stream_buffer.c ****     {
 984              		.loc 1 469 40 is_stmt 0 view .LVU280
 985 0018 083095E5 		ldr	r3, [r5, #8]
 469:../src/FreeRTOS/stream_buffer.c ****     {
 986              		.loc 1 469 7 view .LVU281
 987 001c 040053E1 		cmp	r3, r4
 988 0020 0700003A 		bcc	.L74
 471:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdPASS;
 989              		.loc 1 471 9 is_stmt 1 view .LVU282
 471:../src/FreeRTOS/stream_buffer.c ****         xReturn = pdPASS;
 990              		.loc 1 471 44 is_stmt 0 view .LVU283
 991 0024 0C4085E5 		str	r4, [r5, #12]
 472:../src/FreeRTOS/stream_buffer.c ****     }
 992              		.loc 1 472 9 is_stmt 1 view .LVU284
 993              	.LVL115:
 472:../src/FreeRTOS/stream_buffer.c ****     }
 994              		.loc 1 472 17 is_stmt 0 view .LVU285
 995 0028 0100A0E3 		mov	r0, #1
 996 002c 7080BDE8 		pop	{r4, r5, r6, pc}
 997              	.LVL116:
 998              	.L76:
 459:../src/FreeRTOS/stream_buffer.c **** 
 999              		.loc 1 459 5 is_stmt 1 discriminator 1 view .LVU286
 1000 0030 CB1100E3 		movw	r1, #459
 1001              	.LVL117:
 459:../src/FreeRTOS/stream_buffer.c **** 
 1002              		.loc 1 459 5 is_stmt 0 discriminator 1 view .LVU287
 1003 0034 000000E3 		movw	r0, #:lower16:.LC0
 1004              	.LVL118:
 459:../src/FreeRTOS/stream_buffer.c **** 
 1005              		.loc 1 459 5 discriminator 1 view .LVU288
 1006 0038 000040E3 		movt	r0, #:upper16:.LC0
 1007 003c FEFFFFEB 		bl	R_OS_AssertCalled
 1008              	.LVL119:
 1009 0040 F2FFFFEA 		b	.L70
 1010              	.L74:
 476:../src/FreeRTOS/stream_buffer.c ****     }
 1011              		.loc 1 476 17 view .LVU289
 1012 0044 0000A0E3 		mov	r0, #0
 1013              	.LVL120:
 479:../src/FreeRTOS/stream_buffer.c **** }
 1014              		.loc 1 479 5 is_stmt 1 view .LVU290
 480:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1015              		.loc 1 480 1 is_stmt 0 view .LVU291
 1016 0048 7080BDE8 		pop	{r4, r5, r6, pc}
 1017              		.cfi_endproc
 1018              	.LFE3:
 1020              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 1021              		.align	2
 1022              		.global	xStreamBufferSpacesAvailable
 1023              		.syntax unified
 1024              		.arm
 1025              		.fpu neon
 1027              	xStreamBufferSpacesAvailable:
 1028              	.LVL121:
 1029              	.LFB4:
 484:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1030              		.loc 1 484 1 is_stmt 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 484:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1034              		.loc 1 484 1 is_stmt 0 view .LVU293
 1035 0000 10402DE9 		push	{r4, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 4, -8
 1038              		.cfi_offset 14, -4
 485:../src/FreeRTOS/stream_buffer.c ****     size_t xSpace;
 1039              		.loc 1 485 5 is_stmt 1 view .LVU294
 1040              	.LVL122:
 486:../src/FreeRTOS/stream_buffer.c **** 
 1041              		.loc 1 486 5 view .LVU295
 488:../src/FreeRTOS/stream_buffer.c **** 
 1042              		.loc 1 488 5 view .LVU296
 1043 0004 004050E2 		subs	r4, r0, #0
 1044 0008 0900000A 		beq	.L81
 1045              	.LVL123:
 1046              	.L78:
 488:../src/FreeRTOS/stream_buffer.c **** 
 1047              		.loc 1 488 35 discriminator 3 view .LVU297
 490:../src/FreeRTOS/stream_buffer.c ****     xSpace -= pxStreamBuffer->xHead;
 1048              		.loc 1 490 5 discriminator 3 view .LVU298
 490:../src/FreeRTOS/stream_buffer.c ****     xSpace -= pxStreamBuffer->xHead;
 1049              		.loc 1 490 28 is_stmt 0 discriminator 3 view .LVU299
 1050 000c 083094E5 		ldr	r3, [r4, #8]
 490:../src/FreeRTOS/stream_buffer.c ****     xSpace -= pxStreamBuffer->xHead;
 1051              		.loc 1 490 54 discriminator 3 view .LVU300
 1052 0010 000094E5 		ldr	r0, [r4]
 490:../src/FreeRTOS/stream_buffer.c ****     xSpace -= pxStreamBuffer->xHead;
 1053              		.loc 1 490 12 discriminator 3 view .LVU301
 1054 0014 000083E0 		add	r0, r3, r0
 1055              	.LVL124:
 491:../src/FreeRTOS/stream_buffer.c ****     xSpace -= ( size_t ) 1;
 1056              		.loc 1 491 5 is_stmt 1 discriminator 3 view .LVU302
 491:../src/FreeRTOS/stream_buffer.c ****     xSpace -= ( size_t ) 1;
 1057              		.loc 1 491 29 is_stmt 0 discriminator 3 view .LVU303
 1058 0018 042094E5 		ldr	r2, [r4, #4]
 491:../src/FreeRTOS/stream_buffer.c ****     xSpace -= ( size_t ) 1;
 1059              		.loc 1 491 12 discriminator 3 view .LVU304
 1060 001c 020040E0 		sub	r0, r0, r2
 1061              	.LVL125:
 492:../src/FreeRTOS/stream_buffer.c **** 
 1062              		.loc 1 492 5 is_stmt 1 discriminator 3 view .LVU305
 492:../src/FreeRTOS/stream_buffer.c **** 
 1063              		.loc 1 492 12 is_stmt 0 discriminator 3 view .LVU306
 1064 0020 010040E2 		sub	r0, r0, #1
 1065              	.LVL126:
 494:../src/FreeRTOS/stream_buffer.c ****     {
 1066              		.loc 1 494 5 is_stmt 1 discriminator 3 view .LVU307
 494:../src/FreeRTOS/stream_buffer.c ****     {
 1067              		.loc 1 494 7 is_stmt 0 discriminator 3 view .LVU308
 1068 0024 000053E1 		cmp	r3, r0
 1069 0028 1080BD88 		pophi	{r4, pc}
 496:../src/FreeRTOS/stream_buffer.c ****     }
 1070              		.loc 1 496 9 is_stmt 1 view .LVU309
 496:../src/FreeRTOS/stream_buffer.c ****     }
 1071              		.loc 1 496 16 is_stmt 0 view .LVU310
 1072 002c 030040E0 		sub	r0, r0, r3
 1073              	.LVL127:
 500:../src/FreeRTOS/stream_buffer.c ****     }
 1074              		.loc 1 500 33 is_stmt 1 view .LVU311
 503:../src/FreeRTOS/stream_buffer.c **** }
 1075              		.loc 1 503 5 view .LVU312
 504:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1076              		.loc 1 504 1 is_stmt 0 view .LVU313
 1077 0030 1080BDE8 		pop	{r4, pc}
 1078              	.LVL128:
 1079              	.L81:
 488:../src/FreeRTOS/stream_buffer.c **** 
 1080              		.loc 1 488 5 is_stmt 1 discriminator 1 view .LVU314
 1081 0034 7A1FA0E3 		mov	r1, #488
 1082 0038 000000E3 		movw	r0, #:lower16:.LC0
 1083              	.LVL129:
 488:../src/FreeRTOS/stream_buffer.c **** 
 1084              		.loc 1 488 5 is_stmt 0 discriminator 1 view .LVU315
 1085 003c 000040E3 		movt	r0, #:upper16:.LC0
 1086 0040 FEFFFFEB 		bl	R_OS_AssertCalled
 1087              	.LVL130:
 1088 0044 F0FFFFEA 		b	.L78
 1089              		.cfi_endproc
 1090              	.LFE4:
 1092              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 1093              		.align	2
 1094              		.global	xStreamBufferBytesAvailable
 1095              		.syntax unified
 1096              		.arm
 1097              		.fpu neon
 1099              	xStreamBufferBytesAvailable:
 1100              	.LVL131:
 1101              	.LFB5:
 508:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1102              		.loc 1 508 1 is_stmt 1 view -0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 508:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1106              		.loc 1 508 1 is_stmt 0 view .LVU317
 1107 0000 10402DE9 		push	{r4, lr}
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 4, -8
 1110              		.cfi_offset 14, -4
 509:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn;
 1111              		.loc 1 509 5 is_stmt 1 view .LVU318
 1112              	.LVL132:
 510:../src/FreeRTOS/stream_buffer.c **** 
 1113              		.loc 1 510 5 view .LVU319
 512:../src/FreeRTOS/stream_buffer.c **** 
 1114              		.loc 1 512 5 view .LVU320
 1115 0004 004050E2 		subs	r4, r0, #0
 1116 0008 0200000A 		beq	.L85
 1117              	.LVL133:
 1118              	.L83:
 512:../src/FreeRTOS/stream_buffer.c **** 
 1119              		.loc 1 512 35 discriminator 3 view .LVU321
 514:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 1120              		.loc 1 514 5 discriminator 3 view .LVU322
 514:../src/FreeRTOS/stream_buffer.c ****     return xReturn;
 1121              		.loc 1 514 15 is_stmt 0 discriminator 3 view .LVU323
 1122 000c 0400A0E1 		mov	r0, r4
 1123 0010 FEFFFFEB 		bl	prvBytesInBuffer
 1124              	.LVL134:
 515:../src/FreeRTOS/stream_buffer.c **** }
 1125              		.loc 1 515 5 is_stmt 1 discriminator 3 view .LVU324
 516:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1126              		.loc 1 516 1 is_stmt 0 discriminator 3 view .LVU325
 1127 0014 1080BDE8 		pop	{r4, pc}
 1128              	.LVL135:
 1129              	.L85:
 512:../src/FreeRTOS/stream_buffer.c **** 
 1130              		.loc 1 512 5 is_stmt 1 discriminator 1 view .LVU326
 1131 0018 021CA0E3 		mov	r1, #512
 1132 001c 000000E3 		movw	r0, #:lower16:.LC0
 1133              	.LVL136:
 512:../src/FreeRTOS/stream_buffer.c **** 
 1134              		.loc 1 512 5 is_stmt 0 discriminator 1 view .LVU327
 1135 0020 000040E3 		movt	r0, #:upper16:.LC0
 1136 0024 FEFFFFEB 		bl	R_OS_AssertCalled
 1137              	.LVL137:
 1138 0028 F7FFFFEA 		b	.L83
 1139              		.cfi_endproc
 1140              	.LFE5:
 1142              		.section	.text.xStreamBufferSend,"ax",%progbits
 1143              		.align	2
 1144              		.global	xStreamBufferSend
 1145              		.syntax unified
 1146              		.arm
 1147              		.fpu neon
 1149              	xStreamBufferSend:
 1150              	.LVL138:
 1151              	.LFB6:
 523:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1152              		.loc 1 523 1 is_stmt 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 16
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 523:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1156              		.loc 1 523 1 is_stmt 0 view .LVU329
 1157 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1158              		.cfi_def_cfa_offset 24
 1159              		.cfi_offset 4, -24
 1160              		.cfi_offset 5, -20
 1161              		.cfi_offset 6, -16
 1162              		.cfi_offset 7, -12
 1163              		.cfi_offset 8, -8
 1164              		.cfi_offset 14, -4
 1165 0004 18D04DE2 		sub	sp, sp, #24
 1166              		.cfi_def_cfa_offset 48
 1167 0008 0040A0E1 		mov	r4, r0
 1168 000c 0270A0E1 		mov	r7, r2
 1169 0010 0C308DE5 		str	r3, [sp, #12]
 524:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace = 0;
 1170              		.loc 1 524 5 is_stmt 1 view .LVU330
 1171              	.LVL139:
 525:../src/FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 1172              		.loc 1 525 5 view .LVU331
 526:../src/FreeRTOS/stream_buffer.c ****     TimeOut_t xTimeOut;
 1173              		.loc 1 526 5 view .LVU332
 527:../src/FreeRTOS/stream_buffer.c **** 
 1174              		.loc 1 527 5 view .LVU333
 531:../src/FreeRTOS/stream_buffer.c **** 
 1175              		.loc 1 531 5 view .LVU334
 531:../src/FreeRTOS/stream_buffer.c **** 
 1176              		.loc 1 531 52 is_stmt 0 view .LVU335
 1177 0014 085090E5 		ldr	r5, [r0, #8]
 531:../src/FreeRTOS/stream_buffer.c **** 
 1178              		.loc 1 531 18 view .LVU336
 1179 0018 015045E2 		sub	r5, r5, #1
 1180              	.LVL140:
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1181              		.loc 1 533 5 is_stmt 1 view .LVU337
 1182 001c 008051E2 		subs	r8, r1, #0
 1183 0020 1000000A 		beq	.L102
 1184              	.LVL141:
 1185              	.L87:
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1186              		.loc 1 533 29 discriminator 3 view .LVU338
 534:../src/FreeRTOS/stream_buffer.c **** 
 1187              		.loc 1 534 5 discriminator 3 view .LVU339
 1188 0024 000054E3 		cmp	r4, #0
 1189 0028 1300000A 		beq	.L103
 1190              	.L88:
 534:../src/FreeRTOS/stream_buffer.c **** 
 1191              		.loc 1 534 35 discriminator 3 view .LVU340
 540:../src/FreeRTOS/stream_buffer.c ****     {
 1192              		.loc 1 540 5 discriminator 3 view .LVU341
 540:../src/FreeRTOS/stream_buffer.c ****     {
 1193              		.loc 1 540 25 is_stmt 0 discriminator 3 view .LVU342
 1194 002c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 540:../src/FreeRTOS/stream_buffer.c ****     {
 1195              		.loc 1 540 7 discriminator 3 view .LVU343
 1196 0030 010013E3 		tst	r3, #1
 1197 0034 1A00000A 		beq	.L89
 542:../src/FreeRTOS/stream_buffer.c **** 
 1198              		.loc 1 542 9 is_stmt 1 view .LVU344
 542:../src/FreeRTOS/stream_buffer.c **** 
 1199              		.loc 1 542 24 is_stmt 0 view .LVU345
 1200 0038 046087E2 		add	r6, r7, #4
 1201              	.LVL142:
 545:../src/FreeRTOS/stream_buffer.c **** 
 1202              		.loc 1 545 9 is_stmt 1 view .LVU346
 1203 003c 060057E1 		cmp	r7, r6
 1204 0040 1200002A 		bcs	.L104
 1205              	.L90:
 545:../src/FreeRTOS/stream_buffer.c **** 
 1206              		.loc 1 545 58 discriminator 3 view .LVU347
 549:../src/FreeRTOS/stream_buffer.c ****         {
 1207              		.loc 1 549 9 discriminator 3 view .LVU348
 549:../src/FreeRTOS/stream_buffer.c ****         {
 1208              		.loc 1 549 11 is_stmt 0 discriminator 3 view .LVU349
 1209 0044 060055E1 		cmp	r5, r6
 553:../src/FreeRTOS/stream_buffer.c ****         }
 1210              		.loc 1 553 13 is_stmt 1 view .LVU350
 553:../src/FreeRTOS/stream_buffer.c ****         }
 1211              		.loc 1 553 26 is_stmt 0 view .LVU351
 1212 0048 0030A033 		movcc	r3, #0
 1213 004c 0C308D35 		strcc	r3, [sp, #12]
 1214              	.LVL143:
 1215              	.L91:
 571:../src/FreeRTOS/stream_buffer.c ****         }
 1216              		.loc 1 571 37 is_stmt 1 view .LVU352
 575:../src/FreeRTOS/stream_buffer.c ****     {
 1217              		.loc 1 575 5 view .LVU353
 575:../src/FreeRTOS/stream_buffer.c ****     {
 1218              		.loc 1 575 22 is_stmt 0 view .LVU354
 1219 0050 0C309DE5 		ldr	r3, [sp, #12]
 575:../src/FreeRTOS/stream_buffer.c ****     {
 1220              		.loc 1 575 7 view .LVU355
 1221 0054 000053E3 		cmp	r3, #0
 1222 0058 3B00000A 		beq	.L92
 577:../src/FreeRTOS/stream_buffer.c **** 
 1223              		.loc 1 577 9 is_stmt 1 view .LVU356
 1224 005c 10008DE2 		add	r0, sp, #16
 1225 0060 FEFFFFEB 		bl	vTaskSetTimeOutState
 1226              	.LVL144:
 1227 0064 280000EA 		b	.L95
 1228              	.LVL145:
 1229              	.L102:
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1230              		.loc 1 533 5 discriminator 1 view .LVU357
 1231 0068 151200E3 		movw	r1, #533
 1232              	.LVL146:
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1233              		.loc 1 533 5 is_stmt 0 discriminator 1 view .LVU358
 1234 006c 000000E3 		movw	r0, #:lower16:.LC0
 1235              	.LVL147:
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1236              		.loc 1 533 5 discriminator 1 view .LVU359
 1237 0070 000040E3 		movt	r0, #:upper16:.LC0
 1238 0074 FEFFFFEB 		bl	R_OS_AssertCalled
 1239              	.LVL148:
 533:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1240              		.loc 1 533 5 discriminator 1 view .LVU360
 1241 0078 E9FFFFEA 		b	.L87
 1242              	.L103:
 534:../src/FreeRTOS/stream_buffer.c **** 
 1243              		.loc 1 534 5 is_stmt 1 discriminator 1 view .LVU361
 1244 007c 161200E3 		movw	r1, #534
 1245 0080 000000E3 		movw	r0, #:lower16:.LC0
 1246 0084 000040E3 		movt	r0, #:upper16:.LC0
 1247 0088 FEFFFFEB 		bl	R_OS_AssertCalled
 1248              	.LVL149:
 1249 008c E6FFFFEA 		b	.L88
 1250              	.LVL150:
 1251              	.L104:
 545:../src/FreeRTOS/stream_buffer.c **** 
 1252              		.loc 1 545 9 discriminator 1 view .LVU362
 1253 0090 211200E3 		movw	r1, #545
 1254 0094 000000E3 		movw	r0, #:lower16:.LC0
 1255 0098 000040E3 		movt	r0, #:upper16:.LC0
 1256 009c FEFFFFEB 		bl	R_OS_AssertCalled
 1257              	.LVL151:
 1258 00a0 E7FFFFEA 		b	.L90
 1259              	.LVL152:
 1260              	.L89:
 565:../src/FreeRTOS/stream_buffer.c ****         {
 1261              		.loc 1 565 9 view .LVU363
 565:../src/FreeRTOS/stream_buffer.c ****         {
 1262              		.loc 1 565 11 is_stmt 0 view .LVU364
 1263 00a4 050057E1 		cmp	r7, r5
 526:../src/FreeRTOS/stream_buffer.c ****     TimeOut_t xTimeOut;
 1264              		.loc 1 526 12 view .LVU365
 1265 00a8 0760A091 		movls	r6, r7
 1266 00ac E7FFFF9A 		bls	.L91
 1267              	.L100:
 567:../src/FreeRTOS/stream_buffer.c ****         }
 1268              		.loc 1 567 28 view .LVU366
 1269 00b0 0560A0E1 		mov	r6, r5
 1270 00b4 E5FFFFEA 		b	.L91
 1271              	.LVL153:
 1272              	.L105:
 593:../src/FreeRTOS/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1273              		.loc 1 593 21 is_stmt 1 discriminator 1 view .LVU367
 1274 00b8 511200E3 		movw	r1, #593
 1275 00bc 000000E3 		movw	r0, #:lower16:.LC0
 1276 00c0 000040E3 		movt	r0, #:upper16:.LC0
 1277 00c4 FEFFFFEB 		bl	R_OS_AssertCalled
 1278              	.LVL154:
 1279              	.L94:
 593:../src/FreeRTOS/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1280              		.loc 1 593 79 discriminator 3 view .LVU368
 594:../src/FreeRTOS/stream_buffer.c ****                 }
 1281              		.loc 1 594 21 discriminator 3 view .LVU369
 594:../src/FreeRTOS/stream_buffer.c ****                 }
 1282              		.loc 1 594 58 is_stmt 0 discriminator 3 view .LVU370
 1283 00c8 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 1284              	.LVL155:
 594:../src/FreeRTOS/stream_buffer.c ****                 }
 1285              		.loc 1 594 56 discriminator 3 view .LVU371
 1286 00cc 140084E5 		str	r0, [r4, #20]
 602:../src/FreeRTOS/stream_buffer.c **** 
 1287              		.loc 1 602 13 is_stmt 1 discriminator 3 view .LVU372
 1288 00d0 FEFFFFEB 		bl	vPortExitCritical
 1289              	.LVL156:
 602:../src/FreeRTOS/stream_buffer.c **** 
 1290              		.loc 1 602 32 discriminator 3 view .LVU373
 604:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1291              		.loc 1 604 65 discriminator 3 view .LVU374
 605:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 1292              		.loc 1 605 13 discriminator 3 view .LVU375
 1293 00d4 0C309DE5 		ldr	r3, [sp, #12]
 605:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 1294              		.loc 1 605 22 is_stmt 0 discriminator 3 view .LVU376
 1295 00d8 00308DE5 		str	r3, [sp]
 1296 00dc 0030A0E3 		mov	r3, #0
 1297 00e0 0320A0E1 		mov	r2, r3
 1298 00e4 0310A0E1 		mov	r1, r3
 1299 00e8 0300A0E1 		mov	r0, r3
 1300 00ec FEFFFFEB 		bl	xTaskGenericNotifyWait
 1301              	.LVL157:
 606:../src/FreeRTOS/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1302              		.loc 1 606 13 is_stmt 1 discriminator 3 view .LVU377
 606:../src/FreeRTOS/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1303              		.loc 1 606 48 is_stmt 0 discriminator 3 view .LVU378
 1304 00f0 0030A0E3 		mov	r3, #0
 1305 00f4 143084E5 		str	r3, [r4, #20]
 607:../src/FreeRTOS/stream_buffer.c ****     }
 1306              		.loc 1 607 16 is_stmt 1 discriminator 3 view .LVU379
 607:../src/FreeRTOS/stream_buffer.c ****     }
 1307              		.loc 1 607 18 is_stmt 0 discriminator 3 view .LVU380
 1308 00f8 0C108DE2 		add	r1, sp, #12
 1309 00fc 10008DE2 		add	r0, sp, #16
 1310 0100 FEFFFFEB 		bl	xTaskCheckForTimeOut
 1311              	.LVL158:
 607:../src/FreeRTOS/stream_buffer.c ****     }
 1312              		.loc 1 607 9 discriminator 3 view .LVU381
 1313 0104 000050E3 		cmp	r0, #0
 1314 0108 0D00001A 		bne	.L96
 1315              	.LVL159:
 1316              	.L95:
 579:../src/FreeRTOS/stream_buffer.c ****         {
 1317              		.loc 1 579 9 is_stmt 1 view .LVU382
 583:../src/FreeRTOS/stream_buffer.c ****             {
 1318              		.loc 1 583 13 view .LVU383
 1319 010c FEFFFFEB 		bl	vPortEnterCritical
 1320              	.LVL160:
 583:../src/FreeRTOS/stream_buffer.c ****             {
 1321              		.loc 1 583 33 view .LVU384
 585:../src/FreeRTOS/stream_buffer.c **** 
 1322              		.loc 1 585 17 view .LVU385
 585:../src/FreeRTOS/stream_buffer.c **** 
 1323              		.loc 1 585 26 is_stmt 0 view .LVU386
 1324 0110 0400A0E1 		mov	r0, r4
 1325 0114 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 1326              	.LVL161:
 1327 0118 0050A0E1 		mov	r5, r0
 1328              	.LVL162:
 587:../src/FreeRTOS/stream_buffer.c ****                 {
 1329              		.loc 1 587 17 is_stmt 1 view .LVU387
 587:../src/FreeRTOS/stream_buffer.c ****                 {
 1330              		.loc 1 587 19 is_stmt 0 view .LVU388
 1331 011c 000056E1 		cmp	r6, r0
 1332 0120 0600009A 		bls	.L93
 590:../src/FreeRTOS/stream_buffer.c **** 
 1333              		.loc 1 590 21 is_stmt 1 view .LVU389
 590:../src/FreeRTOS/stream_buffer.c **** 
 1334              		.loc 1 590 30 is_stmt 0 view .LVU390
 1335 0124 0010A0E3 		mov	r1, #0
 1336 0128 0100A0E1 		mov	r0, r1
 1337              	.LVL163:
 590:../src/FreeRTOS/stream_buffer.c **** 
 1338              		.loc 1 590 30 view .LVU391
 1339 012c FEFFFFEB 		bl	xTaskGenericNotifyStateClear
 1340              	.LVL164:
 593:../src/FreeRTOS/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1341              		.loc 1 593 21 is_stmt 1 view .LVU392
 1342 0130 143094E5 		ldr	r3, [r4, #20]
 1343 0134 000053E3 		cmp	r3, #0
 1344 0138 DEFFFF1A 		bne	.L105
 1345 013c E1FFFFEA 		b	.L94
 1346              	.LVL165:
 1347              	.L93:
 598:../src/FreeRTOS/stream_buffer.c ****                     break;
 1348              		.loc 1 598 21 view .LVU393
 1349 0140 FEFFFFEB 		bl	vPortExitCritical
 1350              	.LVL166:
 598:../src/FreeRTOS/stream_buffer.c ****                     break;
 1351              		.loc 1 598 40 view .LVU394
 599:../src/FreeRTOS/stream_buffer.c ****                 }
 1352              		.loc 1 599 21 view .LVU395
 1353              	.L96:
 611:../src/FreeRTOS/stream_buffer.c ****     }
 1354              		.loc 1 611 33 view .LVU396
 614:../src/FreeRTOS/stream_buffer.c ****     {
 1355              		.loc 1 614 5 view .LVU397
 614:../src/FreeRTOS/stream_buffer.c ****     {
 1356              		.loc 1 614 7 is_stmt 0 view .LVU398
 1357 0144 000055E3 		cmp	r5, #0
 1358 0148 0200001A 		bne	.L97
 1359              	.LVL167:
 1360              	.L92:
 616:../src/FreeRTOS/stream_buffer.c ****     }
 1361              		.loc 1 616 9 is_stmt 1 view .LVU399
 616:../src/FreeRTOS/stream_buffer.c ****     }
 1362              		.loc 1 616 18 is_stmt 0 view .LVU400
 1363 014c 0400A0E1 		mov	r0, r4
 1364 0150 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 1365              	.LVL168:
 1366 0154 0050A0E1 		mov	r5, r0
 1367              	.LVL169:
 1368              	.L97:
 620:../src/FreeRTOS/stream_buffer.c ****     }
 1369              		.loc 1 620 33 is_stmt 1 view .LVU401
 623:../src/FreeRTOS/stream_buffer.c **** 
 1370              		.loc 1 623 5 view .LVU402
 623:../src/FreeRTOS/stream_buffer.c **** 
 1371              		.loc 1 623 15 is_stmt 0 view .LVU403
 1372 0158 00608DE5 		str	r6, [sp]
 1373 015c 0530A0E1 		mov	r3, r5
 1374 0160 0720A0E1 		mov	r2, r7
 1375 0164 0810A0E1 		mov	r1, r8
 1376 0168 0400A0E1 		mov	r0, r4
 1377 016c FEFFFFEB 		bl	prvWriteMessageToBuffer
 1378              	.LVL170:
 625:../src/FreeRTOS/stream_buffer.c ****     {
 1379              		.loc 1 625 5 is_stmt 1 view .LVU404
 625:../src/FreeRTOS/stream_buffer.c ****     {
 1380              		.loc 1 625 7 is_stmt 0 view .LVU405
 1381 0170 005050E2 		subs	r5, r0, #0
 1382              	.LVL171:
 625:../src/FreeRTOS/stream_buffer.c ****     {
 1383              		.loc 1 625 7 view .LVU406
 1384 0174 0200001A 		bne	.L106
 1385              	.LVL172:
 1386              	.L86:
 646:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1387              		.loc 1 646 1 view .LVU407
 1388 0178 0500A0E1 		mov	r0, r5
 1389 017c 18D08DE2 		add	sp, sp, #24
 1390              		.cfi_remember_state
 1391              		.cfi_def_cfa_offset 24
 1392              		@ sp needed
 1393 0180 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1394              	.LVL173:
 1395              	.L106:
 1396              		.cfi_restore_state
 627:../src/FreeRTOS/stream_buffer.c **** 
 1397              		.loc 1 627 58 is_stmt 1 view .LVU408
 630:../src/FreeRTOS/stream_buffer.c ****         {
 1398              		.loc 1 630 9 view .LVU409
 630:../src/FreeRTOS/stream_buffer.c ****         {
 1399              		.loc 1 630 13 is_stmt 0 view .LVU410
 1400 0184 0400A0E1 		mov	r0, r4
 1401              	.LVL174:
 630:../src/FreeRTOS/stream_buffer.c ****         {
 1402              		.loc 1 630 13 view .LVU411
 1403 0188 FEFFFFEB 		bl	prvBytesInBuffer
 1404              	.LVL175:
 630:../src/FreeRTOS/stream_buffer.c ****         {
 1405              		.loc 1 630 65 view .LVU412
 1406 018c 0C3094E5 		ldr	r3, [r4, #12]
 630:../src/FreeRTOS/stream_buffer.c ****         {
 1407              		.loc 1 630 11 view .LVU413
 1408 0190 030050E1 		cmp	r0, r3
 1409 0194 F7FFFF3A 		bcc	.L86
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1410              		.loc 1 632 13 is_stmt 1 view .LVU414
 1411 0198 FEFFFFEB 		bl	vTaskSuspendAll
 1412              	.LVL176:
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1413              		.loc 1 632 13 view .LVU415
 1414 019c 103094E5 		ldr	r3, [r4, #16]
 1415 01a0 000053E3 		cmp	r3, #0
 1416 01a4 0700000A 		beq	.L99
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1417              		.loc 1 632 13 discriminator 1 view .LVU416
 1418 01a8 100094E5 		ldr	r0, [r4, #16]
 1419 01ac 0060A0E3 		mov	r6, #0
 1420              	.LVL177:
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1421              		.loc 1 632 13 is_stmt 0 discriminator 1 view .LVU417
 1422 01b0 00608DE5 		str	r6, [sp]
 1423 01b4 0630A0E1 		mov	r3, r6
 1424 01b8 0620A0E1 		mov	r2, r6
 1425 01bc 0610A0E1 		mov	r1, r6
 1426 01c0 FEFFFFEB 		bl	xTaskGenericNotify
 1427              	.LVL178:
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1428              		.loc 1 632 13 is_stmt 1 discriminator 1 view .LVU418
 1429 01c4 106084E5 		str	r6, [r4, #16]
 1430              	.L99:
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1431              		.loc 1 632 13 discriminator 3 view .LVU419
 1432 01c8 FEFFFFEB 		bl	xTaskResumeAll
 1433              	.LVL179:
 632:../src/FreeRTOS/stream_buffer.c ****         }
 1434              		.loc 1 632 47 discriminator 3 view .LVU420
 641:../src/FreeRTOS/stream_buffer.c ****         traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 1435              		.loc 1 641 33 discriminator 3 view .LVU421
 642:../src/FreeRTOS/stream_buffer.c ****     }
 1436              		.loc 1 642 56 discriminator 3 view .LVU422
 645:../src/FreeRTOS/stream_buffer.c **** }
 1437              		.loc 1 645 5 discriminator 3 view .LVU423
 645:../src/FreeRTOS/stream_buffer.c **** }
 1438              		.loc 1 645 12 is_stmt 0 discriminator 3 view .LVU424
 1439 01cc E9FFFFEA 		b	.L86
 1440              		.cfi_endproc
 1441              	.LFE6:
 1443              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1444              		.align	2
 1445              		.global	xStreamBufferSendFromISR
 1446              		.syntax unified
 1447              		.arm
 1448              		.fpu neon
 1450              	xStreamBufferSendFromISR:
 1451              	.LVL180:
 1452              	.LFB7:
 653:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1453              		.loc 1 653 1 is_stmt 1 view -0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 653:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1457              		.loc 1 653 1 is_stmt 0 view .LVU426
 1458 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1459              		.cfi_def_cfa_offset 24
 1460              		.cfi_offset 4, -24
 1461              		.cfi_offset 5, -20
 1462              		.cfi_offset 6, -16
 1463              		.cfi_offset 7, -12
 1464              		.cfi_offset 8, -8
 1465              		.cfi_offset 14, -4
 1466 0004 08D04DE2 		sub	sp, sp, #8
 1467              		.cfi_def_cfa_offset 32
 1468 0008 0040A0E1 		mov	r4, r0
 1469 000c 0260A0E1 		mov	r6, r2
 1470 0010 0370A0E1 		mov	r7, r3
 654:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn, xSpace;
 1471              		.loc 1 654 5 is_stmt 1 view .LVU427
 1472              	.LVL181:
 655:../src/FreeRTOS/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 1473              		.loc 1 655 5 view .LVU428
 656:../src/FreeRTOS/stream_buffer.c **** 
 1474              		.loc 1 656 5 view .LVU429
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1475              		.loc 1 658 5 view .LVU430
 1476 0014 005051E2 		subs	r5, r1, #0
 1477 0018 1200000A 		beq	.L115
 1478              	.LVL182:
 1479              	.L108:
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1480              		.loc 1 658 29 discriminator 3 view .LVU431
 659:../src/FreeRTOS/stream_buffer.c **** 
 1481              		.loc 1 659 5 discriminator 3 view .LVU432
 1482 001c 000054E3 		cmp	r4, #0
 1483 0020 1500000A 		beq	.L116
 1484              	.L109:
 659:../src/FreeRTOS/stream_buffer.c **** 
 1485              		.loc 1 659 35 discriminator 3 view .LVU433
 665:../src/FreeRTOS/stream_buffer.c ****     {
 1486              		.loc 1 665 5 discriminator 3 view .LVU434
 665:../src/FreeRTOS/stream_buffer.c ****     {
 1487              		.loc 1 665 25 is_stmt 0 discriminator 3 view .LVU435
 1488 0024 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 665:../src/FreeRTOS/stream_buffer.c ****     {
 1489              		.loc 1 665 7 discriminator 3 view .LVU436
 1490 0028 010013E3 		tst	r3, #1
 1491 002c 1700000A 		beq	.L113
 667:../src/FreeRTOS/stream_buffer.c ****     }
 1492              		.loc 1 667 9 is_stmt 1 view .LVU437
 667:../src/FreeRTOS/stream_buffer.c ****     }
 1493              		.loc 1 667 24 is_stmt 0 view .LVU438
 1494 0030 048086E2 		add	r8, r6, #4
 1495              	.LVL183:
 1496              	.L110:
 671:../src/FreeRTOS/stream_buffer.c ****     }
 1497              		.loc 1 671 33 is_stmt 1 view .LVU439
 674:../src/FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1498              		.loc 1 674 5 view .LVU440
 674:../src/FreeRTOS/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1499              		.loc 1 674 14 is_stmt 0 view .LVU441
 1500 0034 0400A0E1 		mov	r0, r4
 1501 0038 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 1502              	.LVL184:
 1503 003c 0030A0E1 		mov	r3, r0
 1504              	.LVL185:
 675:../src/FreeRTOS/stream_buffer.c **** 
 1505              		.loc 1 675 5 is_stmt 1 view .LVU442
 675:../src/FreeRTOS/stream_buffer.c **** 
 1506              		.loc 1 675 15 is_stmt 0 view .LVU443
 1507 0040 00808DE5 		str	r8, [sp]
 1508 0044 0620A0E1 		mov	r2, r6
 1509 0048 0510A0E1 		mov	r1, r5
 1510 004c 0400A0E1 		mov	r0, r4
 1511              	.LVL186:
 675:../src/FreeRTOS/stream_buffer.c **** 
 1512              		.loc 1 675 15 view .LVU444
 1513 0050 FEFFFFEB 		bl	prvWriteMessageToBuffer
 1514              	.LVL187:
 677:../src/FreeRTOS/stream_buffer.c ****     {
 1515              		.loc 1 677 5 is_stmt 1 view .LVU445
 677:../src/FreeRTOS/stream_buffer.c ****     {
 1516              		.loc 1 677 7 is_stmt 0 view .LVU446
 1517 0054 005050E2 		subs	r5, r0, #0
 1518              	.LVL188:
 677:../src/FreeRTOS/stream_buffer.c ****     {
 1519              		.loc 1 677 7 view .LVU447
 1520 0058 0E00001A 		bne	.L117
 1521              	.LVL189:
 1522              	.L107:
 697:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1523              		.loc 1 697 1 view .LVU448
 1524 005c 0500A0E1 		mov	r0, r5
 1525 0060 08D08DE2 		add	sp, sp, #8
 1526              		.cfi_remember_state
 1527              		.cfi_def_cfa_offset 24
 1528              		@ sp needed
 1529 0064 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1530              	.LVL190:
 1531              	.L115:
 1532              		.cfi_restore_state
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1533              		.loc 1 658 5 is_stmt 1 discriminator 1 view .LVU449
 1534 0068 921200E3 		movw	r1, #658
 1535              	.LVL191:
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1536              		.loc 1 658 5 is_stmt 0 discriminator 1 view .LVU450
 1537 006c 000000E3 		movw	r0, #:lower16:.LC0
 1538              	.LVL192:
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1539              		.loc 1 658 5 discriminator 1 view .LVU451
 1540 0070 000040E3 		movt	r0, #:upper16:.LC0
 1541 0074 FEFFFFEB 		bl	R_OS_AssertCalled
 1542              	.LVL193:
 658:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1543              		.loc 1 658 5 discriminator 1 view .LVU452
 1544 0078 E7FFFFEA 		b	.L108
 1545              	.L116:
 659:../src/FreeRTOS/stream_buffer.c **** 
 1546              		.loc 1 659 5 is_stmt 1 discriminator 1 view .LVU453
 1547 007c 931200E3 		movw	r1, #659
 1548 0080 000000E3 		movw	r0, #:lower16:.LC0
 1549 0084 000040E3 		movt	r0, #:upper16:.LC0
 1550 0088 FEFFFFEB 		bl	R_OS_AssertCalled
 1551              	.LVL194:
 1552 008c E4FFFFEA 		b	.L109
 1553              	.L113:
 656:../src/FreeRTOS/stream_buffer.c **** 
 1554              		.loc 1 656 12 is_stmt 0 view .LVU454
 1555 0090 0680A0E1 		mov	r8, r6
 1556 0094 E6FFFFEA 		b	.L110
 1557              	.LVL195:
 1558              	.L117:
 680:../src/FreeRTOS/stream_buffer.c ****         {
 1559              		.loc 1 680 9 is_stmt 1 view .LVU455
 680:../src/FreeRTOS/stream_buffer.c ****         {
 1560              		.loc 1 680 13 is_stmt 0 view .LVU456
 1561 0098 0400A0E1 		mov	r0, r4
 1562              	.LVL196:
 680:../src/FreeRTOS/stream_buffer.c ****         {
 1563              		.loc 1 680 13 view .LVU457
 1564 009c FEFFFFEB 		bl	prvBytesInBuffer
 1565              	.LVL197:
 680:../src/FreeRTOS/stream_buffer.c ****         {
 1566              		.loc 1 680 65 view .LVU458
 1567 00a0 0C3094E5 		ldr	r3, [r4, #12]
 680:../src/FreeRTOS/stream_buffer.c ****         {
 1568              		.loc 1 680 11 view .LVU459
 1569 00a4 030050E1 		cmp	r0, r3
 1570 00a8 EBFFFF3A 		bcc	.L107
 1571              	.LBB3:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1572              		.loc 1 682 13 is_stmt 1 view .LVU460
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1573              		.loc 1 682 13 view .LVU461
 1574 00ac FEFFFFEB 		bl	ulPortSetInterruptMask
 1575              	.LVL198:
 1576 00b0 0060A0E1 		mov	r6, r0
 1577              	.LVL199:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1578              		.loc 1 682 13 view .LVU462
 1579 00b4 103094E5 		ldr	r3, [r4, #16]
 1580 00b8 000053E3 		cmp	r3, #0
 1581 00bc 0800000A 		beq	.L112
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1582              		.loc 1 682 13 discriminator 1 view .LVU463
 1583 00c0 100094E5 		ldr	r0, [r4, #16]
 1584              	.LVL200:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1585              		.loc 1 682 13 is_stmt 0 discriminator 1 view .LVU464
 1586 00c4 04708DE5 		str	r7, [sp, #4]
 1587 00c8 0070A0E3 		mov	r7, #0
 1588              	.LVL201:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1589              		.loc 1 682 13 discriminator 1 view .LVU465
 1590 00cc 00708DE5 		str	r7, [sp]
 1591 00d0 0730A0E1 		mov	r3, r7
 1592 00d4 0720A0E1 		mov	r2, r7
 1593 00d8 0710A0E1 		mov	r1, r7
 1594 00dc FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1595              	.LVL202:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1596              		.loc 1 682 13 is_stmt 1 discriminator 1 view .LVU466
 1597 00e0 107084E5 		str	r7, [r4, #16]
 1598              	.L112:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1599              		.loc 1 682 13 discriminator 3 view .LVU467
 1600 00e4 0600A0E1 		mov	r0, r6
 1601 00e8 FEFFFFEB 		bl	vPortClearInterruptMask
 1602              	.LVL203:
 1603              	.LBE3:
 682:../src/FreeRTOS/stream_buffer.c ****         }
 1604              		.loc 1 682 82 discriminator 3 view .LVU468
 691:../src/FreeRTOS/stream_buffer.c ****     }
 1605              		.loc 1 691 33 discriminator 3 view .LVU469
 694:../src/FreeRTOS/stream_buffer.c **** 
 1606              		.loc 1 694 63 discriminator 3 view .LVU470
 696:../src/FreeRTOS/stream_buffer.c **** }
 1607              		.loc 1 696 5 discriminator 3 view .LVU471
 696:../src/FreeRTOS/stream_buffer.c **** }
 1608              		.loc 1 696 12 is_stmt 0 discriminator 3 view .LVU472
 1609 00ec DAFFFFEA 		b	.L107
 1610              		.cfi_endproc
 1611              	.LFE7:
 1613              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1614              		.align	2
 1615              		.global	xStreamBufferReceive
 1616              		.syntax unified
 1617              		.arm
 1618              		.fpu neon
 1620              	xStreamBufferReceive:
 1621              	.LVL204:
 1622              	.LFB9:
 756:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1623              		.loc 1 756 1 is_stmt 1 view -0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 0
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 756:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1627              		.loc 1 756 1 is_stmt 0 view .LVU474
 1628 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 1629              		.cfi_def_cfa_offset 28
 1630              		.cfi_offset 4, -28
 1631              		.cfi_offset 5, -24
 1632              		.cfi_offset 6, -20
 1633              		.cfi_offset 7, -16
 1634              		.cfi_offset 8, -12
 1635              		.cfi_offset 9, -8
 1636              		.cfi_offset 14, -4
 1637 0004 0CD04DE2 		sub	sp, sp, #12
 1638              		.cfi_def_cfa_offset 40
 1639 0008 0040A0E1 		mov	r4, r0
 1640 000c 0260A0E1 		mov	r6, r2
 1641 0010 0380A0E1 		mov	r8, r3
 757:../src/FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1642              		.loc 1 757 5 is_stmt 1 view .LVU475
 1643              	.LVL205:
 758:../src/FreeRTOS/stream_buffer.c **** 
 1644              		.loc 1 758 5 view .LVU476
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1645              		.loc 1 760 5 view .LVU477
 1646 0014 007051E2 		subs	r7, r1, #0
 1647 0018 1C00000A 		beq	.L131
 1648              	.LVL206:
 1649              	.L119:
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1650              		.loc 1 760 29 discriminator 3 view .LVU478
 761:../src/FreeRTOS/stream_buffer.c **** 
 1651              		.loc 1 761 5 discriminator 3 view .LVU479
 1652 001c 000054E3 		cmp	r4, #0
 1653 0020 1F00000A 		beq	.L132
 1654              	.L120:
 761:../src/FreeRTOS/stream_buffer.c **** 
 1655              		.loc 1 761 35 discriminator 3 view .LVU480
 768:../src/FreeRTOS/stream_buffer.c ****     {
 1656              		.loc 1 768 5 discriminator 3 view .LVU481
 768:../src/FreeRTOS/stream_buffer.c ****     {
 1657              		.loc 1 768 25 is_stmt 0 discriminator 3 view .LVU482
 1658 0024 1C10D4E5 		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 768:../src/FreeRTOS/stream_buffer.c ****     {
 1659              		.loc 1 768 7 discriminator 3 view .LVU483
 1660 0028 010011E3 		tst	r1, #1
 1661 002c 2100000A 		beq	.L128
 770:../src/FreeRTOS/stream_buffer.c ****     }
 1662              		.loc 1 770 36 view .LVU484
 1663 0030 0490A0E3 		mov	r9, #4
 1664              	.L121:
 1665              	.LVL207:
 777:../src/FreeRTOS/stream_buffer.c ****     {
 1666              		.loc 1 777 5 is_stmt 1 view .LVU485
 777:../src/FreeRTOS/stream_buffer.c ****     {
 1667              		.loc 1 777 7 is_stmt 0 view .LVU486
 1668 0034 000058E3 		cmp	r8, #0
 1669 0038 2D00000A 		beq	.L122
 781:../src/FreeRTOS/stream_buffer.c ****         {
 1670              		.loc 1 781 9 is_stmt 1 view .LVU487
 1671 003c FEFFFFEB 		bl	vPortEnterCritical
 1672              	.LVL208:
 781:../src/FreeRTOS/stream_buffer.c ****         {
 1673              		.loc 1 781 29 view .LVU488
 783:../src/FreeRTOS/stream_buffer.c **** 
 1674              		.loc 1 783 13 view .LVU489
 783:../src/FreeRTOS/stream_buffer.c **** 
 1675              		.loc 1 783 31 is_stmt 0 view .LVU490
 1676 0040 0400A0E1 		mov	r0, r4
 1677 0044 FEFFFFEB 		bl	prvBytesInBuffer
 1678              	.LVL209:
 1679 0048 0050A0E1 		mov	r5, r0
 1680              	.LVL210:
 790:../src/FreeRTOS/stream_buffer.c ****             {
 1681              		.loc 1 790 13 is_stmt 1 view .LVU491
 790:../src/FreeRTOS/stream_buffer.c ****             {
 1682              		.loc 1 790 15 is_stmt 0 view .LVU492
 1683 004c 000059E1 		cmp	r9, r0
 1684 0050 1A00002A 		bcs	.L133
 1685              	.LVL211:
 1686              	.L123:
 801:../src/FreeRTOS/stream_buffer.c ****             }
 1687              		.loc 1 801 41 is_stmt 1 view .LVU493
 804:../src/FreeRTOS/stream_buffer.c **** 
 1688              		.loc 1 804 9 view .LVU494
 1689 0054 FEFFFFEB 		bl	vPortExitCritical
 1690              	.LVL212:
 804:../src/FreeRTOS/stream_buffer.c **** 
 1691              		.loc 1 804 28 view .LVU495
 806:../src/FreeRTOS/stream_buffer.c ****         {
 1692              		.loc 1 806 9 view .LVU496
 806:../src/FreeRTOS/stream_buffer.c ****         {
 1693              		.loc 1 806 11 is_stmt 0 view .LVU497
 1694 0058 050059E1 		cmp	r9, r5
 1695 005c 2700003A 		bcc	.L125
 809:../src/FreeRTOS/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1696              		.loc 1 809 68 is_stmt 1 view .LVU498
 810:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1697              		.loc 1 810 13 view .LVU499
 810:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1698              		.loc 1 810 22 is_stmt 0 view .LVU500
 1699 0060 00808DE5 		str	r8, [sp]
 1700 0064 0030A0E3 		mov	r3, #0
 1701 0068 0320A0E1 		mov	r2, r3
 1702 006c 0310A0E1 		mov	r1, r3
 1703 0070 0300A0E1 		mov	r0, r3
 1704 0074 FEFFFFEB 		bl	xTaskGenericNotifyWait
 1705              	.LVL213:
 811:../src/FreeRTOS/stream_buffer.c **** 
 1706              		.loc 1 811 13 is_stmt 1 view .LVU501
 811:../src/FreeRTOS/stream_buffer.c **** 
 1707              		.loc 1 811 51 is_stmt 0 view .LVU502
 1708 0078 0030A0E3 		mov	r3, #0
 1709 007c 103084E5 		str	r3, [r4, #16]
 814:../src/FreeRTOS/stream_buffer.c ****         }
 1710              		.loc 1 814 13 is_stmt 1 view .LVU503
 814:../src/FreeRTOS/stream_buffer.c ****         }
 1711              		.loc 1 814 31 is_stmt 0 view .LVU504
 1712 0080 0400A0E1 		mov	r0, r4
 1713 0084 FEFFFFEB 		bl	prvBytesInBuffer
 1714              	.LVL214:
 1715 0088 0050A0E1 		mov	r5, r0
 1716              	.LVL215:
 814:../src/FreeRTOS/stream_buffer.c ****         }
 1717              		.loc 1 814 31 view .LVU505
 1718 008c 1B0000EA 		b	.L125
 1719              	.LVL216:
 1720              	.L131:
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1721              		.loc 1 760 5 is_stmt 1 discriminator 1 view .LVU506
 1722 0090 BE1FA0E3 		mov	r1, #760
 1723              	.LVL217:
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1724              		.loc 1 760 5 is_stmt 0 discriminator 1 view .LVU507
 1725 0094 000000E3 		movw	r0, #:lower16:.LC0
 1726              	.LVL218:
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1727              		.loc 1 760 5 discriminator 1 view .LVU508
 1728 0098 000040E3 		movt	r0, #:upper16:.LC0
 1729 009c FEFFFFEB 		bl	R_OS_AssertCalled
 1730              	.LVL219:
 760:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1731              		.loc 1 760 5 discriminator 1 view .LVU509
 1732 00a0 DDFFFFEA 		b	.L119
 1733              	.L132:
 761:../src/FreeRTOS/stream_buffer.c **** 
 1734              		.loc 1 761 5 is_stmt 1 discriminator 1 view .LVU510
 1735 00a4 F91200E3 		movw	r1, #761
 1736 00a8 000000E3 		movw	r0, #:lower16:.LC0
 1737 00ac 000040E3 		movt	r0, #:upper16:.LC0
 1738 00b0 FEFFFFEB 		bl	R_OS_AssertCalled
 1739              	.LVL220:
 1740 00b4 DAFFFFEA 		b	.L120
 1741              	.L128:
 774:../src/FreeRTOS/stream_buffer.c ****     }
 1742              		.loc 1 774 36 is_stmt 0 view .LVU511
 1743 00b8 0090A0E3 		mov	r9, #0
 1744 00bc DCFFFFEA 		b	.L121
 1745              	.LVL221:
 1746              	.L133:
 793:../src/FreeRTOS/stream_buffer.c **** 
 1747              		.loc 1 793 17 is_stmt 1 view .LVU512
 793:../src/FreeRTOS/stream_buffer.c **** 
 1748              		.loc 1 793 26 is_stmt 0 view .LVU513
 1749 00c0 0010A0E3 		mov	r1, #0
 1750 00c4 0100A0E1 		mov	r0, r1
 1751              	.LVL222:
 793:../src/FreeRTOS/stream_buffer.c **** 
 1752              		.loc 1 793 26 view .LVU514
 1753 00c8 FEFFFFEB 		bl	xTaskGenericNotifyStateClear
 1754              	.LVL223:
 796:../src/FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1755              		.loc 1 796 17 is_stmt 1 view .LVU515
 1756 00cc 103094E5 		ldr	r3, [r4, #16]
 1757 00d0 000053E3 		cmp	r3, #0
 1758 00d4 0300000A 		beq	.L124
 796:../src/FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1759              		.loc 1 796 17 discriminator 1 view .LVU516
 1760 00d8 C71FA0E3 		mov	r1, #796
 1761 00dc 000000E3 		movw	r0, #:lower16:.LC0
 1762 00e0 000040E3 		movt	r0, #:upper16:.LC0
 1763 00e4 FEFFFFEB 		bl	R_OS_AssertCalled
 1764              	.LVL224:
 1765              	.L124:
 796:../src/FreeRTOS/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1766              		.loc 1 796 78 discriminator 3 view .LVU517
 797:../src/FreeRTOS/stream_buffer.c ****             }
 1767              		.loc 1 797 17 discriminator 3 view .LVU518
 797:../src/FreeRTOS/stream_buffer.c ****             }
 1768              		.loc 1 797 57 is_stmt 0 discriminator 3 view .LVU519
 1769 00e8 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 1770              	.LVL225:
 797:../src/FreeRTOS/stream_buffer.c ****             }
 1771              		.loc 1 797 55 discriminator 3 view .LVU520
 1772 00ec 100084E5 		str	r0, [r4, #16]
 1773 00f0 D7FFFFEA 		b	.L123
 1774              	.LVL226:
 1775              	.L122:
 823:../src/FreeRTOS/stream_buffer.c ****     }
 1776              		.loc 1 823 9 is_stmt 1 view .LVU521
 823:../src/FreeRTOS/stream_buffer.c ****     }
 1777              		.loc 1 823 27 is_stmt 0 view .LVU522
 1778 00f4 0400A0E1 		mov	r0, r4
 1779 00f8 FEFFFFEB 		bl	prvBytesInBuffer
 1780              	.LVL227:
 1781 00fc 0050A0E1 		mov	r5, r0
 1782              	.LVL228:
 1783              	.L125:
 831:../src/FreeRTOS/stream_buffer.c ****     {
 1784              		.loc 1 831 5 is_stmt 1 view .LVU523
 831:../src/FreeRTOS/stream_buffer.c ****     {
 1785              		.loc 1 831 7 is_stmt 0 view .LVU524
 1786 0100 090055E1 		cmp	r5, r9
 1787 0104 0300008A 		bhi	.L134
 758:../src/FreeRTOS/stream_buffer.c **** 
 1788              		.loc 1 758 12 view .LVU525
 1789 0108 0050A0E3 		mov	r5, #0
 1790              	.LVL229:
 848:../src/FreeRTOS/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 1791              		.loc 1 848 59 is_stmt 1 view .LVU526
 849:../src/FreeRTOS/stream_buffer.c ****     }
 1792              		.loc 1 849 33 view .LVU527
 852:../src/FreeRTOS/stream_buffer.c **** }
 1793              		.loc 1 852 5 view .LVU528
 1794              	.L118:
 853:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1795              		.loc 1 853 1 is_stmt 0 view .LVU529
 1796 010c 0500A0E1 		mov	r0, r5
 1797 0110 0CD08DE2 		add	sp, sp, #12
 1798              		.cfi_remember_state
 1799              		.cfi_def_cfa_offset 28
 1800              		@ sp needed
 1801 0114 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1802              	.LVL230:
 1803              	.L134:
 1804              		.cfi_restore_state
 833:../src/FreeRTOS/stream_buffer.c **** 
 1805              		.loc 1 833 9 is_stmt 1 view .LVU530
 833:../src/FreeRTOS/stream_buffer.c **** 
 1806              		.loc 1 833 27 is_stmt 0 view .LVU531
 1807 0118 00908DE5 		str	r9, [sp]
 1808 011c 0530A0E1 		mov	r3, r5
 1809 0120 0620A0E1 		mov	r2, r6
 1810 0124 0710A0E1 		mov	r1, r7
 1811 0128 0400A0E1 		mov	r0, r4
 1812 012c FEFFFFEB 		bl	prvReadMessageFromBuffer
 1813              	.LVL231:
 836:../src/FreeRTOS/stream_buffer.c ****         {
 1814              		.loc 1 836 9 is_stmt 1 view .LVU532
 836:../src/FreeRTOS/stream_buffer.c ****         {
 1815              		.loc 1 836 11 is_stmt 0 view .LVU533
 1816 0130 005050E2 		subs	r5, r0, #0
 1817              	.LVL232:
 836:../src/FreeRTOS/stream_buffer.c ****         {
 1818              		.loc 1 836 11 view .LVU534
 1819 0134 F4FFFF0A 		beq	.L118
 838:../src/FreeRTOS/stream_buffer.c ****             sbRECEIVE_COMPLETED( pxStreamBuffer );
 1820              		.loc 1 838 73 is_stmt 1 view .LVU535
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1821              		.loc 1 839 13 view .LVU536
 1822 0138 FEFFFFEB 		bl	vTaskSuspendAll
 1823              	.LVL233:
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1824              		.loc 1 839 13 view .LVU537
 1825 013c 143094E5 		ldr	r3, [r4, #20]
 1826 0140 000053E3 		cmp	r3, #0
 1827 0144 0700000A 		beq	.L127
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1828              		.loc 1 839 13 discriminator 1 view .LVU538
 1829 0148 140094E5 		ldr	r0, [r4, #20]
 1830 014c 0060A0E3 		mov	r6, #0
 1831              	.LVL234:
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1832              		.loc 1 839 13 is_stmt 0 discriminator 1 view .LVU539
 1833 0150 00608DE5 		str	r6, [sp]
 1834 0154 0630A0E1 		mov	r3, r6
 1835 0158 0620A0E1 		mov	r2, r6
 1836 015c 0610A0E1 		mov	r1, r6
 1837 0160 FEFFFFEB 		bl	xTaskGenericNotify
 1838              	.LVL235:
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1839              		.loc 1 839 13 is_stmt 1 discriminator 1 view .LVU540
 1840 0164 146084E5 		str	r6, [r4, #20]
 1841              	.L127:
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1842              		.loc 1 839 13 discriminator 3 view .LVU541
 1843 0168 FEFFFFEB 		bl	xTaskResumeAll
 1844              	.LVL236:
 839:../src/FreeRTOS/stream_buffer.c ****         }
 1845              		.loc 1 839 50 discriminator 3 view .LVU542
 1846 016c E6FFFFEA 		b	.L118
 1847              		.cfi_endproc
 1848              	.LFE9:
 1850              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1851              		.align	2
 1852              		.global	xStreamBufferNextMessageLengthBytes
 1853              		.syntax unified
 1854              		.arm
 1855              		.fpu neon
 1857              	xStreamBufferNextMessageLengthBytes:
 1858              	.LVL237:
 1859              	.LFB10:
 857:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1860              		.loc 1 857 1 view -0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 8
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 857:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1864              		.loc 1 857 1 is_stmt 0 view .LVU544
 1865 0000 30402DE9 		push	{r4, r5, lr}
 1866              		.cfi_def_cfa_offset 12
 1867              		.cfi_offset 4, -12
 1868              		.cfi_offset 5, -8
 1869              		.cfi_offset 14, -4
 1870 0004 0CD04DE2 		sub	sp, sp, #12
 1871              		.cfi_def_cfa_offset 24
 858:../src/FreeRTOS/stream_buffer.c ****     size_t xReturn, xBytesAvailable, xOriginalTail;
 1872              		.loc 1 858 5 is_stmt 1 view .LVU545
 1873              	.LVL238:
 859:../src/FreeRTOS/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 1874              		.loc 1 859 5 view .LVU546
 860:../src/FreeRTOS/stream_buffer.c **** 
 1875              		.loc 1 860 5 view .LVU547
 862:../src/FreeRTOS/stream_buffer.c **** 
 1876              		.loc 1 862 5 view .LVU548
 1877 0008 004050E2 		subs	r4, r0, #0
 1878 000c 0500000A 		beq	.L141
 1879              	.LVL239:
 1880              	.L136:
 862:../src/FreeRTOS/stream_buffer.c **** 
 1881              		.loc 1 862 35 discriminator 3 view .LVU549
 865:../src/FreeRTOS/stream_buffer.c ****     {
 1882              		.loc 1 865 5 discriminator 3 view .LVU550
 865:../src/FreeRTOS/stream_buffer.c ****     {
 1883              		.loc 1 865 25 is_stmt 0 discriminator 3 view .LVU551
 1884 0010 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 865:../src/FreeRTOS/stream_buffer.c ****     {
 1885              		.loc 1 865 7 discriminator 3 view .LVU552
 1886 0014 010013E3 		tst	r3, #1
 1887 0018 0700001A 		bne	.L142
 894:../src/FreeRTOS/stream_buffer.c ****     }
 1888              		.loc 1 894 17 view .LVU553
 1889 001c 0000A0E3 		mov	r0, #0
 1890              	.LVL240:
 897:../src/FreeRTOS/stream_buffer.c **** }
 1891              		.loc 1 897 5 is_stmt 1 view .LVU554
 1892              	.L135:
 898:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 1893              		.loc 1 898 1 is_stmt 0 view .LVU555
 1894 0020 0CD08DE2 		add	sp, sp, #12
 1895              		.cfi_remember_state
 1896              		.cfi_def_cfa_offset 12
 1897              		@ sp needed
 1898 0024 3080BDE8 		pop	{r4, r5, pc}
 1899              	.LVL241:
 1900              	.L141:
 1901              		.cfi_restore_state
 862:../src/FreeRTOS/stream_buffer.c **** 
 1902              		.loc 1 862 5 is_stmt 1 discriminator 1 view .LVU556
 1903 0028 5E1300E3 		movw	r1, #862
 1904 002c 000000E3 		movw	r0, #:lower16:.LC0
 1905              	.LVL242:
 862:../src/FreeRTOS/stream_buffer.c **** 
 1906              		.loc 1 862 5 is_stmt 0 discriminator 1 view .LVU557
 1907 0030 000040E3 		movt	r0, #:upper16:.LC0
 1908 0034 FEFFFFEB 		bl	R_OS_AssertCalled
 1909              	.LVL243:
 1910 0038 F4FFFFEA 		b	.L136
 1911              	.L142:
 867:../src/FreeRTOS/stream_buffer.c **** 
 1912              		.loc 1 867 9 is_stmt 1 view .LVU558
 867:../src/FreeRTOS/stream_buffer.c **** 
 1913              		.loc 1 867 27 is_stmt 0 view .LVU559
 1914 003c 0400A0E1 		mov	r0, r4
 1915 0040 FEFFFFEB 		bl	prvBytesInBuffer
 1916              	.LVL244:
 869:../src/FreeRTOS/stream_buffer.c ****         {
 1917              		.loc 1 869 9 is_stmt 1 view .LVU560
 869:../src/FreeRTOS/stream_buffer.c ****         {
 1918              		.loc 1 869 11 is_stmt 0 view .LVU561
 1919 0044 040050E3 		cmp	r0, #4
 1920 0048 0700008A 		bhi	.L143
 888:../src/FreeRTOS/stream_buffer.c ****             xReturn = 0;
 1921              		.loc 1 888 13 is_stmt 1 view .LVU562
 1922 004c 000050E3 		cmp	r0, #0
 1923 0050 F2FFFF0A 		beq	.L135
 888:../src/FreeRTOS/stream_buffer.c ****             xReturn = 0;
 1924              		.loc 1 888 13 discriminator 1 view .LVU563
 1925 0054 DE1FA0E3 		mov	r1, #888
 1926 0058 000000E3 		movw	r0, #:lower16:.LC0
 1927              	.LVL245:
 888:../src/FreeRTOS/stream_buffer.c ****             xReturn = 0;
 1928              		.loc 1 888 13 is_stmt 0 discriminator 1 view .LVU564
 1929 005c 000040E3 		movt	r0, #:upper16:.LC0
 1930 0060 FEFFFFEB 		bl	R_OS_AssertCalled
 1931              	.LVL246:
 889:../src/FreeRTOS/stream_buffer.c ****         }
 1932              		.loc 1 889 21 discriminator 1 view .LVU565
 1933 0064 0000A0E3 		mov	r0, #0
 1934 0068 ECFFFFEA 		b	.L135
 1935              	.LVL247:
 1936              	.L143:
 877:../src/FreeRTOS/stream_buffer.c ****             ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO
 1937              		.loc 1 877 13 is_stmt 1 view .LVU566
 877:../src/FreeRTOS/stream_buffer.c ****             ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO
 1938              		.loc 1 877 27 is_stmt 0 view .LVU567
 1939 006c 005094E5 		ldr	r5, [r4]
 1940              	.LVL248:
 878:../src/FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1941              		.loc 1 878 13 is_stmt 1 view .LVU568
 878:../src/FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1942              		.loc 1 878 22 is_stmt 0 view .LVU569
 1943 0070 0030A0E1 		mov	r3, r0
 1944 0074 0420A0E3 		mov	r2, #4
 1945 0078 02108DE0 		add	r1, sp, r2
 1946 007c 0400A0E1 		mov	r0, r4
 1947              	.LVL249:
 878:../src/FreeRTOS/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1948              		.loc 1 878 22 view .LVU570
 1949 0080 FEFFFFEB 		bl	prvReadBytesFromBuffer
 1950              	.LVL250:
 879:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTail = xOriginalTail;
 1951              		.loc 1 879 13 is_stmt 1 view .LVU571
 879:../src/FreeRTOS/stream_buffer.c ****             pxStreamBuffer->xTail = xOriginalTail;
 1952              		.loc 1 879 21 is_stmt 0 view .LVU572
 1953 0084 04009DE5 		ldr	r0, [sp, #4]
 1954              	.LVL251:
 880:../src/FreeRTOS/stream_buffer.c ****         }
 1955              		.loc 1 880 13 is_stmt 1 view .LVU573
 880:../src/FreeRTOS/stream_buffer.c ****         }
 1956              		.loc 1 880 35 is_stmt 0 view .LVU574
 1957 0088 005084E5 		str	r5, [r4]
 1958 008c E3FFFFEA 		b	.L135
 1959              		.cfi_endproc
 1960              	.LFE10:
 1962              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1963              		.align	2
 1964              		.global	xStreamBufferReceiveFromISR
 1965              		.syntax unified
 1966              		.arm
 1967              		.fpu neon
 1969              	xStreamBufferReceiveFromISR:
 1970              	.LVL252:
 1971              	.LFB11:
 905:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1972              		.loc 1 905 1 is_stmt 1 view -0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 905:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1976              		.loc 1 905 1 is_stmt 0 view .LVU576
 1977 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1978              		.cfi_def_cfa_offset 24
 1979              		.cfi_offset 4, -24
 1980              		.cfi_offset 5, -20
 1981              		.cfi_offset 6, -16
 1982              		.cfi_offset 7, -12
 1983              		.cfi_offset 8, -8
 1984              		.cfi_offset 14, -4
 1985 0004 08D04DE2 		sub	sp, sp, #8
 1986              		.cfi_def_cfa_offset 32
 1987 0008 0040A0E1 		mov	r4, r0
 1988 000c 0260A0E1 		mov	r6, r2
 1989 0010 0370A0E1 		mov	r7, r3
 906:../src/FreeRTOS/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1990              		.loc 1 906 5 is_stmt 1 view .LVU577
 1991              	.LVL253:
 907:../src/FreeRTOS/stream_buffer.c **** 
 1992              		.loc 1 907 5 view .LVU578
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1993              		.loc 1 909 5 view .LVU579
 1994 0014 005051E2 		subs	r5, r1, #0
 1995 0018 0D00000A 		beq	.L153
 1996              	.LVL254:
 1997              	.L145:
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1998              		.loc 1 909 29 discriminator 3 view .LVU580
 910:../src/FreeRTOS/stream_buffer.c **** 
 1999              		.loc 1 910 5 discriminator 3 view .LVU581
 2000 001c 000054E3 		cmp	r4, #0
 2001 0020 1000000A 		beq	.L154
 2002              	.L146:
 910:../src/FreeRTOS/stream_buffer.c **** 
 2003              		.loc 1 910 35 discriminator 3 view .LVU582
 917:../src/FreeRTOS/stream_buffer.c ****     {
 2004              		.loc 1 917 5 discriminator 3 view .LVU583
 917:../src/FreeRTOS/stream_buffer.c ****     {
 2005              		.loc 1 917 25 is_stmt 0 discriminator 3 view .LVU584
 2006 0024 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 917:../src/FreeRTOS/stream_buffer.c ****     {
 2007              		.loc 1 917 7 discriminator 3 view .LVU585
 2008 0028 010013E3 		tst	r3, #1
 2009 002c 1200000A 		beq	.L150
 919:../src/FreeRTOS/stream_buffer.c ****     }
 2010              		.loc 1 919 36 view .LVU586
 2011 0030 0480A0E3 		mov	r8, #4
 2012              	.L147:
 2013              	.LVL255:
 926:../src/FreeRTOS/stream_buffer.c **** 
 2014              		.loc 1 926 5 is_stmt 1 view .LVU587
 926:../src/FreeRTOS/stream_buffer.c **** 
 2015              		.loc 1 926 23 is_stmt 0 view .LVU588
 2016 0034 0400A0E1 		mov	r0, r4
 2017 0038 FEFFFFEB 		bl	prvBytesInBuffer
 2018              	.LVL256:
 933:../src/FreeRTOS/stream_buffer.c ****     {
 2019              		.loc 1 933 5 is_stmt 1 view .LVU589
 933:../src/FreeRTOS/stream_buffer.c ****     {
 2020              		.loc 1 933 7 is_stmt 0 view .LVU590
 2021 003c 000058E1 		cmp	r8, r0
 2022 0040 0F00003A 		bcc	.L155
 907:../src/FreeRTOS/stream_buffer.c **** 
 2023              		.loc 1 907 12 view .LVU591
 2024 0044 0050A0E3 		mov	r5, #0
 2025              	.LVL257:
 949:../src/FreeRTOS/stream_buffer.c ****     }
 2026              		.loc 1 949 33 is_stmt 1 view .LVU592
 952:../src/FreeRTOS/stream_buffer.c **** 
 2027              		.loc 1 952 74 view .LVU593
 954:../src/FreeRTOS/stream_buffer.c **** }
 2028              		.loc 1 954 5 view .LVU594
 2029              	.L144:
 955:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2030              		.loc 1 955 1 is_stmt 0 view .LVU595
 2031 0048 0500A0E1 		mov	r0, r5
 2032 004c 08D08DE2 		add	sp, sp, #8
 2033              		.cfi_remember_state
 2034              		.cfi_def_cfa_offset 24
 2035              		@ sp needed
 2036 0050 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2037              	.LVL258:
 2038              	.L153:
 2039              		.cfi_restore_state
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 2040              		.loc 1 909 5 is_stmt 1 discriminator 1 view .LVU596
 2041 0054 8D1300E3 		movw	r1, #909
 2042              	.LVL259:
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 2043              		.loc 1 909 5 is_stmt 0 discriminator 1 view .LVU597
 2044 0058 000000E3 		movw	r0, #:lower16:.LC0
 2045              	.LVL260:
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 2046              		.loc 1 909 5 discriminator 1 view .LVU598
 2047 005c 000040E3 		movt	r0, #:upper16:.LC0
 2048 0060 FEFFFFEB 		bl	R_OS_AssertCalled
 2049              	.LVL261:
 909:../src/FreeRTOS/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 2050              		.loc 1 909 5 discriminator 1 view .LVU599
 2051 0064 ECFFFFEA 		b	.L145
 2052              	.L154:
 910:../src/FreeRTOS/stream_buffer.c **** 
 2053              		.loc 1 910 5 is_stmt 1 discriminator 1 view .LVU600
 2054 0068 8E1300E3 		movw	r1, #910
 2055 006c 000000E3 		movw	r0, #:lower16:.LC0
 2056 0070 000040E3 		movt	r0, #:upper16:.LC0
 2057 0074 FEFFFFEB 		bl	R_OS_AssertCalled
 2058              	.LVL262:
 2059 0078 E9FFFFEA 		b	.L146
 2060              	.L150:
 923:../src/FreeRTOS/stream_buffer.c ****     }
 2061              		.loc 1 923 36 is_stmt 0 view .LVU601
 2062 007c 0080A0E3 		mov	r8, #0
 2063 0080 EBFFFFEA 		b	.L147
 2064              	.LVL263:
 2065              	.L155:
 935:../src/FreeRTOS/stream_buffer.c **** 
 2066              		.loc 1 935 9 is_stmt 1 view .LVU602
 935:../src/FreeRTOS/stream_buffer.c **** 
 2067              		.loc 1 935 27 is_stmt 0 view .LVU603
 2068 0084 00808DE5 		str	r8, [sp]
 2069 0088 0030A0E1 		mov	r3, r0
 2070 008c 0620A0E1 		mov	r2, r6
 2071 0090 0510A0E1 		mov	r1, r5
 2072 0094 0400A0E1 		mov	r0, r4
 2073              	.LVL264:
 935:../src/FreeRTOS/stream_buffer.c **** 
 2074              		.loc 1 935 27 view .LVU604
 2075 0098 FEFFFFEB 		bl	prvReadMessageFromBuffer
 2076              	.LVL265:
 938:../src/FreeRTOS/stream_buffer.c ****         {
 2077              		.loc 1 938 9 is_stmt 1 view .LVU605
 938:../src/FreeRTOS/stream_buffer.c ****         {
 2078              		.loc 1 938 11 is_stmt 0 view .LVU606
 2079 009c 005050E2 		subs	r5, r0, #0
 2080              	.LVL266:
 938:../src/FreeRTOS/stream_buffer.c ****         {
 2081              		.loc 1 938 11 view .LVU607
 2082 00a0 E8FFFF0A 		beq	.L144
 2083              	.LBB4:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2084              		.loc 1 940 13 is_stmt 1 view .LVU608
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2085              		.loc 1 940 13 view .LVU609
 2086 00a4 FEFFFFEB 		bl	ulPortSetInterruptMask
 2087              	.LVL267:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2088              		.loc 1 940 13 is_stmt 0 view .LVU610
 2089 00a8 0060A0E1 		mov	r6, r0
 2090              	.LVL268:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2091              		.loc 1 940 13 is_stmt 1 view .LVU611
 2092 00ac 143094E5 		ldr	r3, [r4, #20]
 2093 00b0 000053E3 		cmp	r3, #0
 2094 00b4 0800000A 		beq	.L149
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2095              		.loc 1 940 13 discriminator 1 view .LVU612
 2096 00b8 140094E5 		ldr	r0, [r4, #20]
 2097              	.LVL269:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2098              		.loc 1 940 13 is_stmt 0 discriminator 1 view .LVU613
 2099 00bc 04708DE5 		str	r7, [sp, #4]
 2100 00c0 0070A0E3 		mov	r7, #0
 2101              	.LVL270:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2102              		.loc 1 940 13 discriminator 1 view .LVU614
 2103 00c4 00708DE5 		str	r7, [sp]
 2104 00c8 0730A0E1 		mov	r3, r7
 2105 00cc 0720A0E1 		mov	r2, r7
 2106 00d0 0710A0E1 		mov	r1, r7
 2107 00d4 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 2108              	.LVL271:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2109              		.loc 1 940 13 is_stmt 1 discriminator 1 view .LVU615
 2110 00d8 147084E5 		str	r7, [r4, #20]
 2111              	.L149:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2112              		.loc 1 940 13 discriminator 3 view .LVU616
 2113 00dc 0600A0E1 		mov	r0, r6
 2114 00e0 FEFFFFEB 		bl	vPortClearInterruptMask
 2115              	.LVL272:
 2116              	.LBE4:
 940:../src/FreeRTOS/stream_buffer.c ****         }
 2117              		.loc 1 940 86 discriminator 3 view .LVU617
 2118 00e4 D7FFFFEA 		b	.L144
 2119              		.cfi_endproc
 2120              	.LFE11:
 2122              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 2123              		.align	2
 2124              		.global	xStreamBufferIsEmpty
 2125              		.syntax unified
 2126              		.arm
 2127              		.fpu neon
 2129              	xStreamBufferIsEmpty:
 2130              	.LVL273:
 2131              	.LFB13:
1011:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2132              		.loc 1 1011 1 view -0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
1011:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2136              		.loc 1 1011 1 is_stmt 0 view .LVU619
 2137 0000 10402DE9 		push	{r4, lr}
 2138              		.cfi_def_cfa_offset 8
 2139              		.cfi_offset 4, -8
 2140              		.cfi_offset 14, -4
1012:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 2141              		.loc 1 1012 5 is_stmt 1 view .LVU620
 2142              	.LVL274:
1013:../src/FreeRTOS/stream_buffer.c ****     size_t xTail;
 2143              		.loc 1 1013 5 view .LVU621
1014:../src/FreeRTOS/stream_buffer.c **** 
 2144              		.loc 1 1014 5 view .LVU622
1016:../src/FreeRTOS/stream_buffer.c **** 
 2145              		.loc 1 1016 5 view .LVU623
 2146 0004 004050E2 		subs	r4, r0, #0
 2147 0008 0500000A 		beq	.L161
 2148              	.LVL275:
 2149              	.L157:
1016:../src/FreeRTOS/stream_buffer.c **** 
 2150              		.loc 1 1016 35 discriminator 3 view .LVU624
1019:../src/FreeRTOS/stream_buffer.c **** 
 2151              		.loc 1 1019 5 discriminator 3 view .LVU625
1019:../src/FreeRTOS/stream_buffer.c **** 
 2152              		.loc 1 1019 11 is_stmt 0 discriminator 3 view .LVU626
 2153 000c 003094E5 		ldr	r3, [r4]
 2154              	.LVL276:
1021:../src/FreeRTOS/stream_buffer.c ****     {
 2155              		.loc 1 1021 5 is_stmt 1 discriminator 3 view .LVU627
1021:../src/FreeRTOS/stream_buffer.c ****     {
 2156              		.loc 1 1021 23 is_stmt 0 discriminator 3 view .LVU628
 2157 0010 042094E5 		ldr	r2, [r4, #4]
1021:../src/FreeRTOS/stream_buffer.c ****     {
 2158              		.loc 1 1021 7 discriminator 3 view .LVU629
 2159 0014 030052E1 		cmp	r2, r3
 2160 0018 0600000A 		beq	.L162
1027:../src/FreeRTOS/stream_buffer.c ****     }
 2161              		.loc 1 1027 17 view .LVU630
 2162 001c 0000A0E3 		mov	r0, #0
 2163              	.LVL277:
1030:../src/FreeRTOS/stream_buffer.c **** }
 2164              		.loc 1 1030 5 is_stmt 1 view .LVU631
1031:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2165              		.loc 1 1031 1 is_stmt 0 view .LVU632
 2166 0020 1080BDE8 		pop	{r4, pc}
 2167              	.LVL278:
 2168              	.L161:
1016:../src/FreeRTOS/stream_buffer.c **** 
 2169              		.loc 1 1016 5 is_stmt 1 discriminator 1 view .LVU633
 2170 0024 FE1FA0E3 		mov	r1, #1016
 2171 0028 000000E3 		movw	r0, #:lower16:.LC0
 2172              	.LVL279:
1016:../src/FreeRTOS/stream_buffer.c **** 
 2173              		.loc 1 1016 5 is_stmt 0 discriminator 1 view .LVU634
 2174 002c 000040E3 		movt	r0, #:upper16:.LC0
 2175 0030 FEFFFFEB 		bl	R_OS_AssertCalled
 2176              	.LVL280:
 2177 0034 F4FFFFEA 		b	.L157
 2178              	.LVL281:
 2179              	.L162:
1023:../src/FreeRTOS/stream_buffer.c ****     }
 2180              		.loc 1 1023 17 view .LVU635
 2181 0038 0100A0E3 		mov	r0, #1
 2182 003c 1080BDE8 		pop	{r4, pc}
 2183              		.cfi_endproc
 2184              	.LFE13:
 2186              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 2187              		.align	2
 2188              		.global	xStreamBufferIsFull
 2189              		.syntax unified
 2190              		.arm
 2191              		.fpu neon
 2193              	xStreamBufferIsFull:
 2194              	.LVL282:
 2195              	.LFB14:
1035:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 2196              		.loc 1 1035 1 is_stmt 1 view -0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 0, uses_anonymous_args = 0
1035:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 2200              		.loc 1 1035 1 is_stmt 0 view .LVU637
 2201 0000 70402DE9 		push	{r4, r5, r6, lr}
 2202              		.cfi_def_cfa_offset 16
 2203              		.cfi_offset 4, -16
 2204              		.cfi_offset 5, -12
 2205              		.cfi_offset 6, -8
 2206              		.cfi_offset 14, -4
1036:../src/FreeRTOS/stream_buffer.c ****     size_t xBytesToStoreMessageLength;
 2207              		.loc 1 1036 5 is_stmt 1 view .LVU638
1037:../src/FreeRTOS/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2208              		.loc 1 1037 5 view .LVU639
1038:../src/FreeRTOS/stream_buffer.c **** 
 2209              		.loc 1 1038 5 view .LVU640
 2210              	.LVL283:
1040:../src/FreeRTOS/stream_buffer.c **** 
 2211              		.loc 1 1040 5 view .LVU641
 2212 0004 004050E2 		subs	r4, r0, #0
 2213 0008 0900000A 		beq	.L170
 2214              	.LVL284:
 2215              	.L164:
1040:../src/FreeRTOS/stream_buffer.c **** 
 2216              		.loc 1 1040 35 discriminator 3 view .LVU642
1046:../src/FreeRTOS/stream_buffer.c ****     {
 2217              		.loc 1 1046 5 discriminator 3 view .LVU643
1046:../src/FreeRTOS/stream_buffer.c ****     {
 2218              		.loc 1 1046 25 is_stmt 0 discriminator 3 view .LVU644
 2219 000c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
1046:../src/FreeRTOS/stream_buffer.c ****     {
 2220              		.loc 1 1046 7 discriminator 3 view .LVU645
 2221 0010 010013E3 		tst	r3, #1
 2222 0014 0B00000A 		beq	.L167
1048:../src/FreeRTOS/stream_buffer.c ****     }
 2223              		.loc 1 1048 36 view .LVU646
 2224 0018 0450A0E3 		mov	r5, #4
 2225              	.L165:
 2226              	.LVL285:
1056:../src/FreeRTOS/stream_buffer.c ****     {
 2227              		.loc 1 1056 5 is_stmt 1 view .LVU647
1056:../src/FreeRTOS/stream_buffer.c ****     {
 2228              		.loc 1 1056 9 is_stmt 0 view .LVU648
 2229 001c 0400A0E1 		mov	r0, r4
 2230 0020 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 2231              	.LVL286:
1056:../src/FreeRTOS/stream_buffer.c ****     {
 2232              		.loc 1 1056 7 view .LVU649
 2233 0024 050050E1 		cmp	r0, r5
 2234 0028 0800008A 		bhi	.L168
1058:../src/FreeRTOS/stream_buffer.c ****     }
 2235              		.loc 1 1058 17 view .LVU650
 2236 002c 0100A0E3 		mov	r0, #1
 2237 0030 7080BDE8 		pop	{r4, r5, r6, pc}
 2238              	.LVL287:
 2239              	.L170:
1040:../src/FreeRTOS/stream_buffer.c **** 
 2240              		.loc 1 1040 5 is_stmt 1 discriminator 1 view .LVU651
 2241 0034 411EA0E3 		mov	r1, #1040
 2242 0038 000000E3 		movw	r0, #:lower16:.LC0
 2243              	.LVL288:
1040:../src/FreeRTOS/stream_buffer.c **** 
 2244              		.loc 1 1040 5 is_stmt 0 discriminator 1 view .LVU652
 2245 003c 000040E3 		movt	r0, #:upper16:.LC0
 2246 0040 FEFFFFEB 		bl	R_OS_AssertCalled
 2247              	.LVL289:
 2248 0044 F0FFFFEA 		b	.L164
 2249              	.L167:
1052:../src/FreeRTOS/stream_buffer.c ****     }
 2250              		.loc 1 1052 36 view .LVU653
 2251 0048 0050A0E3 		mov	r5, #0
 2252 004c F2FFFFEA 		b	.L165
 2253              	.LVL290:
 2254              	.L168:
1062:../src/FreeRTOS/stream_buffer.c ****     }
 2255              		.loc 1 1062 17 view .LVU654
 2256 0050 0000A0E3 		mov	r0, #0
 2257              	.LVL291:
1065:../src/FreeRTOS/stream_buffer.c **** }
 2258              		.loc 1 1065 5 is_stmt 1 view .LVU655
1066:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2259              		.loc 1 1066 1 is_stmt 0 view .LVU656
 2260 0054 7080BDE8 		pop	{r4, r5, r6, pc}
 2261              		.cfi_endproc
 2262              	.LFE14:
 2264              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 2265              		.align	2
 2266              		.global	xStreamBufferSendCompletedFromISR
 2267              		.syntax unified
 2268              		.arm
 2269              		.fpu neon
 2271              	xStreamBufferSendCompletedFromISR:
 2272              	.LVL292:
 2273              	.LFB15:
1071:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2274              		.loc 1 1071 1 is_stmt 1 view -0
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 0, uses_anonymous_args = 0
1071:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2278              		.loc 1 1071 1 is_stmt 0 view .LVU658
 2279 0000 70402DE9 		push	{r4, r5, r6, lr}
 2280              		.cfi_def_cfa_offset 16
 2281              		.cfi_offset 4, -16
 2282              		.cfi_offset 5, -12
 2283              		.cfi_offset 6, -8
 2284              		.cfi_offset 14, -4
 2285 0004 08D04DE2 		sub	sp, sp, #8
 2286              		.cfi_def_cfa_offset 24
 2287 0008 0160A0E1 		mov	r6, r1
1072:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 2288              		.loc 1 1072 5 is_stmt 1 view .LVU659
 2289              	.LVL293:
1073:../src/FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
 2290              		.loc 1 1073 5 view .LVU660
1074:../src/FreeRTOS/stream_buffer.c **** 
 2291              		.loc 1 1074 5 view .LVU661
1076:../src/FreeRTOS/stream_buffer.c **** 
 2292              		.loc 1 1076 5 view .LVU662
 2293 000c 004050E2 		subs	r4, r0, #0
 2294 0010 1300000A 		beq	.L176
 2295              	.LVL294:
 2296              	.L172:
1076:../src/FreeRTOS/stream_buffer.c **** 
 2297              		.loc 1 1076 35 discriminator 3 view .LVU663
1078:../src/FreeRTOS/stream_buffer.c ****     {
 2298              		.loc 1 1078 5 discriminator 3 view .LVU664
1078:../src/FreeRTOS/stream_buffer.c ****     {
 2299              		.loc 1 1078 46 is_stmt 0 discriminator 3 view .LVU665
 2300 0014 FEFFFFEB 		bl	ulPortSetInterruptMask
 2301              	.LVL295:
 2302 0018 0050A0E1 		mov	r5, r0
 2303              	.LVL296:
1080:../src/FreeRTOS/stream_buffer.c ****         {
 2304              		.loc 1 1080 9 is_stmt 1 discriminator 3 view .LVU666
1080:../src/FreeRTOS/stream_buffer.c ****         {
 2305              		.loc 1 1080 31 is_stmt 0 discriminator 3 view .LVU667
 2306 001c 103094E5 		ldr	r3, [r4, #16]
1080:../src/FreeRTOS/stream_buffer.c ****         {
 2307              		.loc 1 1080 11 discriminator 3 view .LVU668
 2308 0020 000053E3 		cmp	r3, #0
 2309 0024 1300000A 		beq	.L174
1082:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2310              		.loc 1 1082 13 is_stmt 1 view .LVU669
1082:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2311              		.loc 1 1082 22 is_stmt 0 view .LVU670
 2312 0028 100094E5 		ldr	r0, [r4, #16]
 2313              	.LVL297:
1082:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2314              		.loc 1 1082 22 view .LVU671
 2315 002c 04608DE5 		str	r6, [sp, #4]
 2316 0030 0060A0E3 		mov	r6, #0
 2317              	.LVL298:
1082:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2318              		.loc 1 1082 22 view .LVU672
 2319 0034 00608DE5 		str	r6, [sp]
 2320 0038 0630A0E1 		mov	r3, r6
 2321 003c 0620A0E1 		mov	r2, r6
 2322 0040 0610A0E1 		mov	r1, r6
 2323 0044 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 2324              	.LVL299:
1086:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 2325              		.loc 1 1086 13 is_stmt 1 view .LVU673
1086:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 2326              		.loc 1 1086 55 is_stmt 0 view .LVU674
 2327 0048 106084E5 		str	r6, [r4, #16]
1087:../src/FreeRTOS/stream_buffer.c ****         }
 2328              		.loc 1 1087 13 is_stmt 1 view .LVU675
 2329              	.LVL300:
1087:../src/FreeRTOS/stream_buffer.c ****         }
 2330              		.loc 1 1087 21 is_stmt 0 view .LVU676
 2331 004c 0140A0E3 		mov	r4, #1
 2332              	.LVL301:
 2333              	.L173:
1094:../src/FreeRTOS/stream_buffer.c **** 
 2334              		.loc 1 1094 5 is_stmt 1 view .LVU677
 2335 0050 0500A0E1 		mov	r0, r5
 2336 0054 FEFFFFEB 		bl	vPortClearInterruptMask
 2337              	.LVL302:
1096:../src/FreeRTOS/stream_buffer.c **** }
 2338              		.loc 1 1096 5 view .LVU678
1097:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2339              		.loc 1 1097 1 is_stmt 0 view .LVU679
 2340 0058 0400A0E1 		mov	r0, r4
 2341 005c 08D08DE2 		add	sp, sp, #8
 2342              		.cfi_remember_state
 2343              		.cfi_def_cfa_offset 16
 2344              		@ sp needed
 2345 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 2346              	.LVL303:
 2347              	.L176:
 2348              		.cfi_restore_state
1076:../src/FreeRTOS/stream_buffer.c **** 
 2349              		.loc 1 1076 5 is_stmt 1 discriminator 1 view .LVU680
 2350 0064 341400E3 		movw	r1, #1076
 2351              	.LVL304:
1076:../src/FreeRTOS/stream_buffer.c **** 
 2352              		.loc 1 1076 5 is_stmt 0 discriminator 1 view .LVU681
 2353 0068 000000E3 		movw	r0, #:lower16:.LC0
 2354              	.LVL305:
1076:../src/FreeRTOS/stream_buffer.c **** 
 2355              		.loc 1 1076 5 discriminator 1 view .LVU682
 2356 006c 000040E3 		movt	r0, #:upper16:.LC0
 2357 0070 FEFFFFEB 		bl	R_OS_AssertCalled
 2358              	.LVL306:
 2359 0074 E6FFFFEA 		b	.L172
 2360              	.LVL307:
 2361              	.L174:
1091:../src/FreeRTOS/stream_buffer.c ****         }
 2362              		.loc 1 1091 21 view .LVU683
 2363 0078 0040A0E3 		mov	r4, #0
 2364              	.LVL308:
1091:../src/FreeRTOS/stream_buffer.c ****         }
 2365              		.loc 1 1091 21 view .LVU684
 2366 007c F3FFFFEA 		b	.L173
 2367              		.cfi_endproc
 2368              	.LFE15:
 2370              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 2371              		.align	2
 2372              		.global	xStreamBufferReceiveCompletedFromISR
 2373              		.syntax unified
 2374              		.arm
 2375              		.fpu neon
 2377              	xStreamBufferReceiveCompletedFromISR:
 2378              	.LVL309:
 2379              	.LFB16:
1102:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2380              		.loc 1 1102 1 is_stmt 1 view -0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 0
 2383              		@ frame_needed = 0, uses_anonymous_args = 0
1102:../src/FreeRTOS/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2384              		.loc 1 1102 1 is_stmt 0 view .LVU686
 2385 0000 70402DE9 		push	{r4, r5, r6, lr}
 2386              		.cfi_def_cfa_offset 16
 2387              		.cfi_offset 4, -16
 2388              		.cfi_offset 5, -12
 2389              		.cfi_offset 6, -8
 2390              		.cfi_offset 14, -4
 2391 0004 08D04DE2 		sub	sp, sp, #8
 2392              		.cfi_def_cfa_offset 24
 2393 0008 0160A0E1 		mov	r6, r1
1103:../src/FreeRTOS/stream_buffer.c ****     BaseType_t xReturn;
 2394              		.loc 1 1103 5 is_stmt 1 view .LVU687
 2395              	.LVL310:
1104:../src/FreeRTOS/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
 2396              		.loc 1 1104 5 view .LVU688
1105:../src/FreeRTOS/stream_buffer.c **** 
 2397              		.loc 1 1105 5 view .LVU689
1107:../src/FreeRTOS/stream_buffer.c **** 
 2398              		.loc 1 1107 5 view .LVU690
 2399 000c 004050E2 		subs	r4, r0, #0
 2400 0010 1300000A 		beq	.L182
 2401              	.LVL311:
 2402              	.L178:
1107:../src/FreeRTOS/stream_buffer.c **** 
 2403              		.loc 1 1107 35 discriminator 3 view .LVU691
1109:../src/FreeRTOS/stream_buffer.c ****     {
 2404              		.loc 1 1109 5 discriminator 3 view .LVU692
1109:../src/FreeRTOS/stream_buffer.c ****     {
 2405              		.loc 1 1109 46 is_stmt 0 discriminator 3 view .LVU693
 2406 0014 FEFFFFEB 		bl	ulPortSetInterruptMask
 2407              	.LVL312:
 2408 0018 0050A0E1 		mov	r5, r0
 2409              	.LVL313:
1111:../src/FreeRTOS/stream_buffer.c ****         {
 2410              		.loc 1 1111 9 is_stmt 1 discriminator 3 view .LVU694
1111:../src/FreeRTOS/stream_buffer.c ****         {
 2411              		.loc 1 1111 31 is_stmt 0 discriminator 3 view .LVU695
 2412 001c 143094E5 		ldr	r3, [r4, #20]
1111:../src/FreeRTOS/stream_buffer.c ****         {
 2413              		.loc 1 1111 11 discriminator 3 view .LVU696
 2414 0020 000053E3 		cmp	r3, #0
 2415 0024 1300000A 		beq	.L180
1113:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2416              		.loc 1 1113 13 is_stmt 1 view .LVU697
1113:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2417              		.loc 1 1113 22 is_stmt 0 view .LVU698
 2418 0028 140094E5 		ldr	r0, [r4, #20]
 2419              	.LVL314:
1113:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2420              		.loc 1 1113 22 view .LVU699
 2421 002c 04608DE5 		str	r6, [sp, #4]
 2422 0030 0060A0E3 		mov	r6, #0
 2423              	.LVL315:
1113:../src/FreeRTOS/stream_buffer.c ****                                          ( uint32_t ) 0,
 2424              		.loc 1 1113 22 view .LVU700
 2425 0034 00608DE5 		str	r6, [sp]
 2426 0038 0630A0E1 		mov	r3, r6
 2427 003c 0620A0E1 		mov	r2, r6
 2428 0040 0610A0E1 		mov	r1, r6
 2429 0044 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 2430              	.LVL316:
1117:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 2431              		.loc 1 1117 13 is_stmt 1 view .LVU701
1117:../src/FreeRTOS/stream_buffer.c ****             xReturn = pdTRUE;
 2432              		.loc 1 1117 52 is_stmt 0 view .LVU702
 2433 0048 146084E5 		str	r6, [r4, #20]
1118:../src/FreeRTOS/stream_buffer.c ****         }
 2434              		.loc 1 1118 13 is_stmt 1 view .LVU703
 2435              	.LVL317:
1118:../src/FreeRTOS/stream_buffer.c ****         }
 2436              		.loc 1 1118 21 is_stmt 0 view .LVU704
 2437 004c 0140A0E3 		mov	r4, #1
 2438              	.LVL318:
 2439              	.L179:
1125:../src/FreeRTOS/stream_buffer.c **** 
 2440              		.loc 1 1125 5 is_stmt 1 view .LVU705
 2441 0050 0500A0E1 		mov	r0, r5
 2442 0054 FEFFFFEB 		bl	vPortClearInterruptMask
 2443              	.LVL319:
1127:../src/FreeRTOS/stream_buffer.c **** }
 2444              		.loc 1 1127 5 view .LVU706
1128:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
 2445              		.loc 1 1128 1 is_stmt 0 view .LVU707
 2446 0058 0400A0E1 		mov	r0, r4
 2447 005c 08D08DE2 		add	sp, sp, #8
 2448              		.cfi_remember_state
 2449              		.cfi_def_cfa_offset 16
 2450              		@ sp needed
 2451 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 2452              	.LVL320:
 2453              	.L182:
 2454              		.cfi_restore_state
1107:../src/FreeRTOS/stream_buffer.c **** 
 2455              		.loc 1 1107 5 is_stmt 1 discriminator 1 view .LVU708
 2456 0064 531400E3 		movw	r1, #1107
 2457              	.LVL321:
1107:../src/FreeRTOS/stream_buffer.c **** 
 2458              		.loc 1 1107 5 is_stmt 0 discriminator 1 view .LVU709
 2459 0068 000000E3 		movw	r0, #:lower16:.LC0
 2460              	.LVL322:
1107:../src/FreeRTOS/stream_buffer.c **** 
 2461              		.loc 1 1107 5 discriminator 1 view .LVU710
 2462 006c 000040E3 		movt	r0, #:upper16:.LC0
 2463 0070 FEFFFFEB 		bl	R_OS_AssertCalled
 2464              	.LVL323:
 2465 0074 E6FFFFEA 		b	.L178
 2466              	.LVL324:
 2467              	.L180:
1122:../src/FreeRTOS/stream_buffer.c ****         }
 2468              		.loc 1 1122 21 view .LVU711
 2469 0078 0040A0E3 		mov	r4, #0
 2470              	.LVL325:
1122:../src/FreeRTOS/stream_buffer.c ****         }
 2471              		.loc 1 1122 21 view .LVU712
 2472 007c F3FFFFEA 		b	.L179
 2473              		.cfi_endproc
 2474              	.LFE16:
 2476              		.section	.text.uxStreamBufferGetStreamBufferNumber,"ax",%progbits
 2477              		.align	2
 2478              		.global	uxStreamBufferGetStreamBufferNumber
 2479              		.syntax unified
 2480              		.arm
 2481              		.fpu neon
 2483              	uxStreamBufferGetStreamBufferNumber:
 2484              	.LVL326:
 2485              	.LFB21:
1284:../src/FreeRTOS/stream_buffer.c **** 
1285:../src/FreeRTOS/stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1286:../src/FreeRTOS/stream_buffer.c **** 
1287:../src/FreeRTOS/stream_buffer.c ****     UBaseType_t uxStreamBufferGetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer )
1288:../src/FreeRTOS/stream_buffer.c ****     {
 2486              		.loc 1 1288 5 is_stmt 1 view -0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
1289:../src/FreeRTOS/stream_buffer.c ****         return xStreamBuffer->uxStreamBufferNumber;
 2491              		.loc 1 1289 9 view .LVU714
1290:../src/FreeRTOS/stream_buffer.c ****     }
 2492              		.loc 1 1290 5 is_stmt 0 view .LVU715
 2493 0000 200090E5 		ldr	r0, [r0, #32]
 2494              	.LVL327:
 2495              		.loc 1 1290 5 view .LVU716
 2496 0004 1EFF2FE1 		bx	lr
 2497              		.cfi_endproc
 2498              	.LFE21:
 2500              		.section	.text.vStreamBufferSetStreamBufferNumber,"ax",%progbits
 2501              		.align	2
 2502              		.global	vStreamBufferSetStreamBufferNumber
 2503              		.syntax unified
 2504              		.arm
 2505              		.fpu neon
 2507              	vStreamBufferSetStreamBufferNumber:
 2508              	.LVL328:
 2509              	.LFB22:
1291:../src/FreeRTOS/stream_buffer.c **** 
1292:../src/FreeRTOS/stream_buffer.c **** #endif /* configUSE_TRACE_FACILITY */
1293:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1294:../src/FreeRTOS/stream_buffer.c **** 
1295:../src/FreeRTOS/stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1296:../src/FreeRTOS/stream_buffer.c **** 
1297:../src/FreeRTOS/stream_buffer.c ****     void vStreamBufferSetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer,
1298:../src/FreeRTOS/stream_buffer.c ****                                              UBaseType_t uxStreamBufferNumber )
1299:../src/FreeRTOS/stream_buffer.c ****     {
 2510              		.loc 1 1299 5 is_stmt 1 view -0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 0
 2513              		@ frame_needed = 0, uses_anonymous_args = 0
 2514              		@ link register save eliminated.
1300:../src/FreeRTOS/stream_buffer.c ****         xStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 2515              		.loc 1 1300 9 view .LVU718
 2516              		.loc 1 1300 45 is_stmt 0 view .LVU719
 2517 0000 201080E5 		str	r1, [r0, #32]
1301:../src/FreeRTOS/stream_buffer.c ****     }
 2518              		.loc 1 1301 5 view .LVU720
 2519 0004 1EFF2FE1 		bx	lr
 2520              		.cfi_endproc
 2521              	.LFE22:
 2523              		.section	.text.ucStreamBufferGetStreamBufferType,"ax",%progbits
 2524              		.align	2
 2525              		.global	ucStreamBufferGetStreamBufferType
 2526              		.syntax unified
 2527              		.arm
 2528              		.fpu neon
 2530              	ucStreamBufferGetStreamBufferType:
 2531              	.LVL329:
 2532              	.LFB23:
1302:../src/FreeRTOS/stream_buffer.c **** 
1303:../src/FreeRTOS/stream_buffer.c **** #endif /* configUSE_TRACE_FACILITY */
1304:../src/FreeRTOS/stream_buffer.c **** /*-----------------------------------------------------------*/
1305:../src/FreeRTOS/stream_buffer.c **** 
1306:../src/FreeRTOS/stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1307:../src/FreeRTOS/stream_buffer.c **** 
1308:../src/FreeRTOS/stream_buffer.c ****     uint8_t ucStreamBufferGetStreamBufferType( StreamBufferHandle_t xStreamBuffer )
1309:../src/FreeRTOS/stream_buffer.c ****     {
 2533              		.loc 1 1309 5 is_stmt 1 view -0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 2537              		@ link register save eliminated.
1310:../src/FreeRTOS/stream_buffer.c ****         return( xStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER );
 2538              		.loc 1 1310 9 view .LVU722
 2539              		.loc 1 1310 30 is_stmt 0 view .LVU723
 2540 0000 1C00D0E5 		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 2541              	.LVL330:
1311:../src/FreeRTOS/stream_buffer.c ****     }
 2542              		.loc 1 1311 5 view .LVU724
 2543 0004 010000E2 		and	r0, r0, #1
 2544 0008 1EFF2FE1 		bx	lr
 2545              		.cfi_endproc
 2546              	.LFE23:
 2548              		.text
 2549              	.Letext0:
 2550              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2551              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2552              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2553              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2554              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2555              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2556              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2557              		.file 9 "C:\\Users\\ryota\\e2_studio\\workspace\\rza2m_ssif_sample_freertos_gcc\\src\\FreeRTOS\\po
 2558              		.file 10 "C:\\Users\\ryota\\e2_studio\\workspace\\rza2m_ssif_sample_freertos_gcc\\src\\FreeRTOS\\i
 2559              		.file 11 "C:\\Users\\ryota\\e2_studio\\workspace\\rza2m_ssif_sample_freertos_gcc\\src\\FreeRTOS\\i
 2560              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 2561              		.file 13 "C:\\Users\\ryota\\e2_studio\\workspace\\rza2m_ssif_sample_freertos_gcc\\src\\config_file
 2562              		.file 14 "<built-in>"
 2563              		.file 15 "C:\\Users\\ryota\\e2_studio\\workspace\\rza2m_ssif_sample_freertos_gcc\\src\\FreeRTOS\\i
DEFINED SYMBOLS
                            *ABS*:00000000 stream_buffer.c
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:17     .text.prvBytesInBuffer:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:25     .text.prvBytesInBuffer:00000000 prvBytesInBuffer
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:66     .rodata.prvInitialiseNewStreamBuffer.str1.4:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:67     .rodata.prvInitialiseNewStreamBuffer.str1.4:00000000 .LC0
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:70     .text.prvInitialiseNewStreamBuffer:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:75     .text.prvInitialiseNewStreamBuffer:00000000 prvInitialiseNewStreamBuffer
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:145    .text.prvWriteBytesToBuffer:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:150    .text.prvWriteBytesToBuffer:00000000 prvWriteBytesToBuffer
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:281    .text.prvWriteMessageToBuffer:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:286    .text.prvWriteMessageToBuffer:00000000 prvWriteMessageToBuffer
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:380    .text.prvReadBytesFromBuffer:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:385    .text.prvReadBytesFromBuffer:00000000 prvReadBytesFromBuffer
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:527    .text.prvReadMessageFromBuffer:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:532    .text.prvReadMessageFromBuffer:00000000 prvReadMessageFromBuffer
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:628    .text.xStreamBufferGenericCreate:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:634    .text.xStreamBufferGenericCreate:00000000 xStreamBufferGenericCreate
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:773    .text.vStreamBufferDelete:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:779    .text.vStreamBufferDelete:00000000 vStreamBufferDelete
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:836    .text.xStreamBufferReset:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:842    .text.xStreamBufferReset:00000000 xStreamBufferReset
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:946    .text.xStreamBufferSetTriggerLevel:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:952    .text.xStreamBufferSetTriggerLevel:00000000 xStreamBufferSetTriggerLevel
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1021   .text.xStreamBufferSpacesAvailable:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1027   .text.xStreamBufferSpacesAvailable:00000000 xStreamBufferSpacesAvailable
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1093   .text.xStreamBufferBytesAvailable:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1099   .text.xStreamBufferBytesAvailable:00000000 xStreamBufferBytesAvailable
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1143   .text.xStreamBufferSend:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1149   .text.xStreamBufferSend:00000000 xStreamBufferSend
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1444   .text.xStreamBufferSendFromISR:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1450   .text.xStreamBufferSendFromISR:00000000 xStreamBufferSendFromISR
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1614   .text.xStreamBufferReceive:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1620   .text.xStreamBufferReceive:00000000 xStreamBufferReceive
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1851   .text.xStreamBufferNextMessageLengthBytes:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1857   .text.xStreamBufferNextMessageLengthBytes:00000000 xStreamBufferNextMessageLengthBytes
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1963   .text.xStreamBufferReceiveFromISR:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:1969   .text.xStreamBufferReceiveFromISR:00000000 xStreamBufferReceiveFromISR
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2123   .text.xStreamBufferIsEmpty:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2129   .text.xStreamBufferIsEmpty:00000000 xStreamBufferIsEmpty
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2187   .text.xStreamBufferIsFull:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2193   .text.xStreamBufferIsFull:00000000 xStreamBufferIsFull
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2265   .text.xStreamBufferSendCompletedFromISR:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2271   .text.xStreamBufferSendCompletedFromISR:00000000 xStreamBufferSendCompletedFromISR
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2371   .text.xStreamBufferReceiveCompletedFromISR:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2377   .text.xStreamBufferReceiveCompletedFromISR:00000000 xStreamBufferReceiveCompletedFromISR
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2477   .text.uxStreamBufferGetStreamBufferNumber:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2483   .text.uxStreamBufferGetStreamBufferNumber:00000000 uxStreamBufferGetStreamBufferNumber
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2501   .text.vStreamBufferSetStreamBufferNumber:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2507   .text.vStreamBufferSetStreamBufferNumber:00000000 vStreamBufferSetStreamBufferNumber
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2524   .text.ucStreamBufferGetStreamBufferType:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckWXyYf.s:2530   .text.ucStreamBufferGetStreamBufferType:00000000 ucStreamBufferGetStreamBufferType
                           .group:00000000 wm4.0.3d5c910ebb40df6df78b28e37cd67f3d
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.3f06799abf5dd88bdddee084775a1223
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.r_task_priority.h.26.416bb98a222bf391200df359bd0318d1
                           .group:00000000 wm4.FreeRTOSConfig.h.79.b5458a5c31689ea246b5d3a5f655ce5b
                           .group:00000000 wm4.projdefs.h.28.d6a7c9061b707820f2fcf4c2ff5d9f24
                           .group:00000000 wm4.math.h.13.97100c05caf9f40dd9f5a3cda48ccc01
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.portmacro.h.32.440d21c040186908c7273660706c6bca
                           .group:00000000 wm4.portable.h.63.e9cc508c3850f44ce542149380c67812
                           .group:00000000 wm4.mpu_wrappers.h.28.768974478c42e424045182d5a8740d87
                           .group:00000000 wm4.FreeRTOS.h.67.5b4462ac037a881bffd21a8fce4c91ce
                           .group:00000000 wm4.list.h.57.02ec67e07eacffe5ca7cfb7326896236
                           .group:00000000 wm4.task.h.47.5632d4e651ed85e40d7d5c5d13006d85
                           .group:00000000 wm4.stream_buffer.h.51.c86ec0f31498dd4967228969a7042057

UNDEFINED SYMBOLS
memset
R_OS_AssertCalled
memcpy
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
vTaskSetTimeOutState
xTaskGetCurrentTaskHandle
xTaskGenericNotifyWait
xTaskCheckForTimeOut
xTaskGenericNotifyStateClear
vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
ulPortSetInterruptMask
xTaskGenericNotifyFromISR
vPortClearInterruptMask
