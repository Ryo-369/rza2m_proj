   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"rza_io_regrw.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.RZA_IO_RegWrite_8,"ax",%progbits
  17              		.align	2
  18              		.global	RZA_IO_RegWrite_8
  19              		.arch armv7-a
  20              		.arch_extension mp
  21              		.arch_extension sec
  22              		.syntax unified
  23              		.arm
  24              		.fpu neon
  26              	RZA_IO_RegWrite_8:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "../generate/system/rza_io_regrw.c"
   1:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
   2:../generate/system/rza_io_regrw.c ****  * DISCLAIMER
   3:../generate/system/rza_io_regrw.c ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:../generate/system/rza_io_regrw.c ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:../generate/system/rza_io_regrw.c ****  * applicable laws, including copyright laws.
   6:../generate/system/rza_io_regrw.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../generate/system/rza_io_regrw.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:../generate/system/rza_io_regrw.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:../generate/system/rza_io_regrw.c ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:../generate/system/rza_io_regrw.c ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:../generate/system/rza_io_regrw.c ****  * THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DA
  12:../generate/system/rza_io_regrw.c ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:../generate/system/rza_io_regrw.c ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:../generate/system/rza_io_regrw.c ****  * following link:
  15:../generate/system/rza_io_regrw.c ****  * http://www.renesas.com/disclaimer
  16:../generate/system/rza_io_regrw.c ****  *
  17:../generate/system/rza_io_regrw.c ****  * Copyright (C) 2018 Renesas Electronics Corporation. All rights reserved.
  18:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  19:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  20:../generate/system/rza_io_regrw.c ****  * File Name   : rza_io_regrw.c
  21:../generate/system/rza_io_regrw.c ****  * Description : Low level register read/write
  22:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  23:../generate/system/rza_io_regrw.c **** 
  24:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  25:../generate/system/rza_io_regrw.c ****  Includes   <System Includes> , "Project Includes"
  26:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  27:../generate/system/rza_io_regrw.c **** #include "r_typedefs.h"
  28:../generate/system/rza_io_regrw.c **** #include "rza_io_regrw.h"
  29:../generate/system/rza_io_regrw.c **** 
  30:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  31:../generate/system/rza_io_regrw.c ****  Private (static) variables and functions
  32:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  33:../generate/system/rza_io_regrw.c **** 
  34:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  35:../generate/system/rza_io_regrw.c ****  * Function Name: RZA_IO_RegWrite_8
  36:../generate/system/rza_io_regrw.c ****  * Description  : IO register 8-bit write
  37:../generate/system/rza_io_regrw.c ****  * Arguments    : volatile uint8_t * ioreg : IO register for writing
  38:../generate/system/rza_io_regrw.c ****  *              :                          : Use register definition name of the iodefine.h
  39:../generate/system/rza_io_regrw.c ****  *              : uint8_t write_value      : Write value for the IO register
  40:../generate/system/rza_io_regrw.c ****  *              : uint8_t shift            : The number of left shifts to the target bit
  41:../generate/system/rza_io_regrw.c ****  *              : uint32_t mask            : Mask value for the IO register (Target bit : "1")
  42:../generate/system/rza_io_regrw.c ****  * Return Value : None
  43:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  44:../generate/system/rza_io_regrw.c **** void RZA_IO_RegWrite_8(volatile uint8_t * ioreg, uint8_t write_value, uint8_t shift, uint32_t mask)
  45:../generate/system/rza_io_regrw.c **** {
  30              		.loc 1 45 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  46:../generate/system/rza_io_regrw.c ****     uint8_t reg_value;
  35              		.loc 1 46 5 view .LVU1
  47:../generate/system/rza_io_regrw.c **** 
  48:../generate/system/rza_io_regrw.c ****     if (IOREG_NONMASK_ACCESS != mask)
  36              		.loc 1 48 5 view .LVU2
  37              		.loc 1 48 8 is_stmt 0 view .LVU3
  38 0000 010073E3 		cmn	r3, #1
  39 0004 0400000A 		beq	.L2
  49:../generate/system/rza_io_regrw.c ****     {
  50:../generate/system/rza_io_regrw.c ****         /* Read from register */
  51:../generate/system/rza_io_regrw.c ****         reg_value = *ioreg;
  40              		.loc 1 51 9 is_stmt 1 view .LVU4
  41              		.loc 1 51 19 is_stmt 0 view .LVU5
  42 0008 00C0D0E5 		ldrb	ip, [r0]	@ zero_extendqisi2
  43              	.LVL1:
  52:../generate/system/rza_io_regrw.c **** 
  53:../generate/system/rza_io_regrw.c ****         /* Modify value */
  54:../generate/system/rza_io_regrw.c ****         reg_value = (uint8_t)((reg_value & (~mask)) | (uint8_t)(write_value << shift));
  44              		.loc 1 54 9 is_stmt 1 view .LVU6
  45              		.loc 1 54 42 is_stmt 0 view .LVU7
  46 000c 0330CCE1 		bic	r3, ip, r3
  47              	.LVL2:
  48              		.loc 1 54 77 view .LVU8
  49 0010 1112A0E1 		lsl	r1, r1, r2
  50              	.LVL3:
  51              		.loc 1 54 55 view .LVU9
  52 0014 7110EFE6 		uxtb	r1, r1
  53              		.loc 1 54 19 view .LVU10
  54 0018 011083E1 		orr	r1, r3, r1
  55              	.LVL4:
  56              	.L2:
  55:../generate/system/rza_io_regrw.c ****     }
  56:../generate/system/rza_io_regrw.c ****     else
  57:../generate/system/rza_io_regrw.c ****     {
  58:../generate/system/rza_io_regrw.c ****         reg_value = write_value;
  59:../generate/system/rza_io_regrw.c ****     }
  60:../generate/system/rza_io_regrw.c **** 
  61:../generate/system/rza_io_regrw.c ****     /* Write to register */
  62:../generate/system/rza_io_regrw.c ****     *ioreg = reg_value;
  57              		.loc 1 62 5 is_stmt 1 view .LVU11
  58              		.loc 1 62 12 is_stmt 0 view .LVU12
  59 001c 0010C0E5 		strb	r1, [r0]
  63:../generate/system/rza_io_regrw.c **** }
  60              		.loc 1 63 1 view .LVU13
  61 0020 1EFF2FE1 		bx	lr
  62              		.cfi_endproc
  63              	.LFE0:
  65              		.section	.text.RZA_IO_RegWrite_16,"ax",%progbits
  66              		.align	2
  67              		.global	RZA_IO_RegWrite_16
  68              		.syntax unified
  69              		.arm
  70              		.fpu neon
  72              	RZA_IO_RegWrite_16:
  73              	.LVL5:
  74              	.LFB1:
  64:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  65:../generate/system/rza_io_regrw.c ****  * End of function RZA_IO_RegWrite_8
  66:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  67:../generate/system/rza_io_regrw.c **** 
  68:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  69:../generate/system/rza_io_regrw.c ****  * Function Name: RZA_IO_RegWrite_16
  70:../generate/system/rza_io_regrw.c ****  * Description  : IO register 16-bit write
  71:../generate/system/rza_io_regrw.c ****  * Arguments    : volatile uint16_t * ioreg : IO register for writing
  72:../generate/system/rza_io_regrw.c ****  *              :                           : Use register definition name of the iodefine.h
  73:../generate/system/rza_io_regrw.c ****  *              : uint16_t write_value      : Write value for the IO register
  74:../generate/system/rza_io_regrw.c ****  *              : uint16_t shift            : The number of left shifts to the target bit
  75:../generate/system/rza_io_regrw.c ****  *              : uint32_t mask             : Mask value for the IO register (Target bit : "1")
  76:../generate/system/rza_io_regrw.c ****  * Return Value : None
  77:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
  78:../generate/system/rza_io_regrw.c **** void RZA_IO_RegWrite_16(volatile uint16_t * ioreg, uint16_t write_value, uint16_t shift, uint32_t m
  79:../generate/system/rza_io_regrw.c **** {
  75              		.loc 1 79 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80:../generate/system/rza_io_regrw.c ****     uint16_t reg_value;
  80              		.loc 1 80 5 view .LVU15
  81:../generate/system/rza_io_regrw.c **** 
  82:../generate/system/rza_io_regrw.c ****     if (IOREG_NONMASK_ACCESS != mask)
  81              		.loc 1 82 5 view .LVU16
  82              		.loc 1 82 8 is_stmt 0 view .LVU17
  83 0000 010073E3 		cmn	r3, #1
  84 0004 0400000A 		beq	.L4
  83:../generate/system/rza_io_regrw.c ****     {
  84:../generate/system/rza_io_regrw.c ****         /* Read from register */
  85:../generate/system/rza_io_regrw.c ****         reg_value = *ioreg;
  85              		.loc 1 85 9 is_stmt 1 view .LVU18
  86              		.loc 1 85 19 is_stmt 0 view .LVU19
  87 0008 B0C0D0E1 		ldrh	ip, [r0]
  88              	.LVL6:
  86:../generate/system/rza_io_regrw.c **** 
  87:../generate/system/rza_io_regrw.c ****         /* Modify value */
  88:../generate/system/rza_io_regrw.c ****         reg_value = (uint16_t)((reg_value & (~mask)) | (uint16_t)(write_value << shift));
  89              		.loc 1 88 9 is_stmt 1 view .LVU20
  90              		.loc 1 88 43 is_stmt 0 view .LVU21
  91 000c 0330CCE1 		bic	r3, ip, r3
  92              	.LVL7:
  93              		.loc 1 88 79 view .LVU22
  94 0010 1112A0E1 		lsl	r1, r1, r2
  95              	.LVL8:
  96              		.loc 1 88 56 view .LVU23
  97 0014 7110FFE6 		uxth	r1, r1
  98              		.loc 1 88 19 view .LVU24
  99 0018 011083E1 		orr	r1, r3, r1
 100              	.LVL9:
 101              	.L4:
  89:../generate/system/rza_io_regrw.c ****     }
  90:../generate/system/rza_io_regrw.c ****     else
  91:../generate/system/rza_io_regrw.c ****     {
  92:../generate/system/rza_io_regrw.c ****         reg_value = write_value;
  93:../generate/system/rza_io_regrw.c ****     }
  94:../generate/system/rza_io_regrw.c **** 
  95:../generate/system/rza_io_regrw.c ****     /* Write to register */
  96:../generate/system/rza_io_regrw.c ****     *ioreg = reg_value;
 102              		.loc 1 96 5 is_stmt 1 view .LVU25
 103              		.loc 1 96 12 is_stmt 0 view .LVU26
 104 001c B010C0E1 		strh	r1, [r0]	@ movhi
  97:../generate/system/rza_io_regrw.c **** }
 105              		.loc 1 97 1 view .LVU27
 106 0020 1EFF2FE1 		bx	lr
 107              		.cfi_endproc
 108              	.LFE1:
 110              		.section	.text.RZA_IO_RegWrite_32,"ax",%progbits
 111              		.align	2
 112              		.global	RZA_IO_RegWrite_32
 113              		.syntax unified
 114              		.arm
 115              		.fpu neon
 117              	RZA_IO_RegWrite_32:
 118              	.LVL10:
 119              	.LFB2:
  98:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
  99:../generate/system/rza_io_regrw.c ****  * End of function RZA_IO_RegWrite_16
 100:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 101:../generate/system/rza_io_regrw.c **** 
 102:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 103:../generate/system/rza_io_regrw.c ****  * Function Name: RZA_IO_RegWrite_32
 104:../generate/system/rza_io_regrw.c ****  * Description  : IO register 32-bit write
 105:../generate/system/rza_io_regrw.c ****  * Arguments    : volatile uint32_t * ioreg : IO register for writing
 106:../generate/system/rza_io_regrw.c ****  *              :                           : Use register definition name of the iodefine.h
 107:../generate/system/rza_io_regrw.c ****  *              : uint32_t write_value      : Write value for the IO register
 108:../generate/system/rza_io_regrw.c ****  *              : uint32_t shift            : The number of left shifts to the target bit
 109:../generate/system/rza_io_regrw.c ****  *              : uint32_t mask             : Mask value for the IO register (Target bit : "1")
 110:../generate/system/rza_io_regrw.c ****  * Return Value : None
 111:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 112:../generate/system/rza_io_regrw.c **** void RZA_IO_RegWrite_32(volatile uint32_t * ioreg, uint32_t write_value, uint32_t shift, uint32_t m
 113:../generate/system/rza_io_regrw.c **** {
 120              		.loc 1 113 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 114:../generate/system/rza_io_regrw.c ****     uint32_t reg_value;
 125              		.loc 1 114 5 view .LVU29
 115:../generate/system/rza_io_regrw.c **** 
 116:../generate/system/rza_io_regrw.c ****     if (IOREG_NONMASK_ACCESS != mask)
 126              		.loc 1 116 5 view .LVU30
 127              		.loc 1 116 8 is_stmt 0 view .LVU31
 128 0000 010073E3 		cmn	r3, #1
 117:../generate/system/rza_io_regrw.c ****     {
 118:../generate/system/rza_io_regrw.c ****         /* Read from register */
 119:../generate/system/rza_io_regrw.c ****         reg_value = *ioreg;
 129              		.loc 1 119 9 is_stmt 1 view .LVU32
 130              		.loc 1 119 19 is_stmt 0 view .LVU33
 131 0004 00C09015 		ldrne	ip, [r0]
 132              	.LVL11:
 120:../generate/system/rza_io_regrw.c **** 
 121:../generate/system/rza_io_regrw.c ****         /* Modify value */
 122:../generate/system/rza_io_regrw.c ****         reg_value = (uint32_t)((reg_value & (~mask)) | (uint32_t)(write_value << shift));
 133              		.loc 1 122 9 is_stmt 1 view .LVU34
 134              		.loc 1 122 43 is_stmt 0 view .LVU35
 135 0008 0330CC11 		bicne	r3, ip, r3
 136              	.LVL12:
 137              		.loc 1 122 19 view .LVU36
 138 000c 11128311 		orrne	r1, r3, r1, lsl r2
 139              	.LVL13:
 140              	.L6:
 123:../generate/system/rza_io_regrw.c ****     }
 124:../generate/system/rza_io_regrw.c ****     else
 125:../generate/system/rza_io_regrw.c ****     {
 126:../generate/system/rza_io_regrw.c ****         reg_value = write_value;
 127:../generate/system/rza_io_regrw.c ****     }
 128:../generate/system/rza_io_regrw.c **** 
 129:../generate/system/rza_io_regrw.c ****     /* Write to register */
 130:../generate/system/rza_io_regrw.c ****     *ioreg = reg_value;
 141              		.loc 1 130 5 is_stmt 1 view .LVU37
 142              		.loc 1 130 12 is_stmt 0 view .LVU38
 143 0010 001080E5 		str	r1, [r0]
 131:../generate/system/rza_io_regrw.c **** }
 144              		.loc 1 131 1 view .LVU39
 145 0014 1EFF2FE1 		bx	lr
 146              		.cfi_endproc
 147              	.LFE2:
 149              		.section	.text.RZA_IO_RegRead_8,"ax",%progbits
 150              		.align	2
 151              		.global	RZA_IO_RegRead_8
 152              		.syntax unified
 153              		.arm
 154              		.fpu neon
 156              	RZA_IO_RegRead_8:
 157              	.LVL14:
 158              	.LFB3:
 132:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 133:../generate/system/rza_io_regrw.c ****  * End of function RZA_IO_RegWrite_32
 134:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 135:../generate/system/rza_io_regrw.c **** 
 136:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 137:../generate/system/rza_io_regrw.c ****  * Function Name: RZA_IO_RegRead_8
 138:../generate/system/rza_io_regrw.c ****  * Description  : IO register 8-bit read
 139:../generate/system/rza_io_regrw.c ****  * Arguments    : volatile uint8_t * ioreg : IO register for reading
 140:../generate/system/rza_io_regrw.c ****  *              :                          : Use register definition name of the iodefine.h
 141:../generate/system/rza_io_regrw.c ****  *              : uint8_t shift            : The number of right shifts to the target bit
 142:../generate/system/rza_io_regrw.c ****  *              : uint32_t mask            : Mask bit for the IO register (Target bit: "1")
 143:../generate/system/rza_io_regrw.c ****  * Return Value : uint8_t : Value of the obtained target bit
 144:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 145:../generate/system/rza_io_regrw.c **** uint8_t RZA_IO_RegRead_8(volatile uint8_t * ioreg, uint8_t shift, uint32_t mask)
 146:../generate/system/rza_io_regrw.c **** {
 159              		.loc 1 146 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 147:../generate/system/rza_io_regrw.c ****     uint8_t reg_value;
 164              		.loc 1 147 5 view .LVU41
 148:../generate/system/rza_io_regrw.c **** 
 149:../generate/system/rza_io_regrw.c ****     /* Read from register */
 150:../generate/system/rza_io_regrw.c ****     reg_value = *ioreg;
 165              		.loc 1 150 5 view .LVU42
 166              		.loc 1 150 15 is_stmt 0 view .LVU43
 167 0000 0000D0E5 		ldrb	r0, [r0]	@ zero_extendqisi2
 168              	.LVL15:
 169              		.loc 1 150 15 view .LVU44
 170 0004 7000EFE6 		uxtb	r0, r0
 171              	.LVL16:
 151:../generate/system/rza_io_regrw.c **** 
 152:../generate/system/rza_io_regrw.c ****     if (IOREG_NONMASK_ACCESS != mask)
 172              		.loc 1 152 5 is_stmt 1 view .LVU45
 173              		.loc 1 152 8 is_stmt 0 view .LVU46
 174 0008 010072E3 		cmn	r2, #1
 175 000c 1EFF2F01 		bxeq	lr
 153:../generate/system/rza_io_regrw.c ****     {
 154:../generate/system/rza_io_regrw.c ****         /* Clear other bit and Bit shift */
 155:../generate/system/rza_io_regrw.c ****         reg_value = (uint8_t)((reg_value & mask) >> shift);
 176              		.loc 1 155 9 is_stmt 1 view .LVU47
 177              		.loc 1 155 42 is_stmt 0 view .LVU48
 178 0010 020000E0 		and	r0, r0, r2
 179              	.LVL17:
 180              		.loc 1 155 50 view .LVU49
 181 0014 3001A0E1 		lsr	r0, r0, r1
 182              		.loc 1 155 19 view .LVU50
 183 0018 7000EFE6 		uxtb	r0, r0
 184              	.LVL18:
 156:../generate/system/rza_io_regrw.c ****     }
 157:../generate/system/rza_io_regrw.c **** 
 158:../generate/system/rza_io_regrw.c ****     return (reg_value);
 185              		.loc 1 158 5 is_stmt 1 view .LVU51
 159:../generate/system/rza_io_regrw.c **** }
 186              		.loc 1 159 1 is_stmt 0 view .LVU52
 187 001c 1EFF2FE1 		bx	lr
 188              		.cfi_endproc
 189              	.LFE3:
 191              		.section	.text.RZA_IO_RegRead_16,"ax",%progbits
 192              		.align	2
 193              		.global	RZA_IO_RegRead_16
 194              		.syntax unified
 195              		.arm
 196              		.fpu neon
 198              	RZA_IO_RegRead_16:
 199              	.LVL19:
 200              	.LFB4:
 160:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 161:../generate/system/rza_io_regrw.c ****  * End of function RZA_IO_RegRead_8
 162:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 163:../generate/system/rza_io_regrw.c **** 
 164:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 165:../generate/system/rza_io_regrw.c ****  * Function Name: RZA_IO_RegRead_16
 166:../generate/system/rza_io_regrw.c ****  * Description  : IO register 16-bit read
 167:../generate/system/rza_io_regrw.c ****  * Arguments    : volatile uint16_t * ioreg : IO register for reading
 168:../generate/system/rza_io_regrw.c ****  *              :                           : Use register definition name of the iodefine.h
 169:../generate/system/rza_io_regrw.c ****  *              : uint16_t shift            : The number of right shifts to the target bit
 170:../generate/system/rza_io_regrw.c ****  *              : uint32_t mask             : Mask bit for the IO register (Target bit: "1")
 171:../generate/system/rza_io_regrw.c ****  * Return Value : uint16_t : Value of the obtained target bit
 172:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 173:../generate/system/rza_io_regrw.c **** uint16_t RZA_IO_RegRead_16(volatile uint16_t * ioreg, uint16_t shift, uint32_t mask)
 174:../generate/system/rza_io_regrw.c **** {
 201              		.loc 1 174 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 175:../generate/system/rza_io_regrw.c ****     uint16_t reg_value;
 206              		.loc 1 175 5 view .LVU54
 176:../generate/system/rza_io_regrw.c **** 
 177:../generate/system/rza_io_regrw.c ****     /* Read from register */
 178:../generate/system/rza_io_regrw.c ****     reg_value = *ioreg;
 207              		.loc 1 178 5 view .LVU55
 208              		.loc 1 178 15 is_stmt 0 view .LVU56
 209 0000 B000D0E1 		ldrh	r0, [r0]
 210              	.LVL20:
 211              		.loc 1 178 15 view .LVU57
 212 0004 7000FFE6 		uxth	r0, r0
 213              	.LVL21:
 179:../generate/system/rza_io_regrw.c **** 
 180:../generate/system/rza_io_regrw.c ****     if (IOREG_NONMASK_ACCESS != mask)
 214              		.loc 1 180 5 is_stmt 1 view .LVU58
 215              		.loc 1 180 8 is_stmt 0 view .LVU59
 216 0008 010072E3 		cmn	r2, #1
 217 000c 1EFF2F01 		bxeq	lr
 181:../generate/system/rza_io_regrw.c ****     {
 182:../generate/system/rza_io_regrw.c ****         /* Clear other bit and Bit shift */
 183:../generate/system/rza_io_regrw.c ****         reg_value = (uint16_t)((reg_value & mask) >> shift);
 218              		.loc 1 183 9 is_stmt 1 view .LVU60
 219              		.loc 1 183 43 is_stmt 0 view .LVU61
 220 0010 020000E0 		and	r0, r0, r2
 221              	.LVL22:
 222              		.loc 1 183 51 view .LVU62
 223 0014 3001A0E1 		lsr	r0, r0, r1
 224              		.loc 1 183 19 view .LVU63
 225 0018 7000FFE6 		uxth	r0, r0
 226              	.LVL23:
 184:../generate/system/rza_io_regrw.c ****     }
 185:../generate/system/rza_io_regrw.c **** 
 186:../generate/system/rza_io_regrw.c ****     return (reg_value);
 227              		.loc 1 186 5 is_stmt 1 view .LVU64
 187:../generate/system/rza_io_regrw.c **** }
 228              		.loc 1 187 1 is_stmt 0 view .LVU65
 229 001c 1EFF2FE1 		bx	lr
 230              		.cfi_endproc
 231              	.LFE4:
 233              		.section	.text.RZA_IO_RegRead_32,"ax",%progbits
 234              		.align	2
 235              		.global	RZA_IO_RegRead_32
 236              		.syntax unified
 237              		.arm
 238              		.fpu neon
 240              	RZA_IO_RegRead_32:
 241              	.LVL24:
 242              	.LFB5:
 188:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 189:../generate/system/rza_io_regrw.c ****  * End of function RZA_IO_RegRead_16
 190:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 191:../generate/system/rza_io_regrw.c **** 
 192:../generate/system/rza_io_regrw.c **** /**************************************************************************************************
 193:../generate/system/rza_io_regrw.c ****  * Function Name: RZA_IO_RegRead_32
 194:../generate/system/rza_io_regrw.c ****  * Description  : IO register 32-bit read
 195:../generate/system/rza_io_regrw.c ****  * Arguments    : volatile uint32_t * ioreg : IO register for reading
 196:../generate/system/rza_io_regrw.c ****  *              :                           : Use register definition name of the iodefine.h
 197:../generate/system/rza_io_regrw.c ****  *              : uint32_t shift            : The number of right shifts to the target bit
 198:../generate/system/rza_io_regrw.c ****  *              : uint32_t mask             : Mask bit for the IO register (Target bit: "1")
 199:../generate/system/rza_io_regrw.c ****  * Return Value : uint32_t : Value of the obtained target bit
 200:../generate/system/rza_io_regrw.c ****  **************************************************************************************************
 201:../generate/system/rza_io_regrw.c **** uint32_t RZA_IO_RegRead_32(volatile uint32_t * ioreg, uint32_t shift, uint32_t mask)
 202:../generate/system/rza_io_regrw.c **** {
 243              		.loc 1 202 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 203:../generate/system/rza_io_regrw.c ****     uint32_t reg_value;
 248              		.loc 1 203 5 view .LVU67
 204:../generate/system/rza_io_regrw.c **** 
 205:../generate/system/rza_io_regrw.c ****     /* Read from register */
 206:../generate/system/rza_io_regrw.c ****     reg_value = *ioreg;
 249              		.loc 1 206 5 view .LVU68
 250              		.loc 1 206 15 is_stmt 0 view .LVU69
 251 0000 000090E5 		ldr	r0, [r0]
 252              	.LVL25:
 207:../generate/system/rza_io_regrw.c **** 
 208:../generate/system/rza_io_regrw.c ****     if (IOREG_NONMASK_ACCESS != mask)
 253              		.loc 1 208 5 is_stmt 1 view .LVU70
 254              		.loc 1 208 8 is_stmt 0 view .LVU71
 255 0004 010072E3 		cmn	r2, #1
 256 0008 1EFF2F01 		bxeq	lr
 209:../generate/system/rza_io_regrw.c ****     {
 210:../generate/system/rza_io_regrw.c ****         /* Clear other bit and Bit shift */
 211:../generate/system/rza_io_regrw.c ****         reg_value = (reg_value & mask) >> shift;
 257              		.loc 1 211 9 is_stmt 1 view .LVU72
 258              		.loc 1 211 32 is_stmt 0 view .LVU73
 259 000c 020000E0 		and	r0, r0, r2
 260              	.LVL26:
 261              		.loc 1 211 19 view .LVU74
 262 0010 3001A0E1 		lsr	r0, r0, r1
 263              	.LVL27:
 212:../generate/system/rza_io_regrw.c ****     }
 213:../generate/system/rza_io_regrw.c **** 
 214:../generate/system/rza_io_regrw.c ****     return (reg_value);
 264              		.loc 1 214 5 is_stmt 1 view .LVU75
 215:../generate/system/rza_io_regrw.c **** }
 265              		.loc 1 215 1 is_stmt 0 view .LVU76
 266 0014 1EFF2FE1 		bx	lr
 267              		.cfi_endproc
 268              	.LFE5:
 270              		.text
 271              	.Letext0:
 272              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 273              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 274              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 275              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 276              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 277              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 278              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
DEFINED SYMBOLS
                            *ABS*:00000000 rza_io_regrw.c
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:17     .text.RZA_IO_RegWrite_8:00000000 $a
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:26     .text.RZA_IO_RegWrite_8:00000000 RZA_IO_RegWrite_8
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:66     .text.RZA_IO_RegWrite_16:00000000 $a
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:72     .text.RZA_IO_RegWrite_16:00000000 RZA_IO_RegWrite_16
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:111    .text.RZA_IO_RegWrite_32:00000000 $a
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:117    .text.RZA_IO_RegWrite_32:00000000 RZA_IO_RegWrite_32
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:150    .text.RZA_IO_RegRead_8:00000000 $a
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:156    .text.RZA_IO_RegRead_8:00000000 RZA_IO_RegRead_8
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:192    .text.RZA_IO_RegRead_16:00000000 $a
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:198    .text.RZA_IO_RegRead_16:00000000 RZA_IO_RegRead_16
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:234    .text.RZA_IO_RegRead_32:00000000 $a
C:\Users\ryota\AppData\Local\Temp\ccS3WJvA.s:240    .text.RZA_IO_RegRead_32:00000000 RZA_IO_RegRead_32
                           .group:00000000 wm4.0.3d5c910ebb40df6df78b28e37cd67f3d
                           .group:00000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.3f06799abf5dd88bdddee084775a1223
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.math.h.13.97100c05caf9f40dd9f5a3cda48ccc01
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.rza_io_regrw.h.33.07c1ee176b41ade23637426c80e4b86a

NO UNDEFINED SYMBOLS
