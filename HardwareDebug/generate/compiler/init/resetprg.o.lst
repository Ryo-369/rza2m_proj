   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"resetprg.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.disable_rtc,"ax",%progbits
  17              		.align	2
  18              		.arch armv7-a
  19              		.arch_extension mp
  20              		.arch_extension sec
  21              		.syntax unified
  22              		.arm
  23              		.fpu neon
  25              	disable_rtc:
  26              	.LVL0:
  27              	.LFB4:
  28              		.file 1 "../generate/compiler/init/resetprg.c"
   1:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
   2:../generate/compiler/init/resetprg.c ****  * DISCLAIMER
   3:../generate/compiler/init/resetprg.c ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:../generate/compiler/init/resetprg.c ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:../generate/compiler/init/resetprg.c ****  * applicable laws, including copyright laws.
   6:../generate/compiler/init/resetprg.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../generate/compiler/init/resetprg.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:../generate/compiler/init/resetprg.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:../generate/compiler/init/resetprg.c ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:../generate/compiler/init/resetprg.c ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:../generate/compiler/init/resetprg.c ****  * THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DA
  12:../generate/compiler/init/resetprg.c ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:../generate/compiler/init/resetprg.c ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:../generate/compiler/init/resetprg.c ****  * following link:
  15:../generate/compiler/init/resetprg.c ****  * http://www.renesas.com/disclaimer
  16:../generate/compiler/init/resetprg.c ****  *
  17:../generate/compiler/init/resetprg.c ****  * Copyright (C) 2018 Renesas Electronics Corporation. All rights reserved.
  18:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  19:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
  20:../generate/compiler/init/resetprg.c ****  * File Name    : resetprg.c
  21:../generate/compiler/init/resetprg.c ****  * Device(s)    : RZ/A2M
  22:../generate/compiler/init/resetprg.c ****  * Tool-Chain   : e2Studio Ver 7.5.0
  23:../generate/compiler/init/resetprg.c ****  *              : GNU Arm Embedded Toolchain 6-2017-q2-update
  24:../generate/compiler/init/resetprg.c ****  * OS           : None
  25:../generate/compiler/init/resetprg.c ****  * H/W Platform : RZ/A2M Evaluation Board
  26:../generate/compiler/init/resetprg.c ****  * Description  : RZ/A2M Sample Program - C library entry point
  27:../generate/compiler/init/resetprg.c ****  *              : Variants of this file must be created for each compiler
  28:../generate/compiler/init/resetprg.c ****  * Operation    :
  29:../generate/compiler/init/resetprg.c ****  * Limitations  :
  30:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  31:../generate/compiler/init/resetprg.c **** 
  32:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
  33:../generate/compiler/init/resetprg.c ****  Includes   <System Includes> , "Project Includes"
  34:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  35:../generate/compiler/init/resetprg.c **** #include "r_typedefs.h"
  36:../generate/compiler/init/resetprg.c **** #include "compiler_settings.h"
  37:../generate/compiler/init/resetprg.c **** #include "r_compiler_abstraction_api.h"
  38:../generate/compiler/init/resetprg.c **** #include "r_cache_lld_rza2m.h"
  39:../generate/compiler/init/resetprg.c **** #include "r_stb_lld_rza2m.h"
  40:../generate/compiler/init/resetprg.c **** #include "r_intc_drv_api.h"
  41:../generate/compiler/init/resetprg.c **** #include "iodefine.h"
  42:../generate/compiler/init/resetprg.c **** #include "iobitmask.h"
  43:../generate/compiler/init/resetprg.c **** #include "rza_io_regrw.h"
  44:../generate/compiler/init/resetprg.c **** #include "r_startup_config.h"
  45:../generate/compiler/init/resetprg.c **** #include "resetprg.h"
  46:../generate/compiler/init/resetprg.c **** 
  47:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
  48:../generate/compiler/init/resetprg.c ****  Macro definitions
  49:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  50:../generate/compiler/init/resetprg.c **** #define R_PRV_RTC_COUNT (2)
  51:../generate/compiler/init/resetprg.c **** #define R_PRV_USB_COUNT (2)
  52:../generate/compiler/init/resetprg.c **** 
  53:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
  54:../generate/compiler/init/resetprg.c ****  Exported global variables
  55:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  56:../generate/compiler/init/resetprg.c **** extern uint32_t __vector_mirror_table_base;
  57:../generate/compiler/init/resetprg.c **** 
  58:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
  59:../generate/compiler/init/resetprg.c ****  Private (static) variables and functions
  60:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  61:../generate/compiler/init/resetprg.c **** static void disable_rtc(uint32_t ch);
  62:../generate/compiler/init/resetprg.c **** static void disable_usb(uint32_t ch);
  63:../generate/compiler/init/resetprg.c **** 
  64:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
  65:../generate/compiler/init/resetprg.c ****  * Function Name: resetprg
  66:../generate/compiler/init/resetprg.c ****  * Description  : Program entry point after basic peripheral init.
  67:../generate/compiler/init/resetprg.c ****  * Arguments    : none
  68:../generate/compiler/init/resetprg.c ****  * Return Value : none
  69:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
  70:../generate/compiler/init/resetprg.c **** void resetprg (void)
  71:../generate/compiler/init/resetprg.c **** {
  72:../generate/compiler/init/resetprg.c ****     /* Disable RTC if macro defined as 1 */
  73:../generate/compiler/init/resetprg.c **** #if defined(STARTUP_CFG_DISABLE_RTC0) && (STARTUP_CFG_DISABLE_RTC0==1)
  74:../generate/compiler/init/resetprg.c ****     disable_rtc(0);
  75:../generate/compiler/init/resetprg.c **** #endif
  76:../generate/compiler/init/resetprg.c **** #if defined(STARTUP_CFG_DISABLE_RTC1) && (STARTUP_CFG_DISABLE_RTC1==1)
  77:../generate/compiler/init/resetprg.c ****     disable_rtc(1);
  78:../generate/compiler/init/resetprg.c **** #endif
  79:../generate/compiler/init/resetprg.c **** 
  80:../generate/compiler/init/resetprg.c ****     /* Disable USB if macro defined as 1 */
  81:../generate/compiler/init/resetprg.c **** #if defined(STARTUP_CFG_DISABLE_USB0) && (STARTUP_CFG_DISABLE_USB0==1)
  82:../generate/compiler/init/resetprg.c ****     disable_usb(0);
  83:../generate/compiler/init/resetprg.c **** #endif
  84:../generate/compiler/init/resetprg.c **** #if defined(STARTUP_CFG_DISABLE_USB1) && (STARTUP_CFG_DISABLE_USB1==1)
  85:../generate/compiler/init/resetprg.c ****     disable_usb(1);
  86:../generate/compiler/init/resetprg.c **** #endif
  87:../generate/compiler/init/resetprg.c **** 
  88:../generate/compiler/init/resetprg.c ****     /*    Initialize INTC,
  89:../generate/compiler/init/resetprg.c ****      *    Setup GIC.
  90:../generate/compiler/init/resetprg.c ****      */
  91:../generate/compiler/init/resetprg.c ****     if (R_INTC_Init() != INTC_SUCCESS)
  92:../generate/compiler/init/resetprg.c ****     {
  93:../generate/compiler/init/resetprg.c ****         while (1)
  94:../generate/compiler/init/resetprg.c ****         {
  95:../generate/compiler/init/resetprg.c ****             /* Spin here forever.. */
  96:../generate/compiler/init/resetprg.c ****             R_COMPILER_Nop();
  97:../generate/compiler/init/resetprg.c ****         }
  98:../generate/compiler/init/resetprg.c ****     }
  99:../generate/compiler/init/resetprg.c **** 
 100:../generate/compiler/init/resetprg.c ****     /* Initial setting of the level 2 cache */
 101:../generate/compiler/init/resetprg.c ****     R_CACHE_L2Init();
 102:../generate/compiler/init/resetprg.c **** 
 103:../generate/compiler/init/resetprg.c ****     /* Initial setting of the level 1 cache */
 104:../generate/compiler/init/resetprg.c ****     R_CACHE_L1Init();
 105:../generate/compiler/init/resetprg.c **** 
 106:../generate/compiler/init/resetprg.c ****     /* change VBAR to use internal RAM */
 107:../generate/compiler/init/resetprg.c ****     __set_vbar((uint32_t)&__vector_mirror_table_base);
 108:../generate/compiler/init/resetprg.c **** 
 109:../generate/compiler/init/resetprg.c ****     __enable_irq();
 110:../generate/compiler/init/resetprg.c ****     __enable_fiq();
 111:../generate/compiler/init/resetprg.c **** 
 112:../generate/compiler/init/resetprg.c ****     /* call user program */
 113:../generate/compiler/init/resetprg.c ****     main();
 114:../generate/compiler/init/resetprg.c **** 
 115:../generate/compiler/init/resetprg.c ****     /* Stops program from running off */
 116:../generate/compiler/init/resetprg.c ****     while (1)
 117:../generate/compiler/init/resetprg.c ****     {
 118:../generate/compiler/init/resetprg.c ****         /* Spin here forever.. */
 119:../generate/compiler/init/resetprg.c ****         R_COMPILER_Nop();
 120:../generate/compiler/init/resetprg.c ****     }
 121:../generate/compiler/init/resetprg.c **** }
 122:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
 123:../generate/compiler/init/resetprg.c ****  End of function resetprg
 124:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
 125:../generate/compiler/init/resetprg.c **** 
 126:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
 127:../generate/compiler/init/resetprg.c ****  * Function Name: disable_rtc
 128:../generate/compiler/init/resetprg.c ****  * Description  : disable RTC module (See HM 16.5.6 and 52.4.2)
 129:../generate/compiler/init/resetprg.c ****  * Arguments    : uint32_t ch : channel
 130:../generate/compiler/init/resetprg.c ****  * Return Value : none
 131:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
 132:../generate/compiler/init/resetprg.c **** static void disable_rtc(uint32_t ch)
 133:../generate/compiler/init/resetprg.c **** {
  29              		.loc 1 133 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 134:../generate/compiler/init/resetprg.c ****     uint8_t dummy8;
  33              		.loc 1 134 5 view .LVU1
 135:../generate/compiler/init/resetprg.c ****     uint32_t mask;
  34              		.loc 1 135 5 view .LVU2
 136:../generate/compiler/init/resetprg.c ****     uint8_t shift;
  35              		.loc 1 136 5 view .LVU3
 137:../generate/compiler/init/resetprg.c ****     static volatile struct st_rtc * const rtc[R_PRV_RTC_COUNT] =
  36              		.loc 1 137 5 view .LVU4
 138:../generate/compiler/init/resetprg.c ****     {
 139:../generate/compiler/init/resetprg.c ****         &RTC0, &RTC1
 140:../generate/compiler/init/resetprg.c ****     };
 141:../generate/compiler/init/resetprg.c ****     static const uint8_t mstp_mask[R_PRV_RTC_COUNT] =
  37              		.loc 1 141 5 view .LVU5
 142:../generate/compiler/init/resetprg.c ****     {
 143:../generate/compiler/init/resetprg.c ****         CPG_STBCR5_MSTP53, CPG_STBCR5_MSTP52
 144:../generate/compiler/init/resetprg.c ****     };
 145:../generate/compiler/init/resetprg.c ****     static const uint8_t mstp_shift[R_PRV_RTC_COUNT] =
  38              		.loc 1 145 5 view .LVU6
 146:../generate/compiler/init/resetprg.c ****     {
 147:../generate/compiler/init/resetprg.c ****         CPG_STBCR5_MSTP53_SHIFT, CPG_STBCR5_MSTP52_SHIFT
 148:../generate/compiler/init/resetprg.c ****     };
 149:../generate/compiler/init/resetprg.c ****     static const uint16_t rtcxtalsel_mask[R_PRV_RTC_COUNT] =
  39              		.loc 1 149 5 view .LVU7
 150:../generate/compiler/init/resetprg.c ****     {
 151:../generate/compiler/init/resetprg.c ****         PMG_RTCXTALSEL_RTC0XT, PMG_RTCXTALSEL_RTC1XT
 152:../generate/compiler/init/resetprg.c ****     };
 153:../generate/compiler/init/resetprg.c ****     static const uint8_t rtcxtalsel_shift[R_PRV_RTC_COUNT] =
  40              		.loc 1 153 5 view .LVU8
 154:../generate/compiler/init/resetprg.c ****     {
 155:../generate/compiler/init/resetprg.c ****         PMG_RTCXTALSEL_RTC0XT_SHIFT, PMG_RTCXTALSEL_RTC1XT_SHIFT
 156:../generate/compiler/init/resetprg.c ****     };
 157:../generate/compiler/init/resetprg.c ****     static const e_stb_module_t stb_module[R_PRV_RTC_COUNT] =
  41              		.loc 1 157 5 view .LVU9
 158:../generate/compiler/init/resetprg.c ****     {
 159:../generate/compiler/init/resetprg.c ****         MODULE_RTC0, MODULE_RTC1
 160:../generate/compiler/init/resetprg.c ****     };
 161:../generate/compiler/init/resetprg.c **** 
 162:../generate/compiler/init/resetprg.c ****     /* channel check */
 163:../generate/compiler/init/resetprg.c ****     if (ch >= R_PRV_RTC_COUNT)
  42              		.loc 1 163 5 view .LVU10
  43              		.loc 1 163 8 is_stmt 0 view .LVU11
  44 0000 010050E3 		cmp	r0, #1
  45 0004 1EFF2F81 		bxhi	lr
 133:../generate/compiler/init/resetprg.c ****     uint8_t dummy8;
  46              		.loc 1 133 1 view .LVU12
  47 0008 70402DE9 		push	{r4, r5, r6, lr}
  48              		.cfi_def_cfa_offset 16
  49              		.cfi_offset 4, -16
  50              		.cfi_offset 5, -12
  51              		.cfi_offset 6, -8
  52              		.cfi_offset 14, -4
  53 000c 0040A0E1 		mov	r4, r0
 164:../generate/compiler/init/resetprg.c ****     {
 165:../generate/compiler/init/resetprg.c ****         return;
 166:../generate/compiler/init/resetprg.c ****     }
 167:../generate/compiler/init/resetprg.c **** 
 168:../generate/compiler/init/resetprg.c ****     /* 1: select RTCXTAL for RTC (RCR4.RCKSEL = 0) */
 169:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&rtc[ch]->RCR4.BYTE, 0, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
  54              		.loc 1 169 5 is_stmt 1 view .LVU13
  55              		.loc 1 169 27 is_stmt 0 view .LVU14
  56 0010 003000E3 		movw	r3, #:lower16:.LANCHOR0
  57 0014 003040E3 		movt	r3, #:upper16:.LANCHOR0
  58 0018 005193E7 		ldr	r5, [r3, r0, lsl #2]
  59              		.loc 1 169 23 view .LVU15
  60 001c 286085E2 		add	r6, r5, #40
  61              		.loc 1 169 5 view .LVU16
  62 0020 0030E0E3 		mvn	r3, #0
  63 0024 0020A0E3 		mov	r2, #0
  64 0028 0210A0E1 		mov	r1, r2
  65 002c 0600A0E1 		mov	r0, r6
  66              	.LVL1:
  67              		.loc 1 169 5 view .LVU17
  68 0030 FEFFFFEB 		bl	RZA_IO_RegWrite_8
  69              	.LVL2:
 170:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_8(&rtc[ch]->RCR4.BYTE, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
  70              		.loc 1 170 5 is_stmt 1 view .LVU18
  71 0034 0020E0E3 		mvn	r2, #0
  72 0038 0010A0E3 		mov	r1, #0
  73 003c 0600A0E1 		mov	r0, r6
  74 0040 FEFFFFEB 		bl	RZA_IO_RegRead_8
  75              	.LVL3:
 171:../generate/compiler/init/resetprg.c **** 
 172:../generate/compiler/init/resetprg.c ****     /* 2: disable RTC clock (RCR3.RTCEN = 0) */
 173:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&rtc[ch]->RCR3.BYTE, 0, RTC_RCR3_RTCEN_SHIFT, RTC_RCR3_RTCEN);
  76              		.loc 1 173 5 view .LVU19
  77              		.loc 1 173 23 is_stmt 0 view .LVU20
  78 0044 265085E2 		add	r5, r5, #38
  79              		.loc 1 173 5 view .LVU21
  80 0048 0130A0E3 		mov	r3, #1
  81 004c 0020A0E3 		mov	r2, #0
  82 0050 0210A0E1 		mov	r1, r2
  83 0054 0500A0E1 		mov	r0, r5
  84 0058 FEFFFFEB 		bl	RZA_IO_RegWrite_8
  85              	.LVL4:
 174:../generate/compiler/init/resetprg.c **** 
 175:../generate/compiler/init/resetprg.c ****     /* Wait for successfully disabled */
 176:../generate/compiler/init/resetprg.c ****     dummy8 = 1;
  86              		.loc 1 176 5 is_stmt 1 view .LVU22
 177:../generate/compiler/init/resetprg.c ****     while (0 != dummy8)
  87              		.loc 1 177 5 view .LVU23
 176:../generate/compiler/init/resetprg.c ****     while (0 != dummy8)
  88              		.loc 1 176 12 is_stmt 0 view .LVU24
  89 005c 0100A0E3 		mov	r0, #1
  90              		.loc 1 177 11 view .LVU25
  91 0060 030000EA 		b	.L3
  92              	.LVL5:
  93              	.L4:
 178:../generate/compiler/init/resetprg.c ****     {
 179:../generate/compiler/init/resetprg.c ****         dummy8 = RZA_IO_RegRead_8(&rtc[ch]->RCR3.BYTE, RTC_RCR3_RTCEN_SHIFT, RTC_RCR3_RTCEN);
  94              		.loc 1 179 9 is_stmt 1 view .LVU26
  95              		.loc 1 179 18 is_stmt 0 view .LVU27
  96 0064 0120A0E3 		mov	r2, #1
  97 0068 0010A0E3 		mov	r1, #0
  98 006c 0500A0E1 		mov	r0, r5
  99              	.LVL6:
 100              		.loc 1 179 18 view .LVU28
 101 0070 FEFFFFEB 		bl	RZA_IO_RegRead_8
 102              	.LVL7:
 103              	.L3:
 177:../generate/compiler/init/resetprg.c ****     {
 104              		.loc 1 177 11 is_stmt 1 view .LVU29
 105 0074 000050E3 		cmp	r0, #0
 106 0078 F9FFFF1A 		bne	.L4
 180:../generate/compiler/init/resetprg.c ****     }
 181:../generate/compiler/init/resetprg.c **** 
 182:../generate/compiler/init/resetprg.c ****     /* 3: disable RTC clock while standby mode */
 183:../generate/compiler/init/resetprg.c ****     mask  = rtcxtalsel_mask[ch];
 107              		.loc 1 183 5 view .LVU30
 108              		.loc 1 183 28 is_stmt 0 view .LVU31
 109 007c 003000E3 		movw	r3, #:lower16:.LANCHOR1
 110 0080 003040E3 		movt	r3, #:upper16:.LANCHOR1
 111 0084 8410A0E1 		lsl	r1, r4, #1
 112              	.LVL8:
 184:../generate/compiler/init/resetprg.c ****     shift = rtcxtalsel_shift[ch];
 113              		.loc 1 184 5 is_stmt 1 view .LVU32
 114              		.loc 1 184 11 is_stmt 0 view .LVU33
 115 0088 002000E3 		movw	r2, #:lower16:.LANCHOR2
 116 008c 002040E3 		movt	r2, #:upper16:.LANCHOR2
 117              	.LVL9:
 185:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_16(&PMG.RTCXTALSEL.WORD, 0, shift, mask);
 118              		.loc 1 185 5 is_stmt 1 view .LVU34
 119 0090 40500CE3 		movw	r5, #49216
 120 0094 FF5C4FE3 		movt	r5, 64767
 121 0098 B13093E1 		ldrh	r3, [r3, r1]
 122              	.LVL10:
 123              		.loc 1 185 5 is_stmt 0 view .LVU35
 124 009c 0420D2E7 		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 125              	.LVL11:
 126              		.loc 1 185 5 view .LVU36
 127 00a0 0010A0E3 		mov	r1, #0
 128 00a4 0500A0E1 		mov	r0, r5
 129              	.LVL12:
 130              		.loc 1 185 5 view .LVU37
 131 00a8 FEFFFFEB 		bl	RZA_IO_RegWrite_16
 132              	.LVL13:
 186:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_16(&PMG.RTCXTALSEL.WORD, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
 133              		.loc 1 186 5 is_stmt 1 view .LVU38
 134 00ac 0020E0E3 		mvn	r2, #0
 135 00b0 0010A0E3 		mov	r1, #0
 136 00b4 0500A0E1 		mov	r0, r5
 137 00b8 FEFFFFEB 		bl	RZA_IO_RegRead_16
 138              	.LVL14:
 187:../generate/compiler/init/resetprg.c **** 
 188:../generate/compiler/init/resetprg.c ****     /* 4: Stop RTC module */
 189:../generate/compiler/init/resetprg.c ****     mask  = mstp_mask[ch];
 139              		.loc 1 189 5 view .LVU39
 140              		.loc 1 189 22 is_stmt 0 view .LVU40
 141 00bc 003000E3 		movw	r3, #:lower16:.LANCHOR3
 142 00c0 003040E3 		movt	r3, #:upper16:.LANCHOR3
 143              	.LVL15:
 190:../generate/compiler/init/resetprg.c ****     shift = mstp_shift[ch];
 144              		.loc 1 190 5 is_stmt 1 view .LVU41
 145              		.loc 1 190 11 is_stmt 0 view .LVU42
 146 00c4 002000E3 		movw	r2, #:lower16:.LANCHOR4
 147 00c8 002040E3 		movt	r2, #:upper16:.LANCHOR4
 148              	.LVL16:
 191:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&CPG.STBCR5.BYTE, 1, shift, mask);
 149              		.loc 1 191 5 is_stmt 1 view .LVU43
 150 00cc 285400E3 		movw	r5, #1064
 151 00d0 FE5C4FE3 		movt	r5, 64766
 152 00d4 0430D3E7 		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 153              	.LVL17:
 154              		.loc 1 191 5 is_stmt 0 view .LVU44
 155 00d8 0420D2E7 		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 156              	.LVL18:
 157              		.loc 1 191 5 view .LVU45
 158 00dc 0110A0E3 		mov	r1, #1
 159 00e0 0500A0E1 		mov	r0, r5
 160 00e4 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 161              	.LVL19:
 192:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_8(&CPG.STBCR5.BYTE, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
 162              		.loc 1 192 5 is_stmt 1 view .LVU46
 163 00e8 0020E0E3 		mvn	r2, #0
 164 00ec 0010A0E3 		mov	r1, #0
 165 00f0 0500A0E1 		mov	r0, r5
 166 00f4 FEFFFFEB 		bl	RZA_IO_RegRead_8
 167              	.LVL20:
 193:../generate/compiler/init/resetprg.c **** 
 194:../generate/compiler/init/resetprg.c ****     /* 5: Set CLK init setting of STB driver */
 195:../generate/compiler/init/resetprg.c ****     R_STB_SetClockInitStatus(stb_module[ch], CLK_OFF);
 168              		.loc 1 195 5 view .LVU47
 169 00f8 003000E3 		movw	r3, #:lower16:.LANCHOR5
 170 00fc 003040E3 		movt	r3, #:upper16:.LANCHOR5
 171 0100 0110A0E3 		mov	r1, #1
 172 0104 0400D3E7 		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 173 0108 FEFFFFEB 		bl	R_STB_SetClockInitStatus
 174              	.LVL21:
 196:../generate/compiler/init/resetprg.c **** 
 197:../generate/compiler/init/resetprg.c **** }
 175              		.loc 1 197 1 is_stmt 0 view .LVU48
 176 010c 7080BDE8 		pop	{r4, r5, r6, pc}
 177              		.cfi_endproc
 178              	.LFE4:
 180              		.section	.text.disable_usb,"ax",%progbits
 181              		.align	2
 182              		.syntax unified
 183              		.arm
 184              		.fpu neon
 186              	disable_usb:
 187              	.LVL22:
 188              	.LFB5:
 198:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
 199:../generate/compiler/init/resetprg.c ****  End of function disable_rtc
 200:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
 201:../generate/compiler/init/resetprg.c **** 
 202:../generate/compiler/init/resetprg.c **** /**************************************************************************************************
 203:../generate/compiler/init/resetprg.c ****  * Function Name: disable_usb
 204:../generate/compiler/init/resetprg.c ****  * Description  : disable USB module (See HM 32.2.4.4, 32.2.4.5, 32.2.20, 33.2.20, 52.2.6 and 52.4.
 205:../generate/compiler/init/resetprg.c ****  * Arguments    : uint32_t ch : channel
 206:../generate/compiler/init/resetprg.c ****  * Return Value : none
 207:../generate/compiler/init/resetprg.c ****  **************************************************************************************************
 208:../generate/compiler/init/resetprg.c **** static void disable_usb(uint32_t ch)
 209:../generate/compiler/init/resetprg.c **** {
 189              		.loc 1 209 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 210:../generate/compiler/init/resetprg.c ****     uint8_t dummy8;
 193              		.loc 1 210 5 view .LVU50
 211:../generate/compiler/init/resetprg.c ****     uint32_t mask;
 194              		.loc 1 211 5 view .LVU51
 212:../generate/compiler/init/resetprg.c ****     uint8_t shift;
 195              		.loc 1 212 5 view .LVU52
 213:../generate/compiler/init/resetprg.c **** 
 214:../generate/compiler/init/resetprg.c ****     /* USB Host IO reg Top Address(ch0, ch1) */
 215:../generate/compiler/init/resetprg.c ****     static volatile struct st_usb00 * const usb00_host[R_PRV_USB_COUNT] =
 196              		.loc 1 215 5 view .LVU53
 216:../generate/compiler/init/resetprg.c ****     {
 217:../generate/compiler/init/resetprg.c ****         &USB00, &USB10
 218:../generate/compiler/init/resetprg.c ****     };
 219:../generate/compiler/init/resetprg.c **** 
 220:../generate/compiler/init/resetprg.c ****     /* USB Function IO reg Top Address(ch0, ch1) */
 221:../generate/compiler/init/resetprg.c ****     static volatile struct st_usb01 * const usb01_func[R_PRV_USB_COUNT] =
 197              		.loc 1 221 5 view .LVU54
 222:../generate/compiler/init/resetprg.c ****     {
 223:../generate/compiler/init/resetprg.c ****         &USB01, &USB11
 224:../generate/compiler/init/resetprg.c ****     };
 225:../generate/compiler/init/resetprg.c **** 
 226:../generate/compiler/init/resetprg.c ****     /* MSTP */
 227:../generate/compiler/init/resetprg.c ****     static const uint8_t mstp_mask[R_PRV_USB_COUNT] =
 198              		.loc 1 227 5 view .LVU55
 228:../generate/compiler/init/resetprg.c ****     {
 229:../generate/compiler/init/resetprg.c ****         CPG_STBCR6_MSTP61, CPG_STBCR6_MSTP60
 230:../generate/compiler/init/resetprg.c ****     };
 231:../generate/compiler/init/resetprg.c ****     static const uint8_t mstp_shift[R_PRV_USB_COUNT] =
 199              		.loc 1 231 5 view .LVU56
 232:../generate/compiler/init/resetprg.c ****     {
 233:../generate/compiler/init/resetprg.c ****         CPG_STBCR6_MSTP61_SHIFT, CPG_STBCR6_MSTP60_SHIFT
 234:../generate/compiler/init/resetprg.c ****     };
 235:../generate/compiler/init/resetprg.c **** 
 236:../generate/compiler/init/resetprg.c ****     /* STBREQ */
 237:../generate/compiler/init/resetprg.c ****     static const uint8_t stbreq_mask[R_PRV_USB_COUNT] =
 200              		.loc 1 237 5 view .LVU57
 238:../generate/compiler/init/resetprg.c ****     {
 239:../generate/compiler/init/resetprg.c ****         (CPG_STBREQ3_STBRQ31 | CPG_STBREQ3_STBRQ30), (CPG_STBREQ3_STBRQ33 | CPG_STBREQ3_STBRQ32)
 240:../generate/compiler/init/resetprg.c ****     };
 241:../generate/compiler/init/resetprg.c ****     static const uint8_t stbreq_shift[R_PRV_USB_COUNT] =
 201              		.loc 1 241 5 view .LVU58
 242:../generate/compiler/init/resetprg.c ****     {
 243:../generate/compiler/init/resetprg.c ****         CPG_STBREQ3_STBRQ30_SHIFT, CPG_STBREQ3_STBRQ32_SHIFT
 244:../generate/compiler/init/resetprg.c ****     };
 245:../generate/compiler/init/resetprg.c **** 
 246:../generate/compiler/init/resetprg.c ****     /* STBACK */
 247:../generate/compiler/init/resetprg.c ****     static const uint8_t stback_mask[R_PRV_USB_COUNT] =
 202              		.loc 1 247 5 view .LVU59
 248:../generate/compiler/init/resetprg.c ****     {
 249:../generate/compiler/init/resetprg.c ****         (CPG_STBACK3_STBAK31 | CPG_STBACK3_STBAK30), (CPG_STBACK3_STBAK33 | CPG_STBACK3_STBAK32)
 250:../generate/compiler/init/resetprg.c ****     };
 251:../generate/compiler/init/resetprg.c ****     static const uint8_t stback_shift[R_PRV_USB_COUNT] =
 203              		.loc 1 251 5 view .LVU60
 252:../generate/compiler/init/resetprg.c ****     {
 253:../generate/compiler/init/resetprg.c ****         CPG_STBACK3_STBAK30_SHIFT, CPG_STBACK3_STBAK32_SHIFT
 254:../generate/compiler/init/resetprg.c ****     };
 255:../generate/compiler/init/resetprg.c **** 
 256:../generate/compiler/init/resetprg.c ****     /* STB Module */
 257:../generate/compiler/init/resetprg.c ****     static const e_stb_module_t stb_module[R_PRV_RTC_COUNT] =
 204              		.loc 1 257 5 view .LVU61
 258:../generate/compiler/init/resetprg.c ****     {
 259:../generate/compiler/init/resetprg.c ****         MODULE_USB0, MODULE_USB1
 260:../generate/compiler/init/resetprg.c ****     };
 261:../generate/compiler/init/resetprg.c **** 
 262:../generate/compiler/init/resetprg.c ****     /* channel check */
 263:../generate/compiler/init/resetprg.c ****     if (ch >= R_PRV_USB_COUNT)
 205              		.loc 1 263 5 view .LVU62
 206              		.loc 1 263 8 is_stmt 0 view .LVU63
 207 0000 010050E3 		cmp	r0, #1
 208 0004 1EFF2F81 		bxhi	lr
 209:../generate/compiler/init/resetprg.c ****     uint8_t dummy8;
 209              		.loc 1 209 1 view .LVU64
 210 0008 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 211              		.cfi_def_cfa_offset 36
 212              		.cfi_offset 4, -36
 213              		.cfi_offset 5, -32
 214              		.cfi_offset 6, -28
 215              		.cfi_offset 7, -24
 216              		.cfi_offset 8, -20
 217              		.cfi_offset 9, -16
 218              		.cfi_offset 10, -12
 219              		.cfi_offset 11, -8
 220              		.cfi_offset 14, -4
 221 000c 0CD04DE2 		sub	sp, sp, #12
 222              		.cfi_def_cfa_offset 48
 223 0010 0050A0E1 		mov	r5, r0
 264:../generate/compiler/init/resetprg.c ****     {
 265:../generate/compiler/init/resetprg.c ****         return;
 266:../generate/compiler/init/resetprg.c ****     }
 267:../generate/compiler/init/resetprg.c **** 
 268:../generate/compiler/init/resetprg.c ****     /* 1: Start USB module */
 269:../generate/compiler/init/resetprg.c **** 
 270:../generate/compiler/init/resetprg.c ****     /* MSTP = 0 */
 271:../generate/compiler/init/resetprg.c ****     mask  = mstp_mask[ch];
 224              		.loc 1 271 5 is_stmt 1 view .LVU65
 225              		.loc 1 271 22 is_stmt 0 view .LVU66
 226 0014 003000E3 		movw	r3, #:lower16:.LANCHOR6
 227 0018 003040E3 		movt	r3, #:upper16:.LANCHOR6
 228 001c 0010D3E7 		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 229 0020 00108DE5 		str	r1, [sp]
 230              	.LVL23:
 272:../generate/compiler/init/resetprg.c ****     shift = mstp_shift[ch];
 231              		.loc 1 272 5 is_stmt 1 view .LVU67
 232              		.loc 1 272 11 is_stmt 0 view .LVU68
 233 0024 003000E3 		movw	r3, #:lower16:.LANCHOR7
 234 0028 003040E3 		movt	r3, #:upper16:.LANCHOR7
 235 002c 0030D3E7 		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 236 0030 0320A0E1 		mov	r2, r3
 237 0034 04308DE5 		str	r3, [sp, #4]
 238              	.LVL24:
 273:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&CPG.STBCR6.BYTE, 0, shift, mask);
 239              		.loc 1 273 5 is_stmt 1 view .LVU69
 240 0038 2C4400E3 		movw	r4, #1068
 241 003c FE4C4FE3 		movt	r4, 64766
 242 0040 0130A0E1 		mov	r3, r1
 243 0044 0010A0E3 		mov	r1, #0
 244              	.LVL25:
 245              		.loc 1 273 5 is_stmt 0 view .LVU70
 246 0048 0400A0E1 		mov	r0, r4
 247              	.LVL26:
 248              		.loc 1 273 5 view .LVU71
 249 004c FEFFFFEB 		bl	RZA_IO_RegWrite_8
 250              	.LVL27:
 274:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_8(&CPG.STBCR6.BYTE, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
 251              		.loc 1 274 5 is_stmt 1 view .LVU72
 252 0050 0020E0E3 		mvn	r2, #0
 253 0054 0010A0E3 		mov	r1, #0
 254 0058 0400A0E1 		mov	r0, r4
 255 005c FEFFFFEB 		bl	RZA_IO_RegRead_8
 256              	.LVL28:
 275:../generate/compiler/init/resetprg.c **** 
 276:../generate/compiler/init/resetprg.c ****     /* STBREQ = 0 */
 277:../generate/compiler/init/resetprg.c ****     mask  = stbreq_mask[ch];
 257              		.loc 1 277 5 view .LVU73
 258              		.loc 1 277 24 is_stmt 0 view .LVU74
 259 0060 003000E3 		movw	r3, #:lower16:.LANCHOR8
 260 0064 003040E3 		movt	r3, #:upper16:.LANCHOR8
 261 0068 05A0D3E7 		ldrb	r10, [r3, r5]	@ zero_extendqisi2
 262              	.LVL29:
 278:../generate/compiler/init/resetprg.c ****     shift = stbreq_shift[ch];
 263              		.loc 1 278 5 is_stmt 1 view .LVU75
 264              		.loc 1 278 11 is_stmt 0 view .LVU76
 265 006c 003000E3 		movw	r3, #:lower16:.LANCHOR9
 266 0070 003040E3 		movt	r3, #:upper16:.LANCHOR9
 267 0074 0590D3E7 		ldrb	r9, [r3, r5]	@ zero_extendqisi2
 268              	.LVL30:
 279:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&CPG.STBREQ3.BYTE, 0x0, shift, mask);
 269              		.loc 1 279 5 is_stmt 1 view .LVU77
 270 0078 3840A0E3 		mov	r4, #56
 271 007c FE4C4FE3 		movt	r4, 64766
 272 0080 0A30A0E1 		mov	r3, r10
 273 0084 0920A0E1 		mov	r2, r9
 274 0088 0010A0E3 		mov	r1, #0
 275 008c 0400A0E1 		mov	r0, r4
 276 0090 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 277              	.LVL31:
 280:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_8(&CPG.STBREQ3.BYTE, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
 278              		.loc 1 280 5 view .LVU78
 279 0094 0020E0E3 		mvn	r2, #0
 280 0098 0010A0E3 		mov	r1, #0
 281 009c 0400A0E1 		mov	r0, r4
 282 00a0 FEFFFFEB 		bl	RZA_IO_RegRead_8
 283              	.LVL32:
 281:../generate/compiler/init/resetprg.c **** 
 282:../generate/compiler/init/resetprg.c ****     /* check STBACK = 0 */
 283:../generate/compiler/init/resetprg.c ****     mask  = stback_mask[ch];
 284              		.loc 1 283 5 view .LVU79
 285              		.loc 1 283 24 is_stmt 0 view .LVU80
 286 00a4 003000E3 		movw	r3, #:lower16:.LANCHOR10
 287 00a8 003040E3 		movt	r3, #:upper16:.LANCHOR10
 288 00ac 0560D3E7 		ldrb	r6, [r3, r5]	@ zero_extendqisi2
 289              	.LVL33:
 284:../generate/compiler/init/resetprg.c ****     shift = stback_shift[ch];
 290              		.loc 1 284 5 is_stmt 1 view .LVU81
 291              		.loc 1 284 11 is_stmt 0 view .LVU82
 292 00b0 003000E3 		movw	r3, #:lower16:.LANCHOR11
 293 00b4 003040E3 		movt	r3, #:upper16:.LANCHOR11
 294 00b8 0570D3E7 		ldrb	r7, [r3, r5]	@ zero_extendqisi2
 295              	.LVL34:
 285:../generate/compiler/init/resetprg.c ****     dummy8 = 0x3;
 296              		.loc 1 285 5 is_stmt 1 view .LVU83
 286:../generate/compiler/init/resetprg.c ****     while (0x0 != dummy8)
 297              		.loc 1 286 5 view .LVU84
 285:../generate/compiler/init/resetprg.c ****     dummy8 = 0x3;
 298              		.loc 1 285 12 is_stmt 0 view .LVU85
 299 00bc 0340A0E3 		mov	r4, #3
 300 00c0 0400A0E1 		mov	r0, r4
 301              	.LVL35:
 302              	.L11:
 303              		.loc 1 286 11 is_stmt 1 view .LVU86
 304 00c4 000050E3 		cmp	r0, #0
 305 00c8 0500000A 		beq	.L19
 287:../generate/compiler/init/resetprg.c ****     {
 288:../generate/compiler/init/resetprg.c ****         dummy8 = RZA_IO_RegRead_8(&CPG.STBACK3.BYTE, shift, mask);
 306              		.loc 1 288 9 view .LVU87
 307              		.loc 1 288 18 is_stmt 0 view .LVU88
 308 00cc 0620A0E1 		mov	r2, r6
 309 00d0 0710A0E1 		mov	r1, r7
 310 00d4 4800A0E3 		mov	r0, #72
 311              	.LVL36:
 312              		.loc 1 288 18 view .LVU89
 313 00d8 FE0C4FE3 		movt	r0, 64766
 314 00dc FEFFFFEB 		bl	RZA_IO_RegRead_8
 315              	.LVL37:
 316              		.loc 1 288 18 view .LVU90
 317 00e0 F7FFFFEA 		b	.L11
 318              	.L19:
 319              		.loc 1 288 18 view .LVU91
 320 00e4 0040A0E1 		mov	r4, r0
 289:../generate/compiler/init/resetprg.c ****     }
 290:../generate/compiler/init/resetprg.c **** 
 291:../generate/compiler/init/resetprg.c ****     /* 2: Set the clock supplied to USBPHY to EXTAL clock (PHYCLK_CTRL.UCLKSEL = 0) */
 292:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_32(&usb00_host[ch]->PHYCLK_CTRL.LONG, 0, USB_PHYCLK_CTRL_UCLKSEL_SHIFT, USB_PHY
 321              		.loc 1 292 5 is_stmt 1 view .LVU92
 322              		.loc 1 292 35 is_stmt 0 view .LVU93
 323 00e8 003000E3 		movw	r3, #:lower16:.LANCHOR12
 324 00ec 003040E3 		movt	r3, #:upper16:.LANCHOR12
 325 00f0 058193E7 		ldr	r8, [r3, r5, lsl #2]
 326              		.loc 1 292 5 view .LVU94
 327 00f4 0130A0E3 		mov	r3, #1
 328 00f8 0020A0E3 		mov	r2, #0
 329 00fc 0210A0E1 		mov	r1, r2
 330 0100 210D88E2 		add	r0, r8, #2112
 331              	.LVL38:
 332              		.loc 1 292 5 view .LVU95
 333 0104 040080E2 		add	r0, r0, #4
 334 0108 FEFFFFEB 		bl	RZA_IO_RegWrite_32
 335              	.LVL39:
 293:../generate/compiler/init/resetprg.c **** 
 294:../generate/compiler/init/resetprg.c ****     /* 3: It can recover from deep standby by DP, DM change (PHYIF_CTRL.FIXPHY = 1) */
 295:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_32(&usb00_host[ch]->PHYIF_CTRL.LONG, 1, USB_PHYIF_CTRL_FIXPHY_SHIFT, USB_PHYIF_
 336              		.loc 1 295 5 is_stmt 1 view .LVU96
 337 010c 0130A0E3 		mov	r3, #1
 338 0110 0020A0E3 		mov	r2, #0
 339 0114 0310A0E1 		mov	r1, r3
 340 0118 210D88E2 		add	r0, r8, #2112
 341 011c 080080E2 		add	r0, r0, #8
 342 0120 FEFFFFEB 		bl	RZA_IO_RegWrite_32
 343              	.LVL40:
 296:../generate/compiler/init/resetprg.c **** 
 297:../generate/compiler/init/resetprg.c ****     /* 4: UTMI+PHY Normal Mode (LPSTS.SUSPM = 1) */
 298:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_16(&usb01_func[ch]->LPSTS.WORD, 1, USB_LPSTS_SUSPM_SHIFT, USB_LPSTS_SUSPM);
 344              		.loc 1 298 5 view .LVU97
 345              		.loc 1 298 35 is_stmt 0 view .LVU98
 346 0124 003000E3 		movw	r3, #:lower16:.LANCHOR13
 347 0128 003040E3 		movt	r3, #:upper16:.LANCHOR13
 348 012c 050193E7 		ldr	r0, [r3, r5, lsl #2]
 349              		.loc 1 298 5 view .LVU99
 350 0130 0139A0E3 		mov	r3, #16384
 351 0134 0E20A0E3 		mov	r2, #14
 352 0138 0110A0E3 		mov	r1, #1
 353 013c 010C80E2 		add	r0, r0, #256
 354 0140 020080E2 		add	r0, r0, #2
 355 0144 FEFFFFEB 		bl	RZA_IO_RegWrite_16
 356              	.LVL41:
 299:../generate/compiler/init/resetprg.c **** 
 300:../generate/compiler/init/resetprg.c ****     /* 5: UTMI + reset release (USBCTR.PLL_RST = 0) */
 301:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_32(&usb00_host[ch]->USBCTR.LONG, 0, USB_USBCTR_PLL_RST_SHIFT, USB_USBCTR_PLL_RS
 357              		.loc 1 301 5 is_stmt 1 view .LVU100
 358              		.loc 1 301 24 is_stmt 0 view .LVU101
 359 0148 83BF88E2 		add	fp, r8, #524
 360              		.loc 1 301 5 view .LVU102
 361 014c 0230A0E3 		mov	r3, #2
 362 0150 0120A0E3 		mov	r2, #1
 363 0154 0010A0E3 		mov	r1, #0
 364 0158 0B00A0E1 		mov	r0, fp
 365 015c FEFFFFEB 		bl	RZA_IO_RegWrite_32
 366              	.LVL42:
 302:../generate/compiler/init/resetprg.c **** 
 303:../generate/compiler/init/resetprg.c ****     /* 6: wait 200us delay(Waiting for oscillation stabilization of USBPHY built-in PLL) */
 304:../generate/compiler/init/resetprg.c ****     R_SoftwareDelay(STARTUP_CFG_USB_PHY_PLL_DELAY_COUNT);
 367              		.loc 1 304 5 is_stmt 1 view .LVU103
 368 0160 7D0FA0E3 		mov	r0, #500
 369 0164 FEFFFFEB 		bl	R_SoftwareDelay
 370              	.LVL43:
 305:../generate/compiler/init/resetprg.c **** 
 306:../generate/compiler/init/resetprg.c ****     /* 7: Pulldown resistance control is effective (LINECTRL1 = 0x000A0000) */
 307:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_32(
 371              		.loc 1 307 5 view .LVU104
 372 0168 0030E0E3 		mvn	r3, #0
 373 016c 0020A0E3 		mov	r2, #0
 374 0170 0A18A0E3 		mov	r1, #655360
 375 0174 810E88E2 		add	r0, r8, #2064
 376 0178 FEFFFFEB 		bl	RZA_IO_RegWrite_32
 377              	.LVL44:
 308:../generate/compiler/init/resetprg.c ****             &usb00_host[ch]->LINECTRL1.LONG,
 309:../generate/compiler/init/resetprg.c ****             (USB_LINECTRL1_DPRPD_EN | USB_LINECTRL1_DMRPD_EN),
 310:../generate/compiler/init/resetprg.c ****             IOREG_NONSHIFT_ACCESS,
 311:../generate/compiler/init/resetprg.c ****             IOREG_NONMASK_ACCESS);
 312:../generate/compiler/init/resetprg.c **** 
 313:../generate/compiler/init/resetprg.c ****     /* 8: USBPHY standby mode (USBCTR.DIRPD = 1) */
 314:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_32(&usb00_host[ch]->USBCTR.LONG, 1, USB_USBCTR_DIRPD_SHIFT, USB_USBCTR_DIRPD);
 378              		.loc 1 314 5 view .LVU105
 379 017c 0430A0E3 		mov	r3, #4
 380 0180 0220A0E3 		mov	r2, #2
 381 0184 0110A0E3 		mov	r1, #1
 382 0188 0B00A0E1 		mov	r0, fp
 383 018c FEFFFFEB 		bl	RZA_IO_RegWrite_32
 384              	.LVL45:
 315:../generate/compiler/init/resetprg.c **** 
 316:../generate/compiler/init/resetprg.c ****     /* 9: Stop USB module */
 317:../generate/compiler/init/resetprg.c **** 
 318:../generate/compiler/init/resetprg.c ****     /* STBREQ = 1 */
 319:../generate/compiler/init/resetprg.c ****     mask  = stbreq_mask[ch];
 385              		.loc 1 319 5 view .LVU106
 320:../generate/compiler/init/resetprg.c ****     shift = stbreq_shift[ch];
 386              		.loc 1 320 5 view .LVU107
 321:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&CPG.STBREQ3.BYTE, 0x3, shift, mask);
 387              		.loc 1 321 5 view .LVU108
 388 0190 3880A0E3 		mov	r8, #56
 389 0194 FE8C4FE3 		movt	r8, 64766
 390 0198 0A30A0E1 		mov	r3, r10
 391 019c 0920A0E1 		mov	r2, r9
 392 01a0 0310A0E3 		mov	r1, #3
 393 01a4 0800A0E1 		mov	r0, r8
 394 01a8 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 395              	.LVL46:
 322:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_8(&CPG.STBREQ3.BYTE, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
 396              		.loc 1 322 5 view .LVU109
 397 01ac 0020E0E3 		mvn	r2, #0
 398 01b0 0010A0E3 		mov	r1, #0
 399 01b4 0800A0E1 		mov	r0, r8
 400 01b8 FEFFFFEB 		bl	RZA_IO_RegRead_8
 401              	.LVL47:
 323:../generate/compiler/init/resetprg.c **** 
 324:../generate/compiler/init/resetprg.c ****     /* check STBACK = 1 */
 325:../generate/compiler/init/resetprg.c ****     mask  = stback_mask[ch];
 402              		.loc 1 325 5 view .LVU110
 326:../generate/compiler/init/resetprg.c ****     shift = stback_shift[ch];
 403              		.loc 1 326 5 view .LVU111
 327:../generate/compiler/init/resetprg.c ****     dummy8 = 0x0;
 404              		.loc 1 327 5 view .LVU112
 328:../generate/compiler/init/resetprg.c ****     while (0x3 != dummy8)
 405              		.loc 1 328 5 view .LVU113
 406 01bc 0400A0E1 		mov	r0, r4
 407              		.loc 1 328 11 is_stmt 0 view .LVU114
 408 01c0 040000EA 		b	.L13
 409              	.LVL48:
 410              	.L14:
 329:../generate/compiler/init/resetprg.c ****     {
 330:../generate/compiler/init/resetprg.c ****         dummy8 = RZA_IO_RegRead_8(&CPG.STBACK3.BYTE, shift, mask);
 411              		.loc 1 330 9 is_stmt 1 view .LVU115
 412              		.loc 1 330 18 is_stmt 0 view .LVU116
 413 01c4 0620A0E1 		mov	r2, r6
 414 01c8 0710A0E1 		mov	r1, r7
 415 01cc 4800A0E3 		mov	r0, #72
 416              	.LVL49:
 417              		.loc 1 330 18 view .LVU117
 418 01d0 FE0C4FE3 		movt	r0, 64766
 419 01d4 FEFFFFEB 		bl	RZA_IO_RegRead_8
 420              	.LVL50:
 421              	.L13:
 328:../generate/compiler/init/resetprg.c ****     while (0x3 != dummy8)
 422              		.loc 1 328 11 is_stmt 1 view .LVU118
 423 01d8 030050E3 		cmp	r0, #3
 424 01dc F8FFFF1A 		bne	.L14
 331:../generate/compiler/init/resetprg.c ****     }
 332:../generate/compiler/init/resetprg.c **** 
 333:../generate/compiler/init/resetprg.c ****     /* MSTP = 1 */
 334:../generate/compiler/init/resetprg.c ****     mask  = mstp_mask[ch];
 425              		.loc 1 334 5 view .LVU119
 426              	.LVL51:
 335:../generate/compiler/init/resetprg.c ****     shift = mstp_shift[ch];
 427              		.loc 1 335 5 view .LVU120
 336:../generate/compiler/init/resetprg.c ****     RZA_IO_RegWrite_8(&CPG.STBCR6.BYTE, 1, shift, mask);
 428              		.loc 1 336 5 view .LVU121
 429 01e0 2C4400E3 		movw	r4, #1068
 430 01e4 FE4C4FE3 		movt	r4, 64766
 431 01e8 00309DE5 		ldr	r3, [sp]
 432 01ec 04209DE5 		ldr	r2, [sp, #4]
 433 01f0 0110A0E3 		mov	r1, #1
 434 01f4 0400A0E1 		mov	r0, r4
 435              	.LVL52:
 436              		.loc 1 336 5 is_stmt 0 view .LVU122
 437 01f8 FEFFFFEB 		bl	RZA_IO_RegWrite_8
 438              	.LVL53:
 337:../generate/compiler/init/resetprg.c ****     RZA_IO_RegRead_8(&CPG.STBCR6.BYTE, IOREG_NONSHIFT_ACCESS, IOREG_NONMASK_ACCESS);
 439              		.loc 1 337 5 is_stmt 1 view .LVU123
 440 01fc 0020E0E3 		mvn	r2, #0
 441 0200 0010A0E3 		mov	r1, #0
 442 0204 0400A0E1 		mov	r0, r4
 443 0208 FEFFFFEB 		bl	RZA_IO_RegRead_8
 444              	.LVL54:
 338:../generate/compiler/init/resetprg.c **** 
 339:../generate/compiler/init/resetprg.c ****     /* 10: Set CLK init setting of STB driver */
 340:../generate/compiler/init/resetprg.c ****     R_STB_SetClockInitStatus(stb_module[ch], CLK_OFF);
 445              		.loc 1 340 5 view .LVU124
 446 020c 003000E3 		movw	r3, #:lower16:.LANCHOR14
 447 0210 003040E3 		movt	r3, #:upper16:.LANCHOR14
 448 0214 0110A0E3 		mov	r1, #1
 449 0218 0500D3E7 		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 450 021c FEFFFFEB 		bl	R_STB_SetClockInitStatus
 451              	.LVL55:
 341:../generate/compiler/init/resetprg.c **** 
 342:../generate/compiler/init/resetprg.c **** }
 452              		.loc 1 342 1 is_stmt 0 view .LVU125
 453 0220 0CD08DE2 		add	sp, sp, #12
 454              		.cfi_def_cfa_offset 36
 455              	.LVL56:
 456              		.loc 1 342 1 view .LVU126
 457              		@ sp needed
 458 0224 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 459              		.loc 1 342 1 view .LVU127
 460              		.cfi_endproc
 461              	.LFE5:
 463              		.section	.text.resetprg,"ax",%progbits
 464              		.align	2
 465              		.global	resetprg
 466              		.syntax unified
 467              		.arm
 468              		.fpu neon
 470              	resetprg:
 471              	.LFB3:
  71:../generate/compiler/init/resetprg.c ****     /* Disable RTC if macro defined as 1 */
 472              		.loc 1 71 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ Volatile: function does not return.
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 10402DE9 		push	{r4, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 4, -8
 480              		.cfi_offset 14, -4
  74:../generate/compiler/init/resetprg.c **** #endif
 481              		.loc 1 74 5 view .LVU129
 482 0004 0000A0E3 		mov	r0, #0
 483 0008 FEFFFFEB 		bl	disable_rtc
 484              	.LVL57:
  77:../generate/compiler/init/resetprg.c **** #endif
 485              		.loc 1 77 5 view .LVU130
 486 000c 0100A0E3 		mov	r0, #1
 487 0010 FEFFFFEB 		bl	disable_rtc
 488              	.LVL58:
  82:../generate/compiler/init/resetprg.c **** #endif
 489              		.loc 1 82 5 view .LVU131
 490 0014 0000A0E3 		mov	r0, #0
 491 0018 FEFFFFEB 		bl	disable_usb
 492              	.LVL59:
  85:../generate/compiler/init/resetprg.c **** #endif
 493              		.loc 1 85 5 view .LVU132
 494 001c 0100A0E3 		mov	r0, #1
 495 0020 FEFFFFEB 		bl	disable_usb
 496              	.LVL60:
  91:../generate/compiler/init/resetprg.c ****     {
 497              		.loc 1 91 5 view .LVU133
  91:../generate/compiler/init/resetprg.c ****     {
 498              		.loc 1 91 9 is_stmt 0 view .LVU134
 499 0024 FEFFFFEB 		bl	R_INTC_Init
 500              	.LVL61:
  91:../generate/compiler/init/resetprg.c ****     {
 501              		.loc 1 91 8 view .LVU135
 502 0028 000050E3 		cmp	r0, #0
 503 002c 0100000A 		beq	.L21
 504              	.L22:
  93:../generate/compiler/init/resetprg.c ****         {
 505              		.loc 1 93 9 is_stmt 1 discriminator 1 view .LVU136
  96:../generate/compiler/init/resetprg.c ****         }
 506              		.loc 1 96 13 discriminator 1 view .LVU137
 507              	.LBB6:
 508              	.LBI6:
 509              		.file 2 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc/r
   1:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** /**************************************************************************************************
   2:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * DISCLAIMER
   3:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * applicable laws, including copyright laws.
   6:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES
  12:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * following link:
  15:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * http://www.renesas.com/disclaimer
  16:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  *
  17:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Copyright (C) 2020 Renesas Electronics Corporation. All rights reserved.
  18:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  **************************************************************************************************
  19:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** /**************************************************************************************************
  20:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * File Name    : r_compiler_abstraction_api.h
  21:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Description  : Provides a common API for frequently used compiler specific operations
  22:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  **************************************************************************************************
  23:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** #include  "r_typedefs.h"
  24:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  25:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** #ifndef SRC_PRV_RENESAS_COMPILER_INC_R_COMPILER_ABSTRACTION_API_H_
  26:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** #define SRC_PRV_RENESAS_COMPILER_INC_R_COMPILER_ABSTRACTION_API_H_
  27:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  28:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** /* Macro is used to declare linkage to a function as weak so that it can be overridden by a normall
  29:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Update this when using a different compiler. */
  30:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** #define R_COMPILER_WEAK __attribute__((weak))
  31:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  32:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** #define R_COMPILER_INLINE static inline
  33:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  34:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** extern void __enable_irq (void);
  35:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** extern uint32_t __disable_irq (void);
  36:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** extern void __enable_fiq (void);
  37:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** extern void __disable_fiq (void);
  38:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** 
  39:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** /**************************************************************************************************
  40:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Function Name: R_COMPILER_Nop
  41:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Description  : Abstracting a compiler No Operation opcode into a C function. Update this when us
  42:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  *                compiler.
  43:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  * Return Value : None.
  44:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****  **************************************************************************************************
  45:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h **** R_COMPILER_INLINE void R_COMPILER_Nop (void)
 510              		.loc 2 45 24 discriminator 1 view .LVU138
 511              	.LBB7:
  46:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****     {
  47:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****         __asm volatile ("nop");
 512              		.loc 2 47 9 discriminator 1 view .LVU139
 513              		.syntax divided
 514              	@ 47 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc/r_com
 515 0030 00F020E3 		nop
 516              	@ 0 "" 2
 517              		.arm
 518              		.syntax unified
 519 0034 FDFFFFEA 		b	.L22
 520              	.L21:
 521              	.LBE7:
 522              	.LBE6:
 101:../generate/compiler/init/resetprg.c **** 
 523              		.loc 1 101 5 view .LVU140
 524 0038 FEFFFFEB 		bl	R_CACHE_L2Init
 525              	.LVL62:
 104:../generate/compiler/init/resetprg.c **** 
 526              		.loc 1 104 5 view .LVU141
 527 003c FEFFFFEB 		bl	R_CACHE_L1Init
 528              	.LVL63:
 107:../generate/compiler/init/resetprg.c **** 
 529              		.loc 1 107 5 view .LVU142
 530 0040 000000E3 		movw	r0, #:lower16:__vector_mirror_table_base
 531 0044 000040E3 		movt	r0, #:upper16:__vector_mirror_table_base
 532 0048 FEFFFFEB 		bl	__set_vbar
 533              	.LVL64:
 109:../generate/compiler/init/resetprg.c ****     __enable_fiq();
 534              		.loc 1 109 5 view .LVU143
 535 004c FEFFFFEB 		bl	__enable_irq
 536              	.LVL65:
 110:../generate/compiler/init/resetprg.c **** 
 537              		.loc 1 110 5 view .LVU144
 538 0050 FEFFFFEB 		bl	__enable_fiq
 539              	.LVL66:
 113:../generate/compiler/init/resetprg.c **** 
 540              		.loc 1 113 5 view .LVU145
 541 0054 FEFFFFEB 		bl	main
 542              	.LVL67:
 543              	.L23:
 116:../generate/compiler/init/resetprg.c ****     {
 544              		.loc 1 116 5 discriminator 1 view .LVU146
 119:../generate/compiler/init/resetprg.c ****     }
 545              		.loc 1 119 9 discriminator 1 view .LVU147
 546              	.LBB8:
 547              	.LBI8:
  45:C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc\r_compiler_abstraction_api.h ****     {
 548              		.loc 2 45 24 discriminator 1 view .LVU148
 549              	.LBB9:
 550              		.loc 2 47 9 discriminator 1 view .LVU149
 551              		.syntax divided
 552              	@ 47 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc/r_com
 553 0058 00F020E3 		nop
 554              	@ 0 "" 2
 555              		.arm
 556              		.syntax unified
 557 005c FDFFFFEA 		b	.L23
 558              	.LBE9:
 559              	.LBE8:
 560              		.cfi_endproc
 561              	.LFE3:
 563              		.section	.rodata.mstp_mask.69570,"a"
 564              		.align	2
 565              		.set	.LANCHOR3,. + 0
 568              	mstp_mask.69570:
 569 0000 0804     		.ascii	"\010\004"
 570              		.section	.rodata.mstp_mask.69586,"a"
 571              		.align	2
 572              		.set	.LANCHOR6,. + 0
 575              	mstp_mask.69586:
 576 0000 0201     		.ascii	"\002\001"
 577              		.section	.rodata.mstp_shift.69571,"a"
 578              		.align	2
 579              		.set	.LANCHOR4,. + 0
 582              	mstp_shift.69571:
 583 0000 0302     		.ascii	"\003\002"
 584              		.section	.rodata.mstp_shift.69587,"a"
 585              		.align	2
 586              		.set	.LANCHOR7,. + 0
 589              	mstp_shift.69587:
 590 0000 0100     		.ascii	"\001\000"
 591              		.section	.rodata.rtc.69569,"a"
 592              		.align	2
 593              		.set	.LANCHOR0,. + 0
 596              	rtc.69569:
 597 0000 00D0FFFC 		.word	-50343936
 598 0004 0010FFFC 		.word	-50393088
 599              		.section	.rodata.rtcxtalsel_mask.69572,"a"
 600              		.align	2
 601              		.set	.LANCHOR1,. + 0
 604              	rtcxtalsel_mask.69572:
 605 0000 0100     		.short	1
 606 0002 0200     		.short	2
 607              		.section	.rodata.rtcxtalsel_shift.69573,"a"
 608              		.align	2
 609              		.set	.LANCHOR2,. + 0
 612              	rtcxtalsel_shift.69573:
 613 0000 0001     		.ascii	"\000\001"
 614              		.section	.rodata.stb_module.69574,"a"
 615              		.align	2
 616              		.set	.LANCHOR5,. + 0
 619              	stb_module.69574:
 620 0000 12       		.byte	18
 621 0001 13       		.byte	19
 622              		.section	.rodata.stb_module.69592,"a"
 623              		.align	2
 624              		.set	.LANCHOR14,. + 0
 627              	stb_module.69592:
 628 0000 17       		.byte	23
 629 0001 18       		.byte	24
 630              		.section	.rodata.stback_mask.69590,"a"
 631              		.align	2
 632              		.set	.LANCHOR10,. + 0
 635              	stback_mask.69590:
 636 0000 030C     		.ascii	"\003\014"
 637              		.section	.rodata.stback_shift.69591,"a"
 638              		.align	2
 639              		.set	.LANCHOR11,. + 0
 642              	stback_shift.69591:
 643 0000 0002     		.ascii	"\000\002"
 644              		.section	.rodata.stbreq_mask.69588,"a"
 645              		.align	2
 646              		.set	.LANCHOR8,. + 0
 649              	stbreq_mask.69588:
 650 0000 030C     		.ascii	"\003\014"
 651              		.section	.rodata.stbreq_shift.69589,"a"
 652              		.align	2
 653              		.set	.LANCHOR9,. + 0
 656              	stbreq_shift.69589:
 657 0000 0002     		.ascii	"\000\002"
 658              		.section	.rodata.usb00_host.69584,"a"
 659              		.align	2
 660              		.set	.LANCHOR12,. + 0
 663              	usb00_host.69584:
 664 0000 008021E8 		.word	-400457728
 665 0004 00A021E8 		.word	-400449536
 666              		.section	.rodata.usb01_func.69585,"a"
 667              		.align	2
 668              		.set	.LANCHOR13,. + 0
 671              	usb01_func.69585:
 672 0000 009021E8 		.word	-400453632
 673 0004 00B021E8 		.word	-400445440
 674              		.text
 675              	.Letext0:
 676              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 677              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 678              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 679              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 680              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 681              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 682              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 683              		.file 10 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/inc/r_
 684              		.file 11 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/inc/dr
 685              		.file 12 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/os_abstractio
 686              		.file 13 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/iodefi
 687              		.file 14 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/iodefi
 688              		.file 15 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/iodefi
 689              		.file 16 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/iodefi
 690              		.file 17 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/drivers/r_stb
 691              		.file 18 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/drivers/r_int
 692              		.file 19 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/system/inc/rz
 693              		.file 20 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc/
 694              		.file 21 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/drivers/r_cac
 695              		.file 22 "C:/Users/ryota/e2_studio/workspace/rza2m_ssif_sample_freertos_gcc/generate/compiler/inc/
DEFINED SYMBOLS
                            *ABS*:00000000 resetprg.c
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:17     .text.disable_rtc:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:25     .text.disable_rtc:00000000 disable_rtc
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:593    .rodata.rtc.69569:00000000 .LANCHOR0
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:601    .rodata.rtcxtalsel_mask.69572:00000000 .LANCHOR1
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:609    .rodata.rtcxtalsel_shift.69573:00000000 .LANCHOR2
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:565    .rodata.mstp_mask.69570:00000000 .LANCHOR3
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:579    .rodata.mstp_shift.69571:00000000 .LANCHOR4
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:616    .rodata.stb_module.69574:00000000 .LANCHOR5
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:181    .text.disable_usb:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:186    .text.disable_usb:00000000 disable_usb
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:572    .rodata.mstp_mask.69586:00000000 .LANCHOR6
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:586    .rodata.mstp_shift.69587:00000000 .LANCHOR7
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:646    .rodata.stbreq_mask.69588:00000000 .LANCHOR8
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:653    .rodata.stbreq_shift.69589:00000000 .LANCHOR9
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:632    .rodata.stback_mask.69590:00000000 .LANCHOR10
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:639    .rodata.stback_shift.69591:00000000 .LANCHOR11
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:660    .rodata.usb00_host.69584:00000000 .LANCHOR12
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:668    .rodata.usb01_func.69585:00000000 .LANCHOR13
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:624    .rodata.stb_module.69592:00000000 .LANCHOR14
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:464    .text.resetprg:00000000 $a
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:470    .text.resetprg:00000000 resetprg
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:564    .rodata.mstp_mask.69570:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:568    .rodata.mstp_mask.69570:00000000 mstp_mask.69570
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:571    .rodata.mstp_mask.69586:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:575    .rodata.mstp_mask.69586:00000000 mstp_mask.69586
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:578    .rodata.mstp_shift.69571:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:582    .rodata.mstp_shift.69571:00000000 mstp_shift.69571
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:585    .rodata.mstp_shift.69587:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:589    .rodata.mstp_shift.69587:00000000 mstp_shift.69587
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:592    .rodata.rtc.69569:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:596    .rodata.rtc.69569:00000000 rtc.69569
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:600    .rodata.rtcxtalsel_mask.69572:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:604    .rodata.rtcxtalsel_mask.69572:00000000 rtcxtalsel_mask.69572
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:608    .rodata.rtcxtalsel_shift.69573:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:612    .rodata.rtcxtalsel_shift.69573:00000000 rtcxtalsel_shift.69573
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:615    .rodata.stb_module.69574:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:619    .rodata.stb_module.69574:00000000 stb_module.69574
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:623    .rodata.stb_module.69592:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:627    .rodata.stb_module.69592:00000000 stb_module.69592
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:631    .rodata.stback_mask.69590:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:635    .rodata.stback_mask.69590:00000000 stback_mask.69590
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:638    .rodata.stback_shift.69591:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:642    .rodata.stback_shift.69591:00000000 stback_shift.69591
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:645    .rodata.stbreq_mask.69588:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:649    .rodata.stbreq_mask.69588:00000000 stbreq_mask.69588
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:652    .rodata.stbreq_shift.69589:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:656    .rodata.stbreq_shift.69589:00000000 stbreq_shift.69589
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:659    .rodata.usb00_host.69584:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:663    .rodata.usb00_host.69584:00000000 usb00_host.69584
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:667    .rodata.usb01_func.69585:00000000 $d
C:\Users\ryota\AppData\Local\Temp\cckuJIZh.s:671    .rodata.usb01_func.69585:00000000 usb01_func.69585
                           .group:00000000 wm4.0.3d5c910ebb40df6df78b28e37cd67f3d
                           .group:00000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.3f06799abf5dd88bdddee084775a1223
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.math.h.13.97100c05caf9f40dd9f5a3cda48ccc01
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.r_startup_config.h.28.41a2bd9676f9208cac4163ceb2eb9006
                           .group:00000000 wm4.r_compiler_abstraction_api.h.26.bb21b39b83806cb7bb8838b6f825dcff
                           .group:00000000 wm4.driver.h.34.180df73e0731406f5e50150641059ede
                           .group:00000000 wm4.r_os_abstraction_api.h.60.0331cc3a2f471de784d61b225d2e9127
                           .group:00000000 wm4.compiler_settings.h.55.412db3588640e7e83336e77c1cd11233
                           .group:00000000 wm4.r_cache_lld_rza2m.h.47.60fd1c425e79f0ee4cd5b4a9383d982b
                           .group:00000000 wm4.adc_iodefine.h.29.14c6f50dce37432a7d004e4b1ce33da7
                           .group:00000000 wm4.bsc_iodefine.h.29.9281d1f3639266933964d6d0c2d42c4f
                           .group:00000000 wm4.ceu_iodefine.h.29.2a669d0b46fdde030a50db9e3c307fbf
                           .group:00000000 wm4.cpg_iodefine.h.29.d6fdc9cb4798723afd88b251d64c2ce2
                           .group:00000000 wm4.csi2link_iodefine.h.29.221c4531636a409f24d307b16341ada8
                           .group:00000000 wm4.dmac_iodefine.h.29.578fccc2cc1da886ec95a029bf874f01
                           .group:00000000 wm4.drpk_iodefine.h.29.580eb8588a2b2d43d2726fbe791e513f
                           .group:00000000 wm4.drw_iodefine.h.29.df30f4a4a34a79f6a86c4df91353dffe
                           .group:00000000 wm4.edmac_iodefine.h.29.33e8759349004a722f42f5429c1353f6
                           .group:00000000 wm4.eptpc_iodefine.h.29.74d8f9fab0f5549b56097fb9e937dde8
                           .group:00000000 wm4.etherc_iodefine.h.29.14602750383a574f1c21f994ad33a366
                           .group:00000000 wm4.gpio_iodefine.h.29.3d0b021c56839cee4ae5149903684e4b
                           .group:00000000 wm4.gpt_iodefine.h.29.557ead75d7b0585b898d3898b64c7f87
                           .group:00000000 wm4.hyper_iodefine.h.29.000caadbb74d881e97db55b39b432154
                           .group:00000000 wm4.imr_iodefine.h.29.77c022f017e711c4d51cc0145db1dad3
                           .group:00000000 wm4.intc_iodefine.h.29.b68f5799a35a7495d63b4cd458e1ba57
                           .group:00000000 wm4.irda_iodefine.h.29.37e67bd2005173d68a74d1cc937d8444
                           .group:00000000 wm4.jcu_iodefine.h.29.3aca452908962e7a7ccf26164751feda
                           .group:00000000 wm4.lvds_iodefine.h.29.c11cbe1900e5209c8dcc76c2336c16bc
                           .group:00000000 wm4.mtu_iodefine.h.29.5498fb974bb53caf05aa143c2deec781
                           .group:00000000 wm4.nandc_iodefine.h.29.e0b343306750f017ee86e169ad98efe9
                           .group:00000000 wm4.octa_iodefine.h.29.4cb0d62e4b9633e173858000dc1c626c
                           .group:00000000 wm4.ostm_iodefine.h.29.6914f7e330a1cf0008b34219adcdfed4
                           .group:00000000 wm4.pl_iodefine.h.29.abbb6d725aed990aa8343242bfe31416
                           .group:00000000 wm4.pmg_iodefine.h.29.8bcfbc4771a6f9b7dd4d6f504427219e
                           .group:00000000 wm4.poeg_iodefine.h.29.0d8e258d10986260cbc70cfb8c0ef273
                           .group:00000000 wm4.poe_iodefine.h.29.fe74e55e7b6b4afbe3596c74ba035e98
                           .group:00000000 wm4.prr_iodefine.h.29.c1f15576f7a27b9c83aa3b40f5b2f988
                           .group:00000000 wm4.ptpedmac_iodefine.h.29.cd24a93374ce35cebc41e26889d619ef
                           .group:00000000 wm4.rcanfd_iodefine.h.29.532dd48b82fcb61d63538aba4b6f1289
                           .group:00000000 wm4.rcan_iodefine.h.29.a47a89db1b35c12b54af48fa1956acba
                           .group:00000000 wm4.riic_iodefine.h.29.f96943d49800d297612c4af3bba5c943
                           .group:00000000 wm4.rspi_iodefine.h.29.7efa041fe34a7d27db66a7b337879dfe
                           .group:00000000 wm4.rtc_iodefine.h.29.6dc76be5ca3df69cecb5a81d06cc46b5
                           .group:00000000 wm4.scifa_iodefine.h.29.b04ccd664d71baaf31c75761c45b9c4d
                           .group:00000000 wm4.scim_iodefine.h.29.87d0760abf94446b00d826c797bf0ff2
                           .group:00000000 wm4.sdmmc_iodefine.h.29.e67e9815445e8057a3262d1566bea0db
                           .group:00000000 wm4.spdif_iodefine.h.29.59f5d70150fa200a4d8ee50be1ee34c8
                           .group:00000000 wm4.spibsc_iodefine.h.29.f4930f8b8da1140200204513a363c76f
                           .group:00000000 wm4.sprite_iodefine.h.29.55796d1fa083a2457fea4ece974a192e
                           .group:00000000 wm4.ssif_iodefine.h.29.054ec6d95f487f631f16aee39c85c47a
                           .group:00000000 wm4.usb_iodefine.h.29.6dc44ea388ba227e8fdcfb33c315887b
                           .group:00000000 wm4.vdc_iodefine.h.29.db282ded1f052d8567fbbd3b61ce8f7a
                           .group:00000000 wm4.vin_iodefine.h.29.9b392e5601347d53e64be3272934e170
                           .group:00000000 wm4.wdt_iodefine.h.29.ed07bb44b797072f8c28b41c64fdca30
                           .group:00000000 wm4.r_stb_lld_rza2m.h.40.c61d2089eb09a49a0dd94a4e921c320f
                           .group:00000000 wm4.r_intc_lld_rza2m.h.35.148dee33e6a963828fdce2545668b517
                           .group:00000000 wm4.iobitmask.h.29.773e8f8428b0c21e1206a8c47a6d3927
                           .group:00000000 wm4.adc_iobitmask.h.29.48ba2821c8a4fc20022447ad9316d399
                           .group:00000000 wm4.bsc_iobitmask.h.29.115d15c4ad4b48e00598dcd62d33c637
                           .group:00000000 wm4.ceu_iobitmask.h.29.413b5b68bb3c2148786493166a57173e
                           .group:00000000 wm4.cpg_iobitmask.h.29.128911f0454a5339c74031b8d73e8fed
                           .group:00000000 wm4.csi2link_iobitmask.h.29.701c130cb17627664fe7c147084057cf
                           .group:00000000 wm4.dmac_iobitmask.h.29.98850e876107975c53dc0bb8ebb53eb5
                           .group:00000000 wm4.drpk_iobitmask.h.29.167e7cf6b1feb4d38b8903a46d8c35ac
                           .group:00000000 wm4.drw_iobitmask.h.29.71d46f2244f6e7ae6117fe6c41c5567d
                           .group:00000000 wm4.edmac_iobitmask.h.29.4e406d859155ba914663e1cf61cad89a
                           .group:00000000 wm4.eptpc_iobitmask.h.29.64bcd0a67db3a886572992ae6da8898c
                           .group:00000000 wm4.etherc_iobitmask.h.29.07b13cb10c426023658e5c51f952b6de
                           .group:00000000 wm4.gpio_iobitmask.h.29.ea8c1464682eb61f2d0763b97ed530f9
                           .group:00000000 wm4.gpt_iobitmask.h.29.94173800a704c5ba32e348ba97cd23cf
                           .group:00000000 wm4.hyper_iobitmask.h.29.f09febbc7b835674abe34ae75f3c700d
                           .group:00000000 wm4.imr2_iobitmask.h.29.fff702c4c9409266054e806327fa236b
                           .group:00000000 wm4.intc_iobitmask.h.29.6d3be2e47bf3d7eb7e91eeddcab863af
                           .group:00000000 wm4.irda_iobitmask.h.29.6f43dde454e599a1d4a8be2978ac9459
                           .group:00000000 wm4.jcu_iobitmask.h.29.9fd48851a81ff31733aa19b29e4846ad
                           .group:00000000 wm4.lvds_iobitmask.h.29.4a6f69c8911426fa05f0b05eab5f5e15
                           .group:00000000 wm4.mtu_iobitmask.h.29.0dfead439d92d73e6bac91e937399f90
                           .group:00000000 wm4.nandc_iobitmask.h.29.26dc88335e3fd43a64a25f5ba82d9db4
                           .group:00000000 wm4.octa_iobitmask.h.29.75dc3e3c70ac86c7551744de3991f583
                           .group:00000000 wm4.ostm_iobitmask.h.29.38ee9f4e1711e17bd3f38545ba631cde
                           .group:00000000 wm4.pl310_iobitmask.h.29.c1ef5625c0a9d67f24e89fe2fd7e4886
                           .group:00000000 wm4.pmg_iobitmask.h.29.d20cb8352080a58cf6cbf526935d968e
                           .group:00000000 wm4.poe3_iobitmask.h.29.3a3444cc2dbf606e2370573e16d57254
                           .group:00000000 wm4.poeg_iobitmask.h.29.5601eb8cf1161926d683c0720340f85d
                           .group:00000000 wm4.prr_iobitmask.h.29.52f8479a52e2236c122b5956e4bdbfce
                           .group:00000000 wm4.ptpedmac_iobitmask.h.29.494dcb2240ebba7fa20d0c2ab02007f7
                           .group:00000000 wm4.rcanfd_iobitmask.h.29.d172f89cbc4f253e32a4e10346bdc9f6
                           .group:00000000 wm4.rcan_iobitmask.h.29.c6f8b9b62e8fdc007f8b5f40c1f7e95d
                           .group:00000000 wm4.riic_iobitmask.h.29.faa52a36e584704b50a2c22ab62c84de
                           .group:00000000 wm4.rspi_iobitmask.h.29.2e257f44186c83ca40dbb0db2548623b
                           .group:00000000 wm4.rtc_iobitmask.h.29.2c82d3237997f1de7d2ac9d93855f3da
                           .group:00000000 wm4.scifa_iobitmask.h.29.c7af830569e0d6a26f3d66e3adc293d7
                           .group:00000000 wm4.scim_iobitmask.h.29.3b5e9d8b03a11c94acd93de96d2037f6
                           .group:00000000 wm4.sdmmc_iobitmask.h.29.21d47a25c0df1ed3d24cd6232ec3b4e7
                           .group:00000000 wm4.spdif_iobitmask.h.29.c16f83f628828ab24aa2b72615b93e69
                           .group:00000000 wm4.spibsc_iobitmask.h.29.8ade4a581f57cd5b82569a69eb5f0d67
                           .group:00000000 wm4.sprite_iobitmask.h.29.82888597faf7ebb3bc86b5f1018a2253
                           .group:00000000 wm4.ssif_iobitmask.h.29.482529b431f1ad627a02168620c61eee
                           .group:00000000 wm4.usb_iobitmask.h.29.aae4dfd463dfdd120bf5855c9dc97483
                           .group:00000000 wm4.vdc6_iobitmask.h.29.3ce0a3f9d2209ce71e4fec48b4ecb79a
                           .group:00000000 wm4.vin_iobitmask.h.29.576a1d6e4b2cf6cbd353044865e437f2
                           .group:00000000 wm4.wdt_iobitmask.h.29.c612db09eac33fb3da8d8aaee67287a9
                           .group:00000000 wm4.rza_io_regrw.h.33.07c1ee176b41ade23637426c80e4b86a

UNDEFINED SYMBOLS
RZA_IO_RegWrite_8
RZA_IO_RegRead_8
RZA_IO_RegWrite_16
RZA_IO_RegRead_16
R_STB_SetClockInitStatus
RZA_IO_RegWrite_32
R_SoftwareDelay
R_INTC_Init
R_CACHE_L2Init
R_CACHE_L1Init
__vector_mirror_table_base
__set_vbar
__enable_irq
__enable_fiq
main
